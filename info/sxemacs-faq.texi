\input texinfo.tex      @c -*- mode: texinfo; coding: iso-2022-8 -*-
@c %**start of header
@setfilename sxemacs-faq.info
@settitle Frequently asked questions about SXEmacs
@setchapternewpage off
@c %**end of header
@finalout
@titlepage
@title SXEmacs FAQ
@subtitle Frequently Asked Questions about SXEmacs @hfill Edition 22.1.4
@sp 1
@author Sebastian Freundt <hroptatyr@@sxemacs.org
@author Tony Rossini <rossini@@u.washington.edu>
@author Ben Wing <ben@@xemacs.org>
@author Chuck Thompson <cthomp@@xemacs.org>
@author Steve Baur <steve@@xemacs.org>
@author Andreas Kaempf <andreas@@sccon.com>
@author Christian Nybø <chr@@mediascience.no>
@author Sandra Wambold <wambold@@xemacs.org>
@page
@end titlepage

@ifinfo
@dircategory SXEmacs Editor
@direntry
* FAQ: (sxemacs-faq).            SXEmacs FAQ.
@end direntry
@end ifinfo

@node Top, Introduction, (dir), (dir)
@top SXEmacs FAQ

This is the guide to the SXEmacs Frequently Asked Questions list---a
compendium of questions and answers pertaining to one of the finest
programs ever written.  SXEmacs is much more than just a Text Editor.

SXEmacs Note:  Currently, this is the FAQ from XEmacs.  It will be
overhauled and updated in the very near future.  If you are reading this
note, @emph{please} remind us to do so.

This FAQ is freely redistributable.  This FAQ is distributed in the hope
that it will be useful, but WITHOUT ANY WARRANTY; without even the
implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.

In the near future this assortment of questions will be automatically
generated from a database.  We are currently evaluating the design
specifications, a general classification and technical necessities.

@c If you have a Web browser, the official hypertext version is at
@c @iftex
@c @*
@c @end iftex
@c @uref{http://www.xemacs.org/FAQ/xemacs-faq.html}

@c @ifset CANONICAL
@c @html
@c This document is available in several different formats:
@c @itemize @bullet
@c @item
@c @uref{xemacs-faq.txt, As a single ASCII file}, produced by
@c @code{makeinfo --no-headers}
@c @item
@c @uref{xemacs-faq.dvi, As a .dvi file}, as used with
@c @uref{http://www.tug.org, TeX.}
@c @item
@c As a PostScript file @uref{xemacs-faq-a4.ps, in A4 format},
@c as well as in @uref{xemacs-faq-letter.ps, letter format}
@c @item
@c In html format, @uref{xemacs-faq_1.html, split by chapter}, or in
@c @uref{xemacs-faq.html, one monolithic} document.
@c @item
@c The canonical version of the FAQ is the texinfo document
@c @uref{xemacs-faq.texi, man/xemacs-faq.texi}.
@c @item
@c If you do not have makeinfo installed, you may @uref{xemacs-faq.info,
@c download the faq} in info format, and install it in @file{<XEmacs
@c library directory>/info/}. For example in
@c @file{/usr/local/lib/xemacs-21.4/info/}.
@c 
@c @end itemize
@c 
@c @end html
@c 
@c @end ifset
@c 
@c end ifset points to CANONICAL

@menu
* Introduction::        Introduction, Policy, Credits.
* Installation::        Installation and Trouble Shooting.
* Customisation::       Customisation and Options.
* Subsystems::          Major Subsystems.
* Miscellaneous::       The Miscellaneous Stuff.
* MS Windows::          SXEmacs on Microsoft Windows.
* Current Events::      What the Future Holds.

@detailmenu

 --- The Detailed Node Listing ---

Introduction, Policy, Credits

* Q1.0.1::      What is SXEmacs?
* Q1.0.2::      What is the current version of SXEmacs?
* Q1.0.3::      Where can I find it?
* Q1.0.4::      Why another version of Emacs?
* Q1.0.5::      Why haven't XEmacs/SXEmacs and GNU Emacs merged?
* Q1.0.6::      Where can I get help?
* Q1.0.7::      Where are the mailing lists archived?
* Q1.0.8::      How do you pronounce SXEmacs?
* Q1.0.9::      What does SXEmacs look like?
* Q1.0.10::     Is there a port of SXEmacs to Microsoft ('95 or NT)?
* Q1.0.11::     Is there a port of SXEmacs to the Macintosh?
* Q1.0.12::     Is there a port of SXEmacs to NextStep?
* Q1.0.13::     Is there a port of SXEmacs to OS/2?
* Q1.0.14::     Where can I get a printed copy of the SXEmacs users manual?

Policies:
* Q1.1.1::      What is the FAQ editorial policy?
* Q1.1.2::      How do I become a beta tester?
* Q1.1.3::      How do I contribute to SXEmacs itself?

Credits:
* Q1.2.1::      Who wrote XEmacs? Who wrote SXEmacs?
* Q1.2.2::      Who contributed to this version of the FAQ?
* Q1.2.3::      Who contributed to the FAQ in the past?

Internationalisation:
* Q1.3.1::      What is the status of internationalisation support aka MULE (including Asian language support?
* Q1.3.2::      How can I help with internationalisation?
* Q1.3.3::      How do I type non-ASCII characters?
* Q1.3.4::      Can SXEmacs messages come out in a different language?
* Q1.3.5::      Please explain the various input methods in MULE/SXEmacs
* Q1.3.6::      How do I portably code for MULE/XEmacs/SXEmacs?
* Q1.3.7::      How about Cyrillic Modes?
* Q1.3.8::      Does SXEmacs support Unicode?
* Q1.3.9::      How does SXEmacs display Unicode?

Getting Started:
* Q1.4.1::      What is an @file{init.el} or @file{.emacs} and is there a sample one?
* Q1.4.2::      Can I use the same @file{init.el}/@file{.emacs} with other Emacsen?
* Q1.4.3::      Any good SXEmacs tutorials around?
* Q1.4.4::      May I see an example of a useful SXEmacs Lisp function?
* Q1.4.5::      And how do I bind it to a key?
* Q1.4.6::      What's the difference between a macro and a function?

Installation and Trouble Shooting

* Q2.0.1::      Running SXEmacs without installing.
* Q2.0.2::      SXEmacs is too big.
* Q2.0.3::      Compiling SXEmacs with Netaudio. @c what?!
* Q2.0.4::      Problems with Linux and ncurses.
* Q2.0.5::      Do I need X11 to run SXEmacs?
* Q2.0.6::      I'm having strange crashes.  What do I do?
* Q2.0.7::      Libraries in non-standard locations.
* Q2.0.8::      can't resolve symbol _h_errno
* Q2.0.9::      Where do I find external libraries?
* Q2.0.10::     After I run configure I find a coredump, is something wrong?
* Q2.0.11::     SXEmacs can't resolve host names.
* Q2.0.12::     Why can't I strip SXEmacs?
* Q2.0.13::     I don't need no steenkin' packages.  Do I?
* Q2.0.14::     How do I figure out which packages to install?
* Q2.0.15::     EFS fails with "500 AUTH not understood" (NEW)

Trouble Shooting:
* Q2.1.1::      SXEmacs just crashed on me!
* Q2.1.2::      Cryptic Minibuffer messages.
* Q2.1.3::      Translation Table Syntax messages at Startup.
* Q2.1.4::      Startup warnings about deducing proper fonts?
* Q2.1.5::      SXEmacs cannot connect to my X Terminal.
* Q2.1.6::      SXEmacs just locked up my Linux X server.
* Q2.1.7::      HP Alt key as Meta.
* Q2.1.8::      got (wrong-type-argument color-instance-p nil)!
* Q2.1.9::      SXEmacs causes my OpenWindows 3.0 server to crash.
* Q2.1.10::     Warnings from incorrect key modifiers.
* Q2.1.11::     Can't instantiate image error... in toolbar
* Q2.1.12::     Regular Expression Problems on DEC OSF1.
* Q2.1.13::     HP/UX 10.10 and @code{create_process} failure
* Q2.1.14::     @kbd{C-g} doesn't work for me.  Is it broken?
* Q2.1.15::     How to debug a SXEmacs problem with a debugger.
* Q2.1.16::     SXEmacs crashes in @code{strcat} on HP/UX 10.
* Q2.1.17::     @samp{Marker does not point anywhere}.
* Q2.1.18::     SXEmacs is outputting lots of X errors.
* Q2.1.19::     SXEmacs does not follow the local timezone.
* Q2.1.20::     @samp{Symbol's function definition is void: hkey-help-show.}
* Q2.1.21::     [This question intentionally left blank]
* Q2.1.22::     SXEmacs seems to take a really long time to do some things.
* Q2.1.23::     Movemail on Linux does not work for SXEmacs.
* Q2.1.24::     SXEmacs won't start without network.
* Q2.1.25::     After upgrading, SXEmacs won't do `foo' any more!

Customisation and Options

* Q3.0.1::      What version of Emacs am I running?
* Q3.0.2::      How do I evaluate Elisp expressions?
* Q3.0.3::      @code{(setq tab-width 6)} behaves oddly.
* Q3.0.4::      How can I add directories to the @code{load-path}?
* Q3.0.5::      How to check if a lisp function is defined?
* Q3.0.6::      Can I force the output of @code{(face-list)} to a buffer?
* Q3.0.7::      Font selections don't get saved after @code{Save Options}.
* Q3.0.8::      How do I make a single minibuffer frame?
* Q3.0.9::      What is @code{Customize}?

X Window System & Resources:
* Q3.1.1::      Where is a list of X resources?
* Q3.1.2::      How can I detect a color display?
* Q3.1.3::      [This question intentionally left blank]
* Q3.1.4::      [This question intentionally left blank]
* Q3.1.5::      How can I get the icon to just say @samp{SXEmacs}?
* Q3.1.6::      How can I have the window title area display the full path?
* Q3.1.7::      @samp{sxemacs -name junk} doesn't work?
* Q3.1.8::      @samp{-iconic} doesn't work.

Textual Fonts & Colors:
* Q3.2.1::      How can I set color options from @file{init.el}?
* Q3.2.2::      How do I set the text, menu and modeline fonts?
* Q3.2.3::      How can I set the colors when highlighting a region?
* Q3.2.4::      How can I limit color map usage?
* Q3.2.5::      My tty supports color, but SXEmacs doesn't use them.
* Q3.2.6::      Can I have pixmap backgrounds in SXEmacs?
* Q3.2.7::      How do I display non-ASCII characters?

The Modeline:
* Q3.3.1::      How can I make the modeline go away?
* Q3.3.2::      How do you have SXEmacs display the line number in the modeline?
* Q3.3.3::      How do I get SXEmacs to put the time of day on the modeline?
* Q3.3.4::      How do I turn off current chapter from AUC TeX modeline?
* Q3.3.5::      How can one change the modeline color based on the mode used?

Multiple Device Support:
* Q3.4.1::      How do I open a frame on another screen of my multi-headed display?
* Q3.4.2::      Can I really connect to a running SXEmacs after calling up over a modem?  How?

The Keyboard:
* Q3.5.1::      How can I bind complex functions (or macros) to keys?
* Q3.5.2::      How can I stop down-arrow from adding empty lines to the bottom of my buffers?
* Q3.5.3::      How do I bind C-. and C-; to scroll one line up and down?
* Q3.5.4::      Globally binding @kbd{Delete}?
* Q3.5.5::      Scrolling one line at a time.
* Q3.5.6::      How to map @kbd{Help} key alone on Sun type4 keyboard?
* Q3.5.7::      How can you type in special characters in SXEmacs?
* Q3.5.8::      [This question intentionally left blank]
* Q3.5.9::      How do I make the Delete key delete forward?
* Q3.5.10::     Can I turn on @dfn{sticky} modifier keys?
* Q3.5.11::     How do I map the arrow keys?

The Cursor:
* Q3.6.1::      Is there a way to make the bar cursor thicker?
* Q3.6.2::      Is there a way to get back the old block cursor where the cursor covers the character in front of the point?
* Q3.6.3::      Can I make the cursor blink?

The Mouse and Highlighting:
* Q3.7.1::      How can I turn off Mouse pasting?
* Q3.7.2::      How do I set control/meta/etc modifiers on mouse buttons?
* Q3.7.3::      Clicking the left button does not do anything in buffer list.
* Q3.7.4::      How can I get a list of buffers when I hit mouse button 3?
* Q3.7.5::      Why does cut-and-paste not work between SXEmacs and a cmdtool?
* Q3.7.6::      How I can set SXEmacs up so that it pastes where the text cursor is?
* Q3.7.7::      How do I select a rectangular region?
* Q3.7.8::      Why does @kbd{M-w} take so long?

The Menubar and Toolbar:
* Q3.8.1::      How do I get rid of the menu (or menubar)?
* Q3.8.2::      Can I customise the basic menubar?
* Q3.8.3::      How do I control how many buffers are listed in the menu @code{Buffers} list?
* Q3.8.4::      Resources like @code{Emacs*menubar*font} are not working?
* Q3.8.5::      How can I bind a key to a function to toggle the toolbar?

Scrollbars:
* Q3.9.1::      How can I disable the scrollbar?
* Q3.9.2::      How can one use resources to change scrollbar colors?
* Q3.9.3::      Moving the scrollbar can move the point; can I disable this?
* Q3.9.4::      How can I turn off automatic horizontal scrolling in specific modes?

Text Selections:
* Q3.10.1::     How can I turn off or change highlighted selections?
* Q3.10.2::     How do I get that typing on an active region removes it?
* Q3.10.3::     Can I turn off the highlight during isearch?
* Q3.10.4::     How do I turn off highlighting after @kbd{C-x C-p} (mark-page)?
* Q3.10.5::     The region disappears when I hit the end of buffer while scrolling.
* Q3.10.6::     Why is killing so slow?

Major Subsystems

* Q4.0.1::      How do I set up VM to retrieve remote mail using POP?
* Q4.0.2::      How do I get VM to filter mail for me?
* Q4.0.3::      How can I get VM to automatically check for new mail?
* Q4.0.4::      [This question intentionally left blank]
* Q4.0.5::      How do I get my outgoing mail archived?
* Q4.0.6::	I have various addresses at which I receive mail.  How can I
		  tell VM to ignore them when doing a "reply-all"?
* Q4.0.7::      Is there a mailing list or FAQ for VM?
* Q4.0.8::      Remote mail reading with VM.
* Q4.0.9::      rmail or VM gets an error incorporating new mail.
* Q4.0.10::     How do I make VM stay in a single frame?
* Q4.0.11::     How do I make VM or mh-e display graphical smilies?
* Q4.0.12::     Customisation of VM not covered in the manual or here.

Web browsing with W3:
* Q4.1.1::      What is W3?
* Q4.1.2::      How do I run W3 from behind a firewall?
* Q4.1.3::      Is it true that W3 supports style sheets and tables?

Reading Netnews and Mail with Gnus:
* Q4.2.1::      GNUS, (ding) Gnus, Gnus 5, September Gnus, Red Gnus,
		  Quassia Gnus, Pterodactyl Gnus, Oort Gnus, argh!
* Q4.2.2::      [This question intentionally left blank]
* Q4.2.3::      How do I make Gnus stay within a single frame?
* Q4.2.4::      How do I customize the From: line?

Other Mail & News:
* Q4.3.1::      How can I read and/or compose MIME messages?
* Q4.3.2::      What is TM and where do I get it?
* Q4.3.3::      Why isn't this @code{movemail} program working?
* Q4.3.4::      Movemail is also distributed by Netscape?  Can that cause problems?
* Q4.3.5::      Where do I find pstogif (required by tm)?

Sparcworks, EOS, and WorkShop:
* Q4.4.1::      What is SPARCworks, EOS, and WorkShop
<<<<<<< HEAD
* Q4.4.2::      How do I start the Sun Workshop support in SXEmacs?
=======
>>>>>>> master

Energize:
* Q4.5.1::      What is/was Energize?

Infodock:
* Q4.6.1::      What is Infodock?

Other Unbundled Packages:
* Q4.7.1::      What is AUC TeX?  Where do you get it?
* Q4.7.2::      Are there any Emacs Lisp Spreadsheets?
* Q4.7.3::      [This question intentionally left blank]
* Q4.7.4::      Problems installing AUC TeX
* Q4.7.5::      Is there a reason for an Emacs package not to be included in SXEmacs?
* Q4.7.6::      Is there a MatLab mode?
* Q4.7.7::      Can I edit files on other hosts?

The Miscellaneous Stuff

* Q5.0.1::      How can I do source code highlighting using font-lock?
* Q5.0.2::      I do not like cc-mode.  How do I use the old c-mode?
* Q5.0.3::      How do I get @samp{More} Syntax Highlighting on by default?
* Q5.0.4::      How can I enable auto-indent and/or Filladapt?
* Q5.0.5::      How can I get SXEmacs to come up in text/auto-fill mode by default?
* Q5.0.6::      How do I start up a second shell buffer?
* Q5.0.7::      Telnet from shell filters too much.
* Q5.0.8::      Why does edt emulation not work?
* Q5.0.9::      How can I emulate VI and use it as my default mode?
* Q5.0.10::     [This question intentionally left blank]
* Q5.0.11::     [This question intentionally left blank]
* Q5.0.12::     How do I disable gnuserv from opening a new frame?
* Q5.0.13::     How do I start gnuserv so that each subsequent SXEmacs is a client?
* Q5.0.14::     Strange things are happening in Shell Mode.
* Q5.0.15::     Where do I get the latest CC Mode?
* Q5.0.16::     I find auto-show-mode disconcerting.  How do I turn it off?
* Q5.0.17::     How can I get two instances of info?
* Q5.0.18::     [This question intentionally left blank]
* Q5.0.19::     Is there something better than LaTeX mode?
* Q5.0.20::     Is there a way to start a new SXEmacs if there's no
		  gnuserv running, and otherwise use gnuclient?

Emacs Lisp Programming Techniques:
* Q5.1.1::      The difference in key sequences between XEmacs/SXEmacs and GNU Emacs?
* Q5.1.2::      Can I generate "fake" keyboard events?
* Q5.1.3::      Could you explain @code{read-kbd-macro} in more detail?
* Q5.1.4::      What is the performance hit of @code{let}?
* Q5.1.5::      What is the recommended use of @code{setq}?
* Q5.1.6::      What is the typical misuse of @code{setq} ?
* Q5.1.7::      I like the @code{do} form of cl, does it slow things down?
* Q5.1.8::      I like recursion, does it slow things down?
* Q5.1.9::      How do I put a glyph as annotation in a buffer?
* Q5.1.10::     @code{map-extents} won't traverse all of my extents!
* Q5.1.11::	My elisp program is horribly slow.  Is there an easy way to
		  find out where it spends time?

Sound:
* Q5.2.1::      How do I turn off the sound?
* Q5.2.2::      How do I get funky sounds instead of a boring beep?
* Q5.2.3::      What's NAS, how do I get it?
* Q5.2.4::      Sunsite sounds don't play.
@c extend me

Miscellaneous:
* Q5.3.1::      How do you make SXEmacs indent CL if-clauses correctly?
* Q5.3.2::      [This question intentionally left blank]
* Q5.3.3::      How can I print WYSIWYG a font-locked buffer?
* Q5.3.4::      Getting @kbd{M-x lpr} to work with postscript printer.
* Q5.3.5::      How do I specify the paths that SXEmacs uses for finding files?
* Q5.3.6::      [This question intentionally left blank]
* Q5.3.7::      Can I have the end of the buffer delimited in some way?
* Q5.3.8::      How do I insert today's date into a buffer?
* Q5.3.9::      Are only certain syntactic character classes available for abbrevs?
* Q5.3.10::     How can I get those oh-so-neat X-Face lines?
* Q5.3.11::     How do I add new Info directories?
* Q5.3.12::     What do I need to change to make printing work?

SXEmacs on MS Windows

General Info:
* Q6.0.1::      Why did SXEmacs cut all support for Windows?

What the Future Holds

* Q7.0.1::      What new features will be in SXEmacs soon?
* Q7.0.2::      What's new in SXEmacs 22.1.0?
* Q7.0.3::      What's new in SXEmacs 22.1.1?
* Q7.0.4::      What's new in SXEmacs 22.1.2?
* Q7.0.5::      What's new in SXEmacs 22.1.3?
* Q7.0.6::      What's new in SXEmacs 22.1.4?

@end detailmenu
@end menu

@c missing FAQs:
@c - Where is the RedHat/Fedora/Slackware/Debian/SuSE/Mandrake/foobar
@c   package?
@c - What is this tla thingy?


@node Introduction, Installation, Top, Top
@unnumbered 1 Introduction, Policy, Credits

Learning SXEmacs is a lifelong activity.  Even people who have used Emacs
for years keep discovering new features.  Therefore this document cannot
be complete.  Instead it is aimed at the person who is either
considering SXEmacs for their own use, or has just obtained it and is
wondering what to do next.  It is also useful as a reference to
available resources.

The origin of this FAQ is well beyond SXEmacs-times and stems from the
XEmacs crew.  The initiator was @email{rossini@@biostat.washington.edu,
Anthony Rossini}.  The tale goes he got tired of hearing JWZ complain
about repeatedly having to answer questions.  @email{ben@@xemacs.org,
Ben Wing} and @email{cthomp@@xemacs.org, Chuck Thompson}, the principal
authors of XEmacs, then took over and Ben did a massive update
reorganising the whole thing.

The previous version was converted to hypertext format, and edited by
@email{steve@@xemacs.org, Steven L. Baur}.  It was converted back to
texinfo by @email{hniksic@@xemacs.org, Hrvoje Niksic}.  The FAQ was then
maintained by @email{andreas@@sccon.com, Andreas Kaempf}, who passed it
on to Christian Nybø.

If you notice any errors or items which should be added or amended to
this FAQ please send email to @email{sxemacs-devel@@sxemacs.org}.
Include @samp{SXEmacs FAQ} on the Subject: line.

@menu
Introduction:
* Q1.0.1::      What is SXEmacs?
* Q1.0.2::      What is the current version of SXEmacs?
* Q1.0.3::      Where can I find it?
* Q1.0.4::      Why another version of Emacs?
* Q1.0.5::      Why haven't XEmacs/SXEmacs and GNU Emacs merged?
* Q1.0.6::      Where can I get help?
* Q1.0.7::      Where are the mailing lists archived?
* Q1.0.8::      How do you pronounce SXEmacs?
* Q1.0.9::      What does SXEmacs look like?
* Q1.0.10::     Is there a port of SXEmacs to Microsoft ('95 or NT)?
* Q1.0.11::     Is there a port of SXEmacs to the Macintosh?
* Q1.0.12::     Is there a port of SXEmacs to NextStep?
* Q1.0.13::     Is there a port of SXEmacs to OS/2?
* Q1.0.14::     Where can I get a printed copy of the SXEmacs users manual?

Policies:
* Q1.1.1::      What is the FAQ editorial policy?
* Q1.1.2::      How do I become a beta tester?
* Q1.1.3::      How do I contribute to SXEmacs itself?

Credits:
* Q1.2.1::      Who wrote XEmacs? Who wrote SXEmacs?
* Q1.2.2::      Who contributed to this version of the FAQ?
* Q1.2.3::      Who contributed to the FAQ in the past?

Internationalisation:
* Q1.3.1::      What is the status of internationalisation support aka MULE (including Asian language support?
* Q1.3.2::      How can I help with internationalisation?
* Q1.3.3::      How do I type non-ASCII characters?
* Q1.3.4::      Can SXEmacs messages come out in a different language?
* Q1.3.5::      Please explain the various input methods in MULE/SXEmacs
* Q1.3.6::      How do I portably code for MULE/XEmacs/SXEmacs?
* Q1.3.7::      How about Cyrillic Modes?
* Q1.3.8::      Does SXEmacs support Unicode?
* Q1.3.9::      How does SXEmacs display Unicode?

Getting Started:
* Q1.4.1::      What is an @file{init.el} or @file{.emacs} and is there a sample one?
* Q1.4.2::      Can I use the same @file{init.el}/@file{.emacs} with other Emacsen?
* Q1.4.3::      Any good SXEmacs tutorials around?
* Q1.4.4::      May I see an example of a useful SXEmacs Lisp function?
* Q1.4.5::      And how do I bind it to a key?
* Q1.4.6::      What's the difference between a macro and a function?
@end menu

@unnumberedsec 1.0: Introduction

@node Q1.0.1
@unnumberedsec Q1.0.1: What is SXEmacs?

SXEmacs is a powerful, highly customisable open source text editor and
application development system, with full GUI support.  It is protected
under the GNU Public License and related to other versions of Emacs, in
particular XEmacs and GNU Emacs.  Its emphasis is on modern graphical
user interface support and an open software development model, similar
to Linux.

SXEmacs is a recent fork of the popular XEmacs and runs on nearly all
versions of Unix in existence.


@node Q1.0.2
@unnumberedsec Q1.0.2: What is the current version of SXEmacs?

SXEmacs 22.1.4 is the latest released version.
The current development line will become 22.1.5.


@node Q1.0.3
@unnumberedsec Q1.0.3: Where can I find it?

The canonical source can be found via anonymous FTP at:

@example
@uref{ftp://ftp.sxemacs.org/sxemacs/}
@end example

There are also snapshots of the current development line available.
However, the preferred method to obtain such ``snapshots'' is via tla
(GNU arch):

@example
tla register-archive http://arch.sxemacs.org/2006
tla get steve@@sxemacs.org--2006/sxemacs--main--22.1.5 sxemacs
@end example


@node Q1.0.4
@unnumberedsec Q1.0.4: Why another version of Emacs?

First of all, the situation got a little complicated.  With SXEmacs
regarded as a featurised, cleaned-up XEmacs, there are only two major
Emacs flavours.  Disregarding that, we have three.  Thus let us compare
GNU Emacs to SXEmacs/XEmacs in the first place, and afterwards do the
comparison SXEmacs vs. XEmacs.


@unnumberedsubsec Q1.0.4.1 GNU Emacs vs. SXEmacs/XEmacs

Here is a list of some of the reasons why we think you might
consider using it:
 
@itemize @bullet
@item
It looks nicer.
 
@item
The XEmacs and SXEmacs maintainers, especially the SXEmacs
maintainers, are generally more receptive to suggestions than the GNU
Emacs maintainers.

@item
Many, many more bundled packages than GNU Emacs.

@item
Packages at all.

@c @c does not apply anymore
@c @item
@c Face support on TTY's.

@c @c does not apply anymore
@c @item
@c A built-in toolbar.

@c @c does not apply anymore
@c @item
@c Some internationalisation support (including full MULE support, if
@c compiled with it).

@c @c does not apply anymore
@c @item
@c Variable-width fonts.

@c @c does not apply anymore
@c @item
@c Variable-height lines.

@item
Marginal annotations.

@item
<<<<<<< HEAD
ToolTalk support.

@item
=======
>>>>>>> master
XEmacs can be used as an Xt widget, and can be embedded within another
application.

@c @c does not apply anymore
@c @item
@c Horizontal and vertical scrollbars (using real toolkit scrollbars).

@item
Better APIs (and performance) for attaching fonts, colors, and other
properties to text.
 
@c @c does not apply anymore
@c @item
@c The ability to embed arbitrary graphics in a buffer.

@item
Completely compatible (at the C level) with the Xt-based toolkits.

@item
Native support for PostgreSQL databases, LDAP servers and Berkeley DB.

@item
Support for GMP numbers (multi-precision integers, quotients and
floats).

@item
Support for multiple tty connections.

@c the FSF guys' implementation is a disease!
@item
Sound support.

@end itemize


@unnumberedsubsec Q1.0.4.2 SXEmacs vs. XEmacs

SXEmacs' strengths are clearly its feature list and its performance.
Also, these were the main reasons to fork.  XEmacs maintainers became
more and more uninterested in useful additions, reductions and
optimisations on the C-level.

@itemize
@item
Foreign Function Interface (FFI).

@item
PostgreSQL notify support.

@item
Native OpenSSL support.

@item
Support for mpfr floats, Gaussian and complex numbers, quaternions and
residue class rings.

@item
Support for raw strings.

@item
Much faster hashing functions.

@item
Support for internal URL access via cURL.

@item
Support for various image formats: Any format that ImageMagick is able
to handle.

@item
Support for modern sound libraries and sound servers: ESD, Polyp,
aRts, Jack, ALSA, and ao

@item
Support for various media formats (provided by external libraries):
Any format that FFmpeg, sndfile, SoX, MAD and gstreamer can handle.

@item
Support for the implementation network services through the use of
network server stream.

@end itemize



@node Q1.0.5
@unnumberedsec Q1.0.5: Why haven't XEmacs/SXEmacs and GNU Emacs Merged?

There are currently irreconcilable differences in the views about
technical, programming, design and organisational matters between RMS
and the SXEmacs/XEmacs development team which provide little hope for a
merge to take place in the short-term future.


@node Q1.0.6
@unnumberedsec Q1.0.6: Where can I get help?

Probably the easiest way, if everything is installed, is to use Info, by
pressing @kbd{C-h i}, or looking for an Info item on the
Help Menu.  @kbd{M-x apropos} can be used to look for particular commands.

For items not found in the manual, try reading this FAQ and reading the
Usenet group comp.emacs.xemacs.

If you choose to post to a newsgroup, @strong{please use
comp.emacs.xemacs}.  Please do not post SXEmacs/XEmacs related questions
to gnu.emacs.help.

SXEmacs is an official group at the Freenode IRC network (formerly
OPN).  Join us at @uref{irc://irc.freenode.net/sxemacs}.

If you cannot post, nor read Usenet news, nor want to join us at IRC,
there is a mailing at @email{sxemacs-devel@@sxemacs.org} for general
and developing issues.


@node Q1.0.7
@unnumberedsec Q1.0.7: Where are the mailing lists archived?

The archives can be found at
@uref{http://www.sxemacs.org/list-archives/html/sxemacs-devel/}.

Subscription can be done via
@uref{http://www.sxemacs.org/mailman/listinfo}


@node Q1.0.8
@unnumberedsec Q1.0.8: How do you pronounce SXEmacs?

The most common pronounciation is @samp{sexy macs}.


@node Q1.0.9
@unnumberedsec Q1.0.9: What does SXEmacs look like?

Look at the screenshot section at @uref{http://www.sxemacs.org}.


@node Q1.0.10
@unnumberedsec Q1.0.10: Is there a port of SXEmacs to Microsoft ('95 or NT)?

Of course not!  The SXEmacs developers have so much fun stripping all of
the erroneous code and workaround-hacks related to Microsoft Windows.


@node Q1.0.11
@unnumberedsec Q1.0.11: Is there a port of SXEmacs to the Macintosh?

Good question. Is there?


@node Q1.0.12
@unnumberedsec Q1.0.12: Is there a port of SXEmacs to NextStep?

@c Carl Edman, apparently no longer at @email{cedman@@princeton.edu}, did
@c the port of GNU Emacs to NeXTstep and expressed interest in doing the
@c XEmacs port, but never went any farther.

A what?


@node Q1.0.13
@unnumberedsec Q1.0.13: Is there a port of SXEmacs to OS/2?

@c No, but Alexander Nikolaev <avn_1251@@mail.ru> is working on it.

Aaaaargh. You could have also asked: Is there a port of SXEmacs to my
hamster.


@node Q1.0.14
@unnumberedsec Q1.0.14: Where can I obtain a printed copy of the SXEmacs User's Manual?

Pre-printed manuals are not available.  If you are familiar with
TeX, you can generate your own manual from the SXEmacs sources.

HTML and Postscript versions of SXEmacs manuals are available from the
SXEmacs web site at @uref{http://www.sxemacs.org}.
@c are they?


@node Q1.1.1
@unnumberedsec 1.1: Policies
@unnumberedsec Q1.1.1: What is the FAQ editorial policy?

The FAQ is actively maintained and modified regularly.  All links should
be up to date.  

If you think you have a better way of answering a question, or think a
question should be included, we'd like to hear about it.
Please make sure that @samp{SXEmacs FAQ} appears on the Subject: line
if you prefer to send us a mail.  If you would like to use IRC
instead, please make sure that someone actively responds to your
request.  We usually stay in the channel while we are asleep, but
if you join, post the request and leave again, we have no means to
get into contact with you again.

Questions and answers included into the FAQ will be edited for
spelling and grammar and will be attributed.


@node Q1.1.2
@unnumberedsec Q1.1.2: How do I become a beta tester?

We have no formal way.  Also there are no presumptions.  Just
subscribe to the mailing list @email{sxemacs-devel@@sxemacs.org} and
say hello or join us at IRC.

Be prepared to get your hands dirty, as beta testers are expected to
identify problems as best they can.


@node Q1.1.3
@unnumberedsec Q1.1.3: How do I contribute to SXEmacs itself?

Quoting a famous developer:

I know the answer exactly.
Gotta run.


@node Q1.2.1
@unnumberedsec 1.2: Credits
@unnumberedsec Q1.2.1: Who wrote SXEmacs?

SXEmacs is the result of the time and effort of many people.  The
developers responsible for recent releases can be viewed by
@kbd{M-x about-sxemacs} or the @samp{About SXEmacs} item in the Help
menu.

@c @itemize @bullet
@c @item @email{martin@@xemacs.org, Martin Buchholz}
@c @html
@c <br><img src="mrb.jpeg" alt="Portrait of Martin Buchholz"><br>
@c @end html
@c 
@c 
@c @item @email{stephen@@xemacs.org, Stephen Turnbull}
@c 
@c 
@c @item @email{ben@@xemacs.org, Ben Wing}
@c @html
@c <br><img src="wing.gif" alt="Portrait of Ben Wing"><br>
@c @end html
@c 
@c 
@c @item @email{hniksic@@xemacs.org, Hrvoje Niksic}
@c 
@c @html
@c <br><img src="hniksic.jpeg" alt="Portrait of Hrvoje Niksic"><br>
@c @end html
@c 
@c @end itemize
@c 
@c The developers responsible for older releases were:
@c 
@c @itemize @bullet
@c @item @email{steve@@xemacs.org, Steve Baur}
@c 
@c @html
@c <br><img src="steve.gif" alt="Portrait of Steve Baur"><br>
@c @end html
@c 
@c @item @email{cthomp@@xemacs.org, Chuck Thompson}
@c @html
@c <br><img src="cthomp.jpeg" alt="Portrait of Chuck Thompson"><br>
@c @end html
@c 
@c @item @email{jwz@@jwz.org, Jamie Zawinski}
@c @html
@c <br><img src="jwz.gif" alt="Portrait of Jamie Zawinski"><br>
@c @end html
@c 
@c @item @email{mly@@adoc.xerox.com, Richard Mlynarik}
@c 
@c Steve Baur was the primary maintainer for 19.15 through 21.0.
@c 
@c Chuck Thompson and Ben Wing were the maintainers for 19.11 through 19.14
@c and heavy code contributors for 19.8 through 19.10.
@c 
@c Jamie Zawinski was the maintainer for 19.0 through 19.10 (the entire
@c history of Lucid Emacs).  Richard Mlynarik was a heavy code contributor
@c to 19.6 through 19.8.
@c 
@c @end itemize
@c 
@c Along with many other contributors, partially enumerated in the
@c @samp{About XEmacs} option in the Help menu.


@node Q1.2.2
@unnumberedsec Q1.2.2: Who contributed to this version of the FAQ?

The following people contributed valuable suggestions to building this
version of the FAQ (listed in alphabetical order):

@itemize @bullet
@item @email{steve@@xemacs.org, SL Baur}

@item @email{hroptatyr@@sxemacs.org, Sebastian Freundt}

@item @email{hniksic@@xemacs.org, Hrvoje Niksic}

@item @email{Aki.Vehtari@@hut.fi, Aki Vehtari}

@end itemize


@node Q1.2.3
@unnumberedsec Q1.2.3: Who contributed to the FAQ in the past?

This is only a partial list, as many names were lost in a hard disk
crash some time ago.

@itemize @bullet
@item @email{binge@@aloft.att.com, Curtis.N.Bingham}

@item @email{bruncott@@dormeur.inria.fr, Georges Brun-Cottan}

@item @email{rjc@@cogsci.ed.ac.uk, Richard Caley}

@item @email{cognot@@ensg.u-nancy.fr, Richard Cognot}

@item @email{daku@@nortel.ca, Mark Daku}

@item @email{wgd@@martigny.ai.mit.edu, William G. Dubuque}

@item @email{eeide@@cs.utah.edu, Eric Eide}

@item @email{af@@biomath.jussieu.fr, Alain Fauconnet}

@item @email{cflatter@@nrao.edu, Chris Flatters}

@item @email{ginsparg@@adra.com, Evelyn Ginsparg}

@item @email{hall@@aplcenmp.apl.jhu.edu, Marty Hall}

@item @email{dkindred@@cmu.edu, Darrell Kindred}

@item @email{dmoore@@ucsd.edu, David Moore}

@item @email{arup+@@cmu.edu, Arup Mukherjee}

@item @email{nickel@@prz.tu-berlin.de, Juergen Nickelsen}

@item @email{powell@@csl.ncsa.uiuc.edu, Kevin R. Powell}

@item @email{dworkin@@ccs.neu.edu, Justin Sheehy}

@item @email{stig@@hackvan.com, Stig}

@item @email{Aki.Vehtari@@hut.fi, Aki Vehtari}
@end itemize


@node Q1.3.1
@unnumberedsec 1.3: Internationalisation
@unnumberedsec Q1.3.1: What is the status of internationalisation support aka MULE (including Asian language support?

Both the stable and development versions of SXEmacs include
internationalisation support (aka MULE).  MULE currently works on
Unix and Linux systems.  Binaries compiled without MULE support run
faster than MULE capable SXEmacsen.


@node Q1.3.2
@unnumberedsec Q1.3.2: How can I help with internationalisation?

If you would like to help, you can use the usual ways to get into
contact with us, that is join the mailing list
@email{sxemacs-devel@@sxemacs.org} or join us at
@uref{irc://irc.freenode.net/sxemacs}.

Especially needed are people who speak/write languages other than
English, who are willing to use SXEmacs/MULE regularly, and have some
experience with Elisp.

Translations of the TUTORIAL and man page are welcome, and SXEmacs
does support multilingual menus, but we have few current translations.

@xref{Q1.1.2}.


@node Q1.3.3
@unnumberedsec Q1.3.3: How do I type non-ASCII characters?

See question 3.5.7 (@pxref{Q3.5.7}) in part 3 of this FAQ for some
simple methods that also work in non-MULE builds of SXEmacs (but only for
one-octet coded character sets, and mostly for ISO 8859/1).  Many of the
methods available for Cyrillic (@pxref{Q1.3.7}) work without MULE.
MULE has more general capabilities.  @xref{Q1.3.5}.

@xref{Q3.2.7}, which covers display of non-ASCII characters.

@node Q1.3.4
@unnumberedsec Q1.3.4: Can SXEmacs messages come out in a different language?

The message-catalog support was written but is badly bit-rotted.
SXEmacs 22.2 may do so, but it is not of high priority currently.
Again, if you are willing to help, contact us.

However, menubar localisation @emph{does} work.  To enable it, add to
your @file{Emacs} file entries like this:

@example
Emacs*XlwMenu.resourceLabels:                   True
Emacs*XlwMenu.file.labelString:                 Fichier
Emacs*XlwMenu.openInOtherWindow.labelString: 	In anderem Fenster oeffnen
@end example

The name of the resource is derived from the non-localised entry by
removing punctuation and capitalizing as above.


@node Q1.3.5
@unnumberedsec Q1.3.5: Please explain the various input methods in MULE/SXEmacs

Mule supports a wide variety of input methods.  There are three basic
classes: Lisp implementations, generic platform support, and library
interfaces.

@emph{Lisp implementations} include Quail, which provides table-driven
input methods for almost all the character sets that Mule supports
(including all of the ISO 8859 family, the Indic languages, Thai, and
so on), and SKK, for Japanese.  (SKK also supports an interface to an
external "dictionary server" process.)  Quail supports both typical
"dead-key" methods (eg, in the "latin-1-prefix" method, @kbd{" a}
produces ä, LATIN SMALL LETTER A WITH DIAERESIS), and the complex
dictionary-based phonetic methods used for Asian ideographic languages
like Chinese.

Lisp implementations can be less powerful (but they are not perceptibly
inefficient), and of course are not portable to non-Emacs applications.
The incompatibility can be very annoying.  On the other hand, they
require no special platform support or external libraries, so if you can
display the characters, Mule can input them for you and you can edit,
anywhere.

@emph{Generic platform support} is currently limited to the X Input
Method (XIM) framework, but IIIMF (Sun's Internet-Intranet Input
Method Framework) support is extremely desirable.  XIM is enabled at
build time by use of the @samp{--with-xim} flag to @code{configure}.
For use of XIM, see your platform documentation.  However, normally
the input method you use is specified via the @samp{LANG} and
@samp{XMODIFIERS} environment variables.

Of course, input skills are portable across most applications.  However,
especially in modern GUI systems the habit of using bucky bits has
fallen into sad disuse, and many XIM systems are poorly configured for
use with Emacs.  For example, the kinput2 input manager (a separate
process providing an interface between Japanese dictionary servers such
as Canna and Wnn, and the application) tends to gobble up keystrokes
generating Meta characters.  This means that to edit while using an XIM
input method, you must toggle the input method off every time you want
to use @kbd{M-f}.  Your mileage may vary.

@emph{Library interfaces} are most common for Japanese, although Wnn
supports Chinese (traditional and simplified) and Korean.  There are
Chinese and Korean input servers available, but we do not know of any
patches for SXEmacs to use them directly.  You can use them via
IM-enabled terminals, by manipulating the terminal coding systems.  We
describe only the Japanese-oriented systems here.  The advantage of
these systems is that they are very powerful, and on platforms where
they are available there is typically a wide range of applications that
support them.  Thus your input skills are portable across applications.

Mule provides built-in interfaces to the following input methods: Wnn4,
Wnn6, Canna, and SJ3.  These can be configured at build time.  There are
patches available (no URL, sorry) to support the SKK server, as well.
Wnn and SJ3 use the @code{egg} user interface.  The interface for Canna
is specialized to Canna.

Wnn supports Japanese, Chinese and Korean. It is made by OMRON and Kyôto
University. It is a powerful and complex system.  Wnn4 is free and Wnn6
is not.  Wnn uses grammatical hints and probability of word association,
so in principle Wnn can be cleverer than other methods.

Canna, made by NEC, supports only Japanese.  It is a simple and powerful
system. Canna uses only grammar, but its grammar and dictionary are
quite sophisticated.  So for standard modern Japanese, Canna seems
cleverer than Wnn4. In addition, the UNIX version of Canna is free.

SJ3, by Sony, supports only Japanese.

Egg consists of following parts:

@enumerate
@item
Input character Translation System (ITS) layer.
It translates ASCII inputs to Kana/PinYin/Hangul characters.

@item
Kana/PinYin/Hangul to Kanji transfer layer.
The interface layer to network Kana-Kanji server (Wnn and Sj3).
@end enumerate

These input methods are modal.  They have a raw (alphabet) mode, a
phonetic input mode, and Kana-Kanji transfer mode.  However there are
mode-less input methods for Egg and Canna.  @samp{boiled-egg} is a
mode-less input method running on Egg.  For Canna, @samp{canna.el} has a
tiny boiled-egg-like command, @code{(canna-boil)}, and there are some
boiled-egg-like utilities.

Much of this information was provided by @email{morioka@@jaist.ac.jp,
MORIOKA Tomohiko}.

@node Q1.3.6
@unnumberedsec Q1.3.6: How do I portably code for MULE/SXEmacs?

MULE has evolved rapidly over the last few years, and the original third
party patch (for GNU Emacs 19), GNU Emacs 20+, and XEmacs 20+ have quite
different implementations.  The APIs also vary although recent versions
of XEmacs have tended to converge to the GNU Emacs standard.

MULE implementations are going to continue to evolve.  Both GNU Emacs
and XEmacs are working hard on Unicode support, which will involve new
APIs and probably variations on old ones.  For XEmacs 22, the old ISO
2022-based system for recognizing encodings will be replaced by a much
more flexible system, which should improve accuracy of automatic coding
detections, but will also involve new APIs.

@email{morioka@@jaist.ac.jp, MORIOKA Tomohiko} writes:

@quotation
The application implementor must write separate code for these mule
variants.  [Please don't hesitate to report these variants to us; they
are not, strictly speaking, bugs, but they give third-party developers
the same kind of creepy-crawly feeling.  We'll do what we can. -- Ed.]

MULE and the next version of Emacs are similar but the symbols are very
different---requiring separate code as well.

Namely we must support 3 kinds of mule variants and 4 or 5 or 6 kinds of
emacs variants... (;_;) I'm shocked, so I wrote a wrapper package called
@code{emu} to provide a common interface.  [There is an XEmacs package
of APEL which provides much more comprehensive coverage.  Be careful,
however; APEL has problems of its own. -- Ed.]

I have the following suggestions about dealing with mule variants:

@itemize @bullet
@item
@code{(featurep 'mule)} @code{t} on all mule variants

@item
@code{(boundp 'MULE)} is @code{t} on only MULE.  Maybe the next version
of Emacs will not have this symbol.

@item
MULE has a variable @code{mule-version}.  Perhaps the next version of
Emacs will have this variable as well.
@end itemize

Following is a sample to distinguish mule variants:

@lisp
(if (featurep 'mule)
    (cond ((boundp 'MULE)
           ;; for original Mule
           )
          ((string-match "XEmacs" emacs-version)
           ;; for XEmacs with Mule
           )
          (t
           ;; for next version of Emacs
           ))
  ;; for old emacs variants
  )
@end lisp
@end quotation


@node Q1.3.7
@unnumberedsec Q1.3.7: How about Cyrillic Modes?

@email{ilya@@math.ohio-state.edu, Ilya Zakharevich} writes:

@quotation
There is a cyrillic mode in the file @file{mysetup.zip} in
@iftex
@*
@end iftex
@uref{ftp://ftp.math.ohio-state.edu/pub/users/ilya/emacs/}.  This is a
modification to @email{ava@@math.jhu.ed, Valery Alexeev's} @file{russian.el}
which can be obtained from
@end quotation

@uref{http://www.math.uga.edu/~valery/russian.el}.

@email{d.barsky@@ee.surrey.ac.uk, Dima Barsky} writes:

@quotation
There is another cyrillic mode for both GNU Emacs and XEmacs by
@email{manin@@camelot.mssm.edu, Dmitrii
(Mitya) Manin} at
@iftex

@end iftex
@uref{http://kulichki-lat.rambler.ru/centrolit/manin/cyr.el}.
@c Link above, <URL:http://camelot.mssm.edu/~manin/cyr.el> was dead.
@c Changed to russian host instead
@end quotation

@email{rebecca.ore@@op.net, Rebecca Ore} writes:

@quotation
The fullest resource I found on Russian language use (in and out of
SXEmacs) is @uref{http://www.ibiblio.org/sergei/Software/Software.html}
@end quotation


@node Q1.3.8
@unnumberedsec Q1.3.8: Does SXEmacs support Unicode?

Partially, as an external encoding for files, processes, and terminals.
It does not yet support Unicode fonts @ref{Q1.3.9, Does SXEmacs support
Unicode Fonts?}

To get Unicode support, you need a Mule-enabled SXEmacs.  Install
Mule-UCS from packages in the usual way.  Put

@example
(require 'un-define)
(set-coding-priority-list '(utf-8))
(set-coding-category-system 'utf-8 'utf-8)
@end example

in your init file to enable the UTF-8 coding system.  You may wish to
view the documentation of @code{set-coding-priority-list} if you find
that files that are not UTF-8 are being mis-recognised as UTF-8.

Install standard national fonts (not Unicode fonts) for all
character sets you use.  See @ref{Q1.3.9}.

Mule-UCS also supports 16-bit forms of Unicode (UTF-16).  It does not
support 31-bit forms of Unicode (UTF-32 or UCS-4).


@node Q1.3.9
@unnumberedsec Q1.3.9: How does SXEmacs display Unicode?

Mule doesn't have a Unicode charset internally, so there's nothing to
bind a Unicode registry to.  It would not be straightforward to create,
either, because Unicode is not ISO 2022-compatible.  You'd have to
translate it to multiple 96x96 pages.

This means that Mule-UCS uses ordinary national fonts for display.  This
is not really a problem, except for those languages that use the Unified
Han characters.  The problem here is that Mule-UCS maps from Unicode
code points to national character sets in a deterministic way.  By
default, this means that Japanese fonts are tried first, then Chinese,
then Korean.  To change the priority ordering, use the command
`un-define-change-charset-order'.

It also means you can't use Unicode fonts directly, at least not without
extreme hackery.  You can run -nw with (set-terminal-coding-system
'utf-8) if you really want a Unicode font for some reason.

Real Unicode support will be introduced in SXEmacs 22.2.
@c will it?


@node Q1.4.1
@unnumberedsec 1.4: Getting Started, Backing up & Recovery
@unnumberedsec Q1.4.1: What is an @file{init.el} or @file{.emacs} and is there a sample one?

The @file{init.el} or @file{.emacs} file is used to customise SXEmacs
to your tastes.  The preferred location for the init
file is @file{~/.sxemacs/init.el}.  We still accept the older location
@file{~/.emacs}, but the first time you run it, it will ask to migrate
your file to the new location.
If you answer yes, the file will be moved, and a "compatibility"
@file{.emacs} file will be placed in the old location so that you can
still run older versions of XEmacs, or versions of GNU Emacs, which
expect the old location.  The @file{.emacs} file present is just a
stub that loads the real file in @file{~/.sxemacs/init.el}.

No two init files are alike, nor are they expected to be alike, but
that's the point.  The SXEmacs distribution contains an excellent
starter example in the @file{etc/} directory called
@file{sample.init.el}.  Copy this file from there to
@file{~/.sxemacs/init.el}, where @samp{~} means your home directory,
of course.  Then edit it to suit.

You may bring the @file{sample.init.el} file into a SXEmacs buffer
from the menubar.  The menu entry is always under the @samp{Samples}
submenu in the @samp{Help} menu.  To determine the location of the
@file{etc/} directory type the command @kbd{C-h v data-directory
@key{RET}}.


@node Q1.4.2
@unnumberedsec Q1.4.2: Can I use the same @file{init.el}/@file{.emacs} with XEmacs or GNU Emacs?

Yes.  The sample @file{init.el} included in the SXEmacs
distribution will show you how to handle different versions and flavours
of Emacs.


@node Q1.4.3
@unnumberedsec Q1.4.3: Any good tutorials around?

There's the SXEmacs tutorial available from the Help Menu under
@samp{Basics->Tutorials}, or by typing @kbd{C-h t}. To check whether
it's available in a non-english language, type @kbd{C-u C-h t TAB}, type
the first letters of your preferred language, then type @key{RET}.


@node Q1.4.4
@unnumberedsec Q1.4.4: May I see an example of a useful SXEmacs Lisp function?

The following function does a little bit of everything useful.  It does
something with the prefix argument, it examines the text around the
cursor, and it's interactive so it may be bound to a key.  It inserts
copies of the current word the cursor is sitting on at the cursor.  If
you give it a prefix argument: @kbd{C-u 3 M-x double-word} then it will
insert 3 copies.

@lisp
(defun double-word (count)
  "Insert a copy of the current word underneath the cursor"
  (interactive "*p")
  (let (here there string)
    (save-excursion
      (forward-word -1)
      (setq here (point))
      (forward-word 1)
      (setq there (point))
      (setq string (buffer-substring here there)))
    (while (>= count 1)
      (insert string)
      (decf count))))
@end lisp

The best way to see what is going on here is to let SXEmacs tell you.
Put the code into an SXEmacs buffer, and do a @kbd{C-h f} with the cursor
sitting just to the right of the function you want explained.  Eg.  move
the cursor to the SPACE between @code{interactive} and @samp{"*p"} and
hit @kbd{C-h f} to see what the function @code{interactive} does.  Doing
this will tell you that the @code{*} requires a writable buffer, and
@code{p} converts the prefix argument to a number, and
@code{interactive} allows you to execute the command with @kbd{M-x}.


@node Q1.4.5
@unnumberedsec Q1.4.5: And how do I bind it to a key?

To bind to a key do:

@lisp
(global-set-key "\C-cd" 'double-word)
@end lisp

Or interactively, @kbd{M-x global-set-key} and follow the prompts.


@node Q1.4.6
@unnumberedsec Q1.4.6: What's the difference between a macro and a function?

Quoting from the Lisp Reference (a.k.a @dfn{Lispref}) Manual:

@dfn{Macros} enable you to define new control constructs and other
language features.  A macro is defined much like a function, but instead
of telling how to compute a value, it tells how to compute another Lisp
expression which will in turn compute the value.  We call this
expression the @dfn{expansion} of the macro.

Macros can do this because they operate on the unevaluated expressions
for the arguments, not on the argument values as functions do.  They can
therefore construct an expansion containing these argument expressions
or parts of them.

Do not confuse the two terms with @dfn{keyboard macros}, which are
another matter, entirely.  A keyboard macro is a key bound to several
other keys.  Refer to manual for details.



@node Installation, Customisation, Introduction, Top
@unnumbered 2 Installation and Trouble Shooting

This is part 2 of the SXEmacs Frequently Asked Questions list.  This
section is devoted to Installation, Maintenance and Trouble Shooting.

@menu
Installation:
* Q2.0.1::      Running SXEmacs without installing.
* Q2.0.2::      SXEmacs is too big.
* Q2.0.3::      Compiling SXEmacs with Netaudio. @c what?!
* Q2.0.4::      Problems with Linux and ncurses.
* Q2.0.5::      Do I need X11 to run SXEmacs?
* Q2.0.6::      I'm having strange crashes.  What do I do?
* Q2.0.7::      Libraries in non-standard locations.
* Q2.0.8::      can't resolve symbol _h_errno
* Q2.0.9::      Where do I find external libraries?
* Q2.0.10::     After I run configure I find a coredump, is something wrong?
* Q2.0.11::     SXEmacs can't resolve host names.
* Q2.0.12::     Why can't I strip SXEmacs?
* Q2.0.13::     I don't need no steenkin' packages.  Do I?
* Q2.0.14::     How do I figure out which packages to install?
* Q2.0.15::     EFS fails with "500 AUTH not understood" (NEW)

Trouble Shooting:
* Q2.1.1::      SXEmacs just crashed on me!
* Q2.1.2::      Cryptic Minibuffer messages.
* Q2.1.3::      Translation Table Syntax messages at Startup.
* Q2.1.4::      Startup warnings about deducing proper fonts?
* Q2.1.5::      SXEmacs cannot connect to my X Terminal.
* Q2.1.6::      SXEmacs just locked up my Linux X server.
* Q2.1.7::      HP Alt key as Meta.
* Q2.1.8::      got (wrong-type-argument color-instance-p nil)!
* Q2.1.9::      SXEmacs causes my OpenWindows 3.0 server to crash.
* Q2.1.10::     Warnings from incorrect key modifiers.
* Q2.1.11::     Can't instantiate image error... in toolbar
* Q2.1.12::     Regular Expression Problems on DEC OSF1.
* Q2.1.13::     HP/UX 10.10 and @code{create_process} failure
* Q2.1.14::     @kbd{C-g} doesn't work for me.  Is it broken?
* Q2.1.15::     How to debug a SXEmacs problem with a debugger.
* Q2.1.16::     SXEmacs crashes in @code{strcat} on HP/UX 10.
* Q2.1.17::     @samp{Marker does not point anywhere}.
* Q2.1.18::     SXEmacs is outputting lots of X errors.
* Q2.1.19::     SXEmacs does not follow the local timezone.
* Q2.1.20::     @samp{Symbol's function definition is void: hkey-help-show.}
* Q2.1.21::     [This question intentionally left blank]
* Q2.1.22::     SXEmacs seems to take a really long time to do some things.
* Q2.1.23::     Movemail on Linux does not work for SXEmacs.
* Q2.1.24::     SXEmacs won't start without network.
* Q2.1.25::     After upgrading, SXEmacs won't do `foo' any more!
@end menu


@node Q2.0.1
@unnumberedsec 2.0: Installation
@unnumberedsec Q2.0.1: Running SXEmacs without installing

How can I just try SXEmacs without installing it?

SXEmacs will run in place without requiring installation and copying of
the Lisp directories, and without having to specify a special build-time
flag.  It's the copying of the Lisp directories that requires so much
space.  SXEmacs is largely written in Lisp.


@node Q2.0.2
@unnumberedsec Q2.0.2: SXEmacs is too big

The space required by the installation directories can be
reduced dramatically if desired.  Gzip all the .el files.  Remove all
the packages you'll never want to use.  Remove the TexInfo manuals.
Remove the Info (and use just hardcopy versions of the manual).  Remove
most of the stuff in etc.  Remove or gzip all the source code.  Gzip or
remove the C source code.  Configure it so that copies are not made of
the support lisp.

These are all Emacs Lisp source code and bytecompiled object code.
You may safely gzip everything named *.el here.  You may remove any
package you don't use.  @emph{Nothing bad will happen if you delete a
package that you do not use}.  You must be sure you do not use it
though, so be conservative at first.

Any package with the possible exceptions of xemacs-base, and EFS are
candidates for removal.  Ask yourself, @emph{Do I ever want to use this
package?}  If the answer is no, then it is a candidate for removal.

First, gzip all the .el files.  Then go about package by package and
start gzipping the .elc files.  Then run SXEmacs and do whatever it is
you normally do.  If nothing bad happens, then remove the package.
You can remove a package via the PUI interface (@kbd{M-x
pui-list-packages}, then press @kbd{d} to mark the packages you wish
to delete, and then @kbd{x} to delete them.

Another method is to do @kbd{M-x package-get-delete-package}.

@node Q2.0.3
@unnumberedsec Q2.0.3: Compiling SXEmacs with Netaudio.

What is the best way to compile SXEmacs with the netaudio system,
since I have got the netaudio system compiled but installed at a weird
place, I am not root.  Also in the READMEs it does not say anything
about compiling with the audioserver?

You should only need to add some stuff to the configure command line.
@c To tell it to compile in netaudio support: @samp{--with-sound=both}, or
@c @samp{--with-sound=nas} if you don't want native sound support for some
@c reason.) To tell it where to find the netaudio includes and libraries:

@example
--site-libraries=WHATEVER
--site-includes=WHATEVER
@end example

Then (fingers crossed) it should compile and it will use netaudio if
you have a server running corresponding to the X server. The netaudio
server has to be there when SXEmacs starts. If the netaudio server
goes away and another is run, SXEmacs should cope (fingers crossed,
error handling in netaudio isn't perfect).

BTW, netaudio has been renamed as it has a name clash with something
else, so if you see references to NAS or Network Audio System, it's the
same thing.  It also might be found at
@uref{ftp://ftp.x.org/contrib/audio/nas/}.


@node Q2.0.4
@unnumberedsec Q2.0.4: Problems with Linux and ncurses.

@c On Linux 1.3.98 with termcap 2.0.8 and the ncurses that came with libc
@c 5.2.18, XEmacs 20.0b20 is unable to open a tty device:
@c @c oh great
@c 
@c @example
@c src/xemacs -nw -q
@c Initialisation error:
@c @iftex
@c @*
@c @end iftex
@c Terminal type `xterm' undefined (or can't access database?)
@c @end example
@c 
@c @email{ben@@xemacs.org, Ben Wing} writes:
@c 
@c @quotation
@c Your ncurses configuration is messed up.  Your /usr/lib/terminfo is a
@c bad pointer, perhaps to a CD-ROM that is not inserted.
@c @end quotation

There are none!


@node Q2.0.5
@unnumberedsec Q2.0.5: Do I need X11 to run SXEmacs?

No.


@node Q2.0.6
@unnumberedsec Q2.0.6: I'm having strange crashes.  What do I do?

There have been a variety of reports of crashes due to compilers with
buggy optimisers.  Please see the @file{PROBLEMS} file that comes with
SXEmacs to read what it says about your platform.


@node Q2.0.7
@unnumberedsec Q2.0.7: Libraries in non-standard locations

I have x-faces, jpeg, xpm etc. all in different places.  I've tried
space-separated, comma-separated, several --site-libraries, all to no
avail.

@example
--with-site-prefixes=/path/to/site1::/path/to/site2::/path/to/site3
@end example


@node Q2.0.8
@unnumberedsec Q2.0.8: can't resolve symbol _h_errno

Does not apply anymore.


@node Q2.0.9
@unnumberedsec Q2.0.9: Where do I find external libraries?

Oh well ... we support far too many external libraries to list them
here.  Have a glance at INSTALL to check if there are special
instructions for some of the libraries you intend to use.


@node Q2.0.10
@unnumberedsec Q2.0.10: After I run configure I find a core dump, is something wrong?

@c @c WHOOOOOOOAT?!?!
@c Not necessarily.  If you have GNU sed 3.0 you should downgrade it to
@c 2.05.  From the @file{README} at prep.ai.mit.edu:
@c 
@c @quotation
@c sed 3.0 has been withdrawn from distribution.  It has major revisions,
@c which mostly seem to be improvements; but it turns out to have bugs too
@c which cause trouble in some common cases.
@c 
@c Tom Lord won't be able to work fixing the bugs until May.  So in the
@c mean time, we've decided to withdraw sed 3.0 from distribution and make
@c version 2.05 once again the recommended version.
@c @end quotation
@c 
@c It has also been observed that the vfork test on Solaris will leave a
@c core dump.

Send a build report.


@node Q2.0.11
@unnumberedsec Q2.0.11: SXEmacs doesn't resolve hostnames.

This is the result of a long-standing problem with SunOS and the fact
that stock SunOS systems do not ship with DNS resolver code in libc.

@email{ckd@@loiosh.kei.com, Christopher Davis} writes:

@quotation
That's correct [The SunOS 4.1.3 precompiled binaries don't do name
lookup].  Since Sun figured that everyone used NIS to do name lookups
(that DNS thing was apparently only a passing fad, right?), the stock
SunOS 4.x systems don't have DNS-based name lookups in libc.

This is also why Netscape ships two binaries for SunOS 4.1.x.

The best solution is to compile it yourself; the configure script will
check to see if you've put DNS in the shared libc and will then proceed
to link against the DNS resolver library code.
@end quotation


@node Q2.0.12
@unnumberedsec Q2.0.12: Why can't I strip SXEmacs?

@email{cognot@@fronsac.ensg.u-nancy.fr, Richard Cognot} writes:

@quotation
Because of the way SXEmacs (and every other Emacsen, AFAIK) is
built. The link gives you a bare-boned emacs (called temacs). temacs
is then run, preloading some of the lisp files. The result is then
dumped into a new executable, named xemacs, which will contain all of
the preloaded lisp functions and data.

Now, during the dump itself, the executable (code+data+symbols) is
written on disk using a special unexec() function. This function is
obviously heavily system dependent. And on some systems, it leads to an
executable which, although valid, cannot be stripped without damage. If
memory serves, this is especially the case for AIX binaries. On other
architectures it might work OK.

The Right Way to strip the emacs binary is to strip temacs prior to
dumping xemacs. This will always work, although you can do that only if
you install from sources (as temacs is @file{not} part of the binary
kits).
@end quotation

@email{nat@@nataa.fr.eu.org, Nat Makarevitch} writes:

@quotation
Here is the trick:

@enumerate
@item
[ ./configure; make ]

@item
rm src/sxemacs

@item
strip src/temacs

@item
make

@item
cp src/sxemacs /usr/local/bin/sxemacs

@end enumerate
@end quotation


@node Q2.0.13
@unnumberedsec Q2.0.13: I don't need no steenkin' packages.  Do I?

Strictly speaking, no.  SXEmacs will build and install just fine
without any packages installed.  However, only the most basic editing
functions will be available with no packages installed, so installing
packages is an essential part of making your installed SXEmacs
_useful_.


@node Q2.0.14
@unnumberedsec Q2.0.14: How do I figure out which packages to install?

Many people really liked the old way that packages were bundled and do
not want to mess with packages at all.  You can grab all the packages at
once like you used to with old SXEmacs versions.  Download the file

@file{xemacs-sumo.tar.gz}

For a SXEmacs compiled with Mule you also need

@file{xemacs-mule-sumo.tar.gz}

from the @file{packages} directory on your XEmacs mirror archive.
N.B. They are called 'Sumo Tarballs' for good reason. They are
currently about 15MB and 2.3MB (gzipped) respectively.
@c mwhahahahaha, that'd load within a second here I think :P

Install them by

@code{cd $prefix/lib/sxemacs ; gunzip -c <tarballname> | tar xf -}

See README.packages for more detailed installation instructions.

As the Sumo tarballs are not regenerated as often as the individual
packages, it is recommended that you use the automatic package tools
afterwards to pick up any recent updates.


@node Q2.0.15
@unnumberedsec Q2.0.15: EFS fails with "500 AUTH not understood"

A typical error: FTP Error: USER request failed; 500 AUTH not understood.

Thanks to giacomo boffi @email{giacomo.boffi@@polimi.it} who recommends
on comp.emacs.xemacs:

   tell your ftp client to not attempt AUTH authentication (or do not
   use FTP servers that don't understand AUTH)

and notes that you need to add an element (often "-u") to
@code{efs-ftp-program-args}.  Use @kbd{M-x customize-variable}, and
verify the needed flag with @code{man ftp} or other local
documentation.


@node Q2.1.1
@unnumberedsec 2.1: Trouble Shooting
@unnumberedsec Q2.1.1: Help!  SXEmacs just crashed on me!

First of all, don't panic.  Whenever SXEmacs crashes, it tries
extremely hard to auto-save all of your files before dying.  The main
time that this will not happen is if the machine physically lost power
or if you killed the SXEmacs process using @code{kill -9}.  The next
time you try to edit those files, you will be informed that a more
recent auto-save file exists.  You can use @kbd{M-x recover-file} to
retrieve the auto-saved version of the file.

You can use the command @kbd{M-x recover-session} after a crash to pick
up where you left off.

Now, SXEmacs is not perfect, and there may occasionally be times, or
particular sequences of actions, that cause it to crash.  If you can
come up with a reproducible way of doing this (or even if you have a
pretty good memory of exactly what you were doing at the time), the
maintainers would be very interested in knowing about it.  The best
way to report a bug is using @kbd{M-x report-sxemacs-bug} (or by
selecting @samp{Send Bug Report...} from the Help menu).  If that
won't work (e.g. you can't get SXEmacs working at all), send ordinary
mail to @email{sxemacs-devel@@sxemacs.org}. @emph{MAKE SURE} to
include the output from the crash, especially including the Lisp
backtrace, as well as the SXEmacs configuration from @kbd{M-x
describe-installation} (or equivalently, the file @file{Installation}
in the top of the build tree).

If at all possible, include a C stack backtrace of the core dump that
was produced.  This shows where exactly things went wrong, and makes it
much easier to diagnose problems.  To do this under Unix, you need to
locate the core file (it's called @file{core}, and is usually sitting in
the directory that you started SXEmacs from, or your home directory if
that other directory was not writable).  Then, go to that directory and
execute a command like:

@example
gdb `which sxemacs` core
@end example

and then issue the command @samp{where} to get the stack backtrace.  You
might have to use @code{dbx} or some similar debugger in place of
@code{gdb}.  If you don't have any such debugger available, complain to
your system administrator.

It's possible that a core file didn't get produced, in which case you're
out of luck.  Go complain to your system administrator and tell him not
to disable core files by default.  Also see @ref{Q2.1.15}, for tips and
techniques for dealing with a debugger.

When making a problem report make sure that:

@enumerate
@item
Report @strong{all} of the information output by SXEmacs during the
crash.

@item
You mention what OS & Hardware you are running SXEmacs on.

@item
What version of SXEmacs you are running.  Equivalently, if you are
using your own tla-branch of SXEmacs either tell where it is
available or include to which degree your version resembles the
mainline.

@item
What build options you are using.

@item
What are the versions of your libc and external libraries you use.

@item
If the problem is related to graphics and you are running Unix, we will
also need to know what version of the X Window System you are running,
and what window manager you are using.

@item
If the problem happened on a TTY, please include the terminal type.
@end enumerate

Much of the information above is automatically generated by @kbd{M-x
report-sxemacs-bug}.  Even more, and often useful, information can be
generated by redirecting the output of @code{make} and @code{make check}
to a file (@file{,,make-all.out} and @file{,,make-check.out} are the
default used by @code{build-report}), and executing @kbd{M-x
build-rpt}. 


@node Q2.1.2
@unnumberedsec Q2.1.2: Cryptic Minibuffer messages.

When I try to use some particular option of some particular package, I
get a cryptic error in the minibuffer.

If you can't figure out what's going on, select Options/General
Options/Debug on Error from the Menubar and then try and make the error
happen again.  This will give you a backtrace that may be enlightening.
If not, try reading through this FAQ; if that fails, you could try
posting to comp.emacs.xemacs (making sure to include the backtrace) and
someone may be able to help.  If you can identify which Emacs lisp
source file the error is coming from you can get a more detailed stack
backtrace by doing the following:

@enumerate
@item
Visit the .el file in a SXEmacs buffer.

@item
Issue the command @kbd{M-x eval-current-buffer}.

@item
Reproduce the error.
@end enumerate

Depending on the version of SXEmacs, you may either select View->Show
Message Log (recent versions)from the menubar to see the most recent
messages.  This command is bound to @kbd{C-h l} by default.


@node Q2.1.3
@unnumberedsec Q2.1.3: Translation Table Syntax messages at Startup

I get tons of translation table syntax error messages during startup.
How do I get rid of them?

There are two causes of this problem.  The first usually only strikes
people using the prebuilt binaries.  The culprit in both cases is the
file @file{XKeysymDB}.

@itemize @bullet
@item
The binary cannot find the @file{XKeysymDB} file.  The location is
hardcoded at compile time so if the system the binary was built on
another machin and puts it a different place than your system does,
you have problems.  To fix, set the environment variable
@code{XKEYSYMDB} to the location of the @file{XKeysymDB} file on your
system or to the location of the one included with SXEmacs which
should be at 
@iftex
@*
@end iftex
@file{<sxemacs_prefix>/lib/sxemacs-22.1.<x>/etc/XKeysymDB}.

@item
The binary is finding the XKeysymDB but it is out-of-date on your
system and does not contain the necessary lines.  Either ask your
system administrator to replace it with the one which comes with
SXEmacs (which is the stock R6 version and is backwards compatible) or
set your @code{XKEYSYMDB} variable to the location of SXEmacs's
described above.
@end itemize


@node Q2.1.4
@unnumberedsec Q2.1.4: Startup warnings about deducing proper fonts?

How can I avoid the startup warnings about deducing proper fonts?

This is highly dependent on your installation, but try with the
following font as your base font for SXEmacs and see what it does:

@format
-adobe-courier-medium-r-*-*-*-120-*-*-*-*-iso8859-1
@end format

More precisely, do the following in your resource file:

@format
Emacs.default.attributeFont: \
-adobe-courier-medium-r-*-*-*-120-*-*-*-*-iso8859-1
@end format

If you just don't want to see the @samp{*Warnings*} buffer at startup
time, you can set this:

@lisp
(setq display-warning-minimum-level 'error)
@end lisp

The buffer still exists; it just isn't in your face.


@node Q2.1.5
@unnumberedsec Q2.1.5: SXEmacs cannot connect to my X Terminal!

Help!  I can not get SXEmacs to display on my Envizex X-terminal!

Try setting the @code{DISPLAY} variable using the numeric IP address of
the host you are running SXEmacs from.


@node Q2.1.6
@unnumberedsec Q2.1.6: SXEmacs just locked up my Linux X server!

There have been several reports of the X server locking up under
Linux.  In all reported cases removing speedo and scaled fonts from
the font path corrected the problem.  This can be done with the
command @code{xset}.

It is possible that using a font server may also solve the problem.


@node Q2.1.7
@unnumberedsec Q2.1.7: HP Alt key as Meta.

How can I make SXEmacs recognize the Alt key of my HP workstation as a
Meta key?

Put the following line into a file and load it with xmodmap(1) before
starting SXEmacs:

@example
remove Mod1 = Mode_switch
@end example


@node Q2.1.8
@unnumberedsec Q2.1.8: got (wrong-type-argument color-instance-p nil)

@email{nataliek@@rd.scitec.com.au, Natalie Kershaw} writes:

@quotation
I am trying to run xemacs 19.13 under X11R4. Whenever I move the mouse I
get the following error. Has anyone seen anything like this? This
doesn't occur on X11R5.

@lisp
Signalling:
(error "got (wrong-type-argument color-instance-p nil)
and I don't know why!")
@end lisp
@end quotation

@email{map01kd@@gold.ac.uk, dinos} writes:

@quotation
I think this is due to undefined resources; You need to define color
backgrounds and foregrounds into your @file{.../app-defaults/Emacs}
like:

@example
*Foreground:    Black   ;everything will be of black on grey95,
*Background:    Grey95  ;unless otherwise specified.
*cursorColor:   Red3    ;red3 cursor with grey95 border.
*pointerColor:  Red3    ;red3 pointer with grey95 border.
@end example
@end quotation

Natalie Kershaw adds:

@quotation
What fixed the problem was adding some more colors to the X color
database (copying the X11R5 colors over), and also defining the
following resources:

@example
xemacs*cursorColor:    black
xemacs*pointerColor:   black
@end example

With the new colors installed the problem still occurs if the above
resources are not defined.

If the new colors are not present then an additional error occurs on
SXEmacs startup, which says @samp{Color Red3} not defined.
@end quotation


@node Q2.1.9
@unnumberedsec Q2.1.9: SXEmacs causes my OpenWindows 3.0 server to crash.

The OpenWindows 3.0 server is incredibly buggy.  Your best bet is to
replace it with one from the generic MIT X11 release.  You might also
try disabling parts of your @file{init.el}, like those that enable
background pixmaps.


@node Q2.1.10
@unnumberedsec Q2.1.10: Warnings from incorrect key modifiers.

The following information comes from the @file{PROBLEMS} file that comes
with SXEmacs.

If you're having troubles with HP/UX it is because HP/UX defines the
modifiers wrong in X.  Here is a shell script to fix the problem; be
sure that it is run after VUE configures the X server.

@example
#! /bin/sh
xmodmap 2> /dev/null - << EOF
keysym Alt_L = Meta_L
keysym Alt_R = Meta_R
EOF

xmodmap - << EOF
clear mod1
keysym Mode_switch = NoSymbol
add mod1 = Meta_L
keysym Meta_R = Mode_switch
add mod2 = Mode_switch
EOF
@end example


@node Q2.1.11
@unnumberedsec Q2.1.11: @samp{Can't instantiate image error...} in toolbar
@c New

@email{expt@@alanine.ram.org, Dr. Ram Samudrala} writes:

I just installed the XEmacs (20.4-2) RPMS that I downloaded from
@uref{http://www.xemacs.org/}.  Everything works fine, except that when
I place my mouse over the toolbar, it beeps and gives me this message:

@example
 Can't instantiate image (probably cached):
 [xbm :mask-file "/usr/include/X11/bitmaps/leftptrmsk :mask-data
 (16 16 <strange control characters> ...
@end example

@email{kyle_jones@@wonderworks.com, Kyle Jones} writes:
@quotation
This is problem specific to some Chips and Technologies video
chips, when running XFree86.  Putting

@code{Option "sw_cursor"}

in @file{XF86Config} gets rid of the problem.
@end quotation


@node Q2.1.12
@unnumberedsec Q2.1.12: Problems with Regular Expressions on DEC OSF1.

@c I have xemacs 19.13 running on an alpha running OSF1 V3.2 148 and ispell
@c would not run because it claimed the version number was incorrect
@c although it was indeed OK. I traced the problem to the regular
@c expression handler.
@c 
@c @email{douglask@@dstc.edu.au, Douglas Kosovic} writes:
@c 
@c @quotation
@c Actually it's a DEC cc optimisation bug that screws up the regexp
@c handling in XEmacs.
@c 
@c Rebuilding using the @samp{-migrate} switch for DEC cc (which uses a
@c different sort of optimisation) works fine.
@c @end quotation
@c 
@c See @file{xemacs-19_13-dunix-3_2c.patch} at the following URL on how to
@c build with the @samp{-migrate} flag:
@c 
@c @example
@c @uref{http://www-digital.cern.ch/carney/emacs/emacs.html}
@c @c Link above, <URL:http://www-digital.cern.ch/carney/emacs/emacs.html> is
@c @c dead. And the directory `carney' is empty.
@c 
@c 
@c 
@c @end example
@c 
@c NOTE: There have been a variety of other problems reported that are
@c fixed in this fashion.

Does not apply anymore.


@node Q2.1.13
@unnumberedsec Q2.1.13: HP/UX 10.10 and @code{create_process} failure.

@c @email{Dave.Carrigan@@ipl.ca, Dave Carrigan} writes:
@c 
@c @quotation
@c With XEmacs 19.13 and HP/UX 10.10, anything that relies on the
@c @code{create_process} function fails. This breaks a lot of things
@c (shell-mode, compile, ange-ftp, to name a few).
@c @end quotation
@c 
@c @email{johnson@@dtc.hp.com, Phil Johnson} writes:
@c 
@c @quotation
@c This is a problem specific to HP-UX 10.10.  It only occurs when XEmacs
@c is compiled for shared libraries (the default), so you can work around
@c it by compiling a statically-linked binary (run configure with
@c @samp{--dynamic=no}).
@c 
@c I'm not sure whether the problem is with a particular shared library or
@c if it's a kernel problem which crept into 10.10.
@c @end quotation
@c 
@c @email{cognot@@ensg.u-nancy.fr, Richard Cognot} writes:
@c 
@c @quotation
@c I had a few problems with 10.10. Apparently, some of them were solved by
@c forcing a static link of libc (manually).
@c @end quotation

Does not apply anymore.


@node Q2.1.14
@unnumberedsec Q2.1.14: @kbd{C-g} doesn't work for me.  Is it broken?

@email{ben@@xemacs.org, Ben Wing} writes:

@quotation
@kbd{C-g} does work for most people in most circumstances.  If it
doesn't, there are only two explanations:

@enumerate
@item
The code is wrapped with a binding of @code{inhibit-quit} to
@code{t}.  @kbd{Ctrl-Shift-G} should still work, I think.

@item
SIGIO is broken on your system, but BROKEN_SIGIO isn't defined.
@end enumerate

To test #2, try executing @code{(while t)} from the @samp{*scratch*}
buffer.  If @kbd{C-g} doesn't interrupt, then you're seeing #2.
@end quotation

@email{terra@@diku.dk, Morten Welinder} writes:

@quotation
On some (but @emph{not} all) machines a hung SXEmacsen can be revived
by @code{kill -FPE <pid>}.  This is a hack, of course, not a solution.
This technique works on a Sun4 running 4.1.3_U1.  To see if it works
for you, start another SXEmacs and test with that first.  If you get a
core dump the method doesn't work and if you get @samp{Arithmetic
error} then it does.
@end quotation


@node Q2.1.15
@unnumberedsec Q2.1.15: How to debug a SXEmacs problem with a debugger

If SXEmacs does crash on you, one of the most productive things you
can do to help get the bug fixed is to poke around a bit with the
debugger.  Here are some hints:

@itemize @bullet
@item
First of all, if the crash is at all reproducible, consider very
strongly recompiling your SXEmacs with debugging symbols and with no
optimisation (e.g. with GCC use the compiler flags @samp{-g -O0} --
that's an "oh" followed by a zero), and with the configure options
@samp{--debug=yes} and @samp{--error-checking=all}.  This will make
your SXEmacs run somewhat slower, but you are a lot more likely to
catch the problem earlier (closer to its source).  It makes it a lot
easier to determine what's going on with a debugger.

@item
If it's not a true crash (@emph{i.e.}, SXEmacs is hung, or a zombie
process), or it's inconvenient to run SXEmacs again because SXEmacs is
already running or is running in batch mode as part of a bunch of
scripts, you may be able to attach to the existing process with your
debugger.  Most debuggers let you do this by substituting the process ID
for the core file when you invoke the debugger from the command line, or
by using the @code{attach} command or something similar.

@item
If you're able to run SXEmacs under a debugger and reproduce the crash,
here are some things you can do:

@item
If SXEmacs is hitting an assertion failure, put a breakpoint on
@code{assert_failed()}.

@item
If SXEmacs is hitting some weird Lisp error that's causing it to crash
(e.g. during startup), put a breakpoint on @code{signal_1()}---this is
declared static in eval.c.

@item
If SXEmacs is outputting lots of X errors, put a breakpoint on
@code{x_error_handler()}; that will tell you which call is causing them.

@item
Internally, you will probably see lots of variables that hold objects of
type @code{Lisp_Object}.  These are references to Lisp objects.
Printing them out with the debugger probably won't be too
useful---you'll likely just see a number.  To decode them, do this:

@example
call dp (OBJECT)
@end example

where @var{OBJECT} is whatever you want to decode (it can be a variable,
a function call, etc.).  This uses the Lisp printing routines to out a
readable representation on the TTY from which the sxemacs process was
invoked.

@item
If you want to get a Lisp backtrace showing the Lisp call
stack, do this:

@example
call db ()
@end example

@item
Using @code{dp} and @code{db} has two disadvantages - they can only be
used with a running (including hung or zombie) sxemacs process, and they
do not display the internal C structure of a Lisp Object.  Even if all
you've got is a core dump, all is not lost.

If you're using GDB, there are some macros in the file
@file{src/.gdbinit} in the SXEmacs source distribution that should
make it easier for you to decode Lisp objects.  This file is
automatically read by gdb if gdb is run in the directory where sxemacs
was built, and contains these useful macros to inspect the state of
sxemacs:

@table @code
@item pobj
Usage: pobj lisp_object @*
Print the internal C representation of a lisp object.

@item xtype
Usage: xtype lisp_object @*
Print the Lisp type of a lisp object.

@item lbt
Usage: lbt @*
Print the current Lisp stack trace.
Requires a running sxemacs process.  (It works by calling the db
routine described above.)

@item ldp
Usage: ldp lisp_object @*
Print a Lisp Object value using the Lisp printer.
Requires a running sxemacs process.  (It works by calling the dp
routine described above.)

@item run-temacs
Usage: run-temacs @*
Run temacs interactively, like sxemacs.
Use this with debugging tools (like purify) that cannot deal with
dumping, or when temacs builds successfully, but sxemacs does not.

@item dump-temacs
Usage: dump-temacs @*
Run the dumping part of the build procedure.
Use when debugging temacs, not sxemacs!
Use this when temacs builds successfully, but sxemacs does not.

@item check-sxemacs
Usage: check-sxemacs @*
Run the test suite.  Equivalent to 'make check'.

@item check-temacs
Usage: check-temacs @*
Run the test suite on temacs.  Equivalent to 'make check-temacs'.
Use this with debugging tools (like purify) that cannot deal with dumping,
or when temacs builds successfully, but sxemacs does not.
@end table

If you are using Sun's @file{dbx} debugger, there is an equivalent file
@file{src/.dbxrc}, which defines the same commands for dbx.

@item
If you're using a debugger to get a C stack backtrace and you're seeing
stack traces with some of the innermost frames mangled, it may be due to
dynamic linking. (This happens especially under Linux.) Consider
reconfiguring with @samp{--dynamic=no}.  Also, sometimes (again under
Linux), stack backtraces of core dumps will have the frame where the
fatal signal occurred mangled; if you can obtain a stack trace while
running the SXEmacs process under a debugger, the stack trace should
be clean.

@c @email{1CMC3466@@ibm.mtsac.edu, Curtiss} suggests upgrading to ld.so
@c version 1.8 if dynamic linking and debugging is a problem on Linux.

@item
If you're using a debugger to get a C stack backtrace and you're
getting a completely mangled and bogus stack trace, it's probably due to
one of the following:

@enumerate a
@item
Your executable has been stripped.  Bad news.  Tell your sysadmin not to
do this---it doesn't accomplish anything except to save a bit of disk
space, and makes debugging much much harder.

@item
Your stack is getting trashed.  Debugging this is hard; you have to do a
binary-search type of narrowing down where the crash occurs, until you
figure out exactly which line is causing the problem.  Of course, this
only works if the bug is highly reproducible.  Also, in many cases if
you run SXEmacs from the debugger, the debugger can protect the stack
somewhat.  However, if the stack is being smashed, it is typically the
case that there is a wild pointer somewhere in the program, often
quite far from where the crash occurs.

@item
If your stack trace has exactly one frame in it, with address 0x0, this
could simply mean that SXEmacs attempted to execute code at that
address, e.g. through jumping to a null function pointer.
Unfortunately, under those circumstances, GDB under Linux doesn't know
how to get a stack trace.
Yes, this is the fourth Linux-related problem I've mentioned.  I
have no idea why GDB under Linux is so bogus.  Complain to the GDB
authors, or to comp.os.linux.development.system.  Again, you'll have
to use the narrowing-down process described above.

@item
You will get a Lisp backtrace output when SXEmacs crashes, so you'll have
something useful.

@end enumerate
@end itemize


@node Q2.1.16
@unnumberedsec Q2.1.16: SXEmacs crashes in @code{strcat} on HP/UX 10

From the problems database (through
the former address http://support.mayfield.hp.com/):

@example
Problem Report: 5003302299
Status:         Open

System/Model:   9000/700
Product Name:   HPUX S800 10.0X
Product Vers:   9245XB.10.00

Description: strcat(3C) may read beyond
end of source string, can cause SIGSEGV


*** PROBLEM TEXT ***
strcat(3C) may read beyond the source string onto an unmapped page,
causing a segmentation violation.
@end example


@node Q2.1.17
@unnumberedsec Q2.1.17: @samp{Marker does not point anywhere}

As with other errors, set @code{debug-on-error} to @code{t} to get the
backtrace when the error occurs.


@node Q2.1.18
@unnumberedsec Q2.1.18: SXEmacs is outputting lots of X errors.

If this is happening, we would very much like to know what's causing
them.  To find this out, see @ref{Q2.1.15}.  Try to get both a C and Lisp
backtrace, and send them to @email{sxemacs-devel@@sxemacs.org}.


@node Q2.1.19
@unnumberedsec Q2.1.19: SXEmacs does not follow the local timezone.

When using one of the prebuilt binaries many users have observed that
SXEmacs uses the timezone under which it was built, but not the
timezone under which it is running.  The solution is to add:

@lisp
(set-time-zone-rule "MET")
@end lisp

to your @file{init.el} or the @file{site-start.el} file if you can.
Replace @code{MET} with your local timezone.


@node Q2.1.20
@unnumberedsec Q2.1.20: @samp{Symbol's function definition is void: hkey-help-show.}

This is a problem with a partially loaded hyperbole.  Try adding:

@lisp
(require 'hmouse-drv)
@end lisp

where you load hyperbole and the problem should go away.


@node Q2.1.21
@unnumberedsec Q2.1.21: [This question intentionally left blank]


@node Q2.1.22
@unnumberedsec Q2.1.22: SXEmacs seems to take a really long time to do some things

@email{dmoore@@ucsd.edu, David Moore} writes:

@quotation
Two things you can do:

1) C level:

When you see it going mad like this, you might want to use gdb from an
'xterm' to attach to the running process and get a stack trace.  To do
this just run:

@example
gdb /path/to/sxemacs/sxemacs ####
@end example

Where @code{####} is the process id of your sxemacs, instead of
specifying the core.  When gdb attaches, the sxemacs will stop [1] and
you can type `where' in gdb to get a stack trace as usual.  To get
things moving again, you can just type `quit' in gdb.  It'll tell you
the program is running and ask if you want to quit anyways.  Say 'y' and
it'll quit and have your emacs continue from where it was at.

2) Lisp level:

Turn on debug-on-quit early on.  When you think things are going slow
hit C-g and it may pop you in the debugger so you can see what routine
is running.  Press `c' to get going again.

debug-on-quit doesn't work if something's turned on inhibit-quit or in
some other strange cases.
@end quotation


@node Q2.1.23
@unnumberedsec Q2.1.23:  Movemail on Linux does not work for SXEmacs

@email{steve@@xemacs.org, SL Baur} writes:

@quotation
Movemail on Linux used to default to using flock file locking.  It now
defaults to using @code{.lock} file locking.  If this is not
appropriate for your system, edit src/s/linux.h and uncomment the line
that reads:

@example
#define MAIL_USE_FLOCK
@end example
@end quotation


@node Q2.1.24
@unnumberedsec Q2.1.24:  SXEmacs won't start without network.

If SXEmacs starts when you're on the network, but fails when you're not
on the network, you may be missing a "localhost" entry in your
@file{/etc/hosts} file.  The file should contain an entry like:

@example
127.0.0.1        localhost
@end example

Add that line, and SXEmacs will be happy.


@node Q2.1.25
@unnumberedsec Q2.1.25::  After upgrading, SXEmacs won't do `foo' any more!

You have been used to doing `foo', but now when you invoke it (or click
the toolbar button or select the menu item), nothing (or an error)
happens.  The simplest explanation is that you are missing a package
that is essential to you.  You can either track it down and install it
(there is a list of packages and brief descriptions of their contents in
@file{etc/PACKAGES}), or install the `Sumo Tarball' (@pxref{Q2.0.14}).

@c #### should xref to XEmacs manual here


@node Customisation, Subsystems, Installation, Top
@unnumbered 3 Customisation and Options

This is part 3 of the SXEmacs Frequently Asked Questions list.  This
section is devoted to Customisation and screen settings.

@menu
Customisation---Emacs Lisp and @file{init.el}/@file{.emacs}:
* Q3.0.1::      What version of Emacs am I running?
* Q3.0.2::      How do I evaluate Elisp expressions?
* Q3.0.3::      @code{(setq tab-width 6)} behaves oddly.
* Q3.0.4::      How can I add directories to the @code{load-path}?
* Q3.0.5::      How to check if a lisp function is defined?
* Q3.0.6::      Can I force the output of @code{(face-list)} to a buffer?
* Q3.0.7::      Font selections don't get saved after @code{Save Options}.
* Q3.0.8::      How do I make a single minibuffer frame?
* Q3.0.9::      What is @code{Customize}?

X Window System & Resources:
* Q3.1.1::      Where is a list of X resources?
* Q3.1.2::      How can I detect a color display?
* Q3.1.3::      [This question intentionally left blank]
* Q3.1.4::      [This question intentionally left blank]
* Q3.1.5::      How can I get the icon to just say @samp{SXEmacs}?
* Q3.1.6::      How can I have the window title area display the full path?
* Q3.1.7::      @samp{sxemacs -name junk} doesn't work?
* Q3.1.8::      @samp{-iconic} doesn't work.

Textual Fonts & Colors:
* Q3.2.1::      How can I set color options from @file{init.el}?
* Q3.2.2::      How do I set the text, menu and modeline fonts?
* Q3.2.3::      How can I set the colors when highlighting a region?
* Q3.2.4::      How can I limit color map usage?
* Q3.2.5::      My tty supports color, but SXEmacs doesn't use them.
* Q3.2.6::      Can I have pixmap backgrounds in SXEmacs?
* Q3.2.7::      How do I display non-ASCII characters?

The Modeline:
* Q3.3.1::      How can I make the modeline go away?
* Q3.3.2::      How do you have SXEmacs display the line number in the modeline?
* Q3.3.3::      How do I get SXEmacs to put the time of day on the modeline?
* Q3.3.4::      How do I turn off current chapter from AUC TeX modeline?
* Q3.3.5::      How can one change the modeline color based on the mode used?

Multiple Device Support:
* Q3.4.1::      How do I open a frame on another screen of my multi-headed display?
* Q3.4.2::      Can I really connect to a running SXEmacs after calling up over a modem?  How?

The Keyboard:
* Q3.5.1::      How can I bind complex functions (or macros) to keys?
* Q3.5.2::      How can I stop down-arrow from adding empty lines to the bottom of my buffers?
* Q3.5.3::      How do I bind C-. and C-; to scroll one line up and down?
* Q3.5.4::      Globally binding @kbd{Delete}?
* Q3.5.5::      Scrolling one line at a time.
* Q3.5.6::      How to map @kbd{Help} key alone on Sun type4 keyboard?
* Q3.5.7::      How can you type in special characters in SXEmacs?
* Q3.5.8::      [This question intentionally left blank]
* Q3.5.9::      How do I make the Delete key delete forward?
* Q3.5.10::     Can I turn on @dfn{sticky} modifier keys?
* Q3.5.11::     How do I map the arrow keys?

The Cursor:
* Q3.6.1::      Is there a way to make the bar cursor thicker?
* Q3.6.2::      Is there a way to get back the old block cursor where the cursor covers the character in front of the point?
* Q3.6.3::      Can I make the cursor blink?

The Mouse and Highlighting:
* Q3.7.1::      How can I turn off Mouse pasting?
* Q3.7.2::      How do I set control/meta/etc modifiers on mouse buttons?
* Q3.7.3::      Clicking the left button does not do anything in buffer list.
* Q3.7.4::      How can I get a list of buffers when I hit mouse button 3?
* Q3.7.5::      Why does cut-and-paste not work between SXEmacs and a cmdtool?
* Q3.7.6::      How I can set SXEmacs up so that it pastes where the text cursor is?
* Q3.7.7::      How do I select a rectangular region?
* Q3.7.8::      Why does @kbd{M-w} take so long?

The Menubar and Toolbar:
* Q3.8.1::      How do I get rid of the menu (or menubar)?
* Q3.8.2::      Can I customise the basic menubar?
* Q3.8.3::      How do I control how many buffers are listed in the menu @code{Buffers} list?
* Q3.8.4::      Resources like @code{Emacs*menubar*font} are not working?
* Q3.8.5::      How can I bind a key to a function to toggle the toolbar?

Scrollbars:
* Q3.9.1::      How can I disable the scrollbar?
* Q3.9.2::      How can one use resources to change scrollbar colors?
* Q3.9.3::      Moving the scrollbar can move the point; can I disable this?
* Q3.9.4::      How can I turn off automatic horizontal scrolling in specific modes?

Text Selections:
* Q3.10.1::     How can I turn off or change highlighted selections?
* Q3.10.2::     How do I get that typing on an active region removes it?
* Q3.10.3::     Can I turn off the highlight during isearch?
* Q3.10.4::     How do I turn off highlighting after @kbd{C-x C-p} (mark-page)?
* Q3.10.5::     The region disappears when I hit the end of buffer while scrolling.
* Q3.10.6::     Why is killing so slow?
@end menu

@node Q3.0.1
@unnumberedsec 3.0: Customisation -- Emacs Lisp and @file{init.el}
@unnumberedsec Q3.0.1: What version of Emacs am I running?

How can @file{init.el} determine which of the family of
Emacsen I am using?

To determine if you are currently running GNU Emacs 18, GNU Emacs 19,
XEmacs 19, XEmacs 20, or Epoch, and use appropriate code, check out the
example given in @file{etc/sample.init.el}.  There are other nifty
things in there as well!

For all new code, you can use the variables @code{running-xemacs} and
@code{running-sxemacs} or something like

@lisp
(when (featurep 'sxemacs)
  ...)
(when (featurep 'xemacs)
  ...)
@end lisp
@noindent
as well.

Please note, that you should double check these values, if you intend
to use xemacs-exclusive features.  Both, the variable
@code{running-xemacs} and the form @code{(featurep 'xemacs)} evaluate
to @code{t} within SXEmacs.  This is due to compatibility reasons.


@node Q3.0.2
@unnumberedsec Q3.0.2: How can I evaluate Emacs-Lisp expressions?

I know I can evaluate Elisp expressions from @code{*scratch*} buffer
with @kbd{C-j} after the expression.  How do I do it from another
buffer?

Press @kbd{M-:} (the default binding of @code{eval-expression}), and
enter the expression to the minibuffer.


@node Q3.0.3
@unnumberedsec Q3.0.3: @code{(setq tab-width 6)} behaves oddly.

If you put @code{(setq tab-width 6)} in your @file{init.el} file it
does not work!  Is there a reason for this?  If you do it at the EVAL
prompt it works fine!! How strange.

Use @code{setq-default} instead, since @code{tab-width} is
all-buffer-local.


@node Q3.0.4
@unnumberedsec Q3.0.4: How can I add directories to the @code{load-path}?

Here are two ways to do that, one that puts your directories at the
front of the load-path, the other at the end:

@lisp
;;; Add things at the beginning of the load-path, do not add
;;; duplicate directories:
(pushnew "bar" load-path :test 'equal)

(pushnew "foo" load-path :test 'equal)

;;; Add things at the end, unconditionally
(setq load-path (nconc load-path '("foo" "bar")))
@end lisp

@email{keithh@@nortel.ca, keith (k.p.) hanlan} writes:

@quotation
To add directories using Unix shell metacharacters use
@file{expand-file-name} like this:

@lisp
(push (expand-file-name "~keithh/.emacsdir") load-path)
@end lisp
@end quotation


@node Q3.0.5
@unnumberedsec Q3.0.5: How to check if a lisp function is defined?

Use the following elisp:

@lisp
(fboundp 'foo)
@end lisp

It's almost always a mistake to test @code{emacs-version} or any similar
variables.

Instead, use feature-tests, such as @code{featurep}, @code{boundp},
@code{fboundp}, or even simple behavioral tests, eg.:

@lisp
(defvar foo-old-losing-code-p
  (condition-case nil (progn (losing-code t) nil)
    (wrong-number-of-arguments t)))
@end lisp

There is an incredible amount of broken code out there which could work
much better more often in more places if it did the above instead of
trying to divine its environment from the value of one variable.


@node Q3.0.6
@unnumberedsec Q3.0.6: Can I force the output of @code{(face-list)} to a buffer?

It would be good having it in a buffer, as the output of
@code{(face-list)} is too wide to fit to a minibuffer.

Evaluate the expression in the @samp{*scratch*} buffer with point after
the rightmost paren and typing @kbd{C-j}.

If the minibuffer smallness is the only problem you encounter, you can
simply press @kbd{C-h l} to get the former minibuffer contents in a
buffer.


@node Q3.0.7
@unnumberedsec Q3.0.7: Font selections in don't get saved after @code{Save Options}.

@email{mannj@@ll.mit.edu, John Mann} writes:

@quotation
You have to go to Options->Frame Appearance and unselect
@samp{Frame-Local Font Menu}.  If this option is selected, font changes
are only applied to the @emph{current} frame and do @emph{not} get saved
when you save options.
@end quotation

Also, set the following in your @file{init.el}:

@lisp
(setq options-save-faces t)
@end lisp


@node Q3.0.8
@unnumberedsec Q3.0.8: How do I get a single minibuffer frame?

@email{acs@@acm.org, Vin Shelton} writes:

@lisp
(setq initial-frame-plist '(minibuffer nil))
(setq default-frame-plist '(minibuffer nil))
(setq default-minibuffer-frame
      (make-frame
       '(minibuffer only
                    width 86
                    height 1
                    menubar-visible-p nil
                    default-toolbar-visible-p nil
                    name "minibuffer"
                    top -2
                    left -2
                    has-modeline-p nil)))
(frame-notice-user-settings)
@end lisp

@strong{Please note:} The single minibuffer frame may not be to everyone's
taste, and there any number of other SXEmacs options settings that may
make it difficult or inconvenient to use.


@node Q3.0.9
@unnumberedsec Q3.0.9: What is @code{Customize}?

Starting with XEmacs 20.2 there is new system 'Customize' for customising
SXEmacs options.

You can access @code{Customize} from the @code{Options} menu
or invoking one of customize commands by typing eg.
@kbd{M-x customize}, @kbd{M-x customize-face},
@kbd{M-x customize-variable} or @kbd{M-x customize-apropos}.

Also try out with @kbd{M-x customize-browse}


@node Q3.1.1
@unnumberedsec 3.1: X Window System & Resources
@unnumberedsec Q3.1.1: Where is a list of X resources?

Search through the @file{NEWS} file for @samp{X Resources}.  A fairly
comprehensive list is given after it.

In addition, an @file{app-defaults} file @file{etc/Emacs.ad} is
supplied, listing the defaults.  The file @file{etc/sample.Xresources}
gives a different set of defaults that you might consider for
installation in your @file{~/.Xresources} file.  It is nearly the same
as @file{etc/Emacs.ad}, but a few entries are altered.  Be careful about
installing the contents of this file into your @file{.Xresources} (or
legacy @file{.Xdefaults}) file if you use GNU Emacs under X11 as well.


@node Q3.1.2
@unnumberedsec Q3.1.2: How can I detect a color display?

You can test the return value of the function @code{(device-class)}, as
in:

@lisp
(when (eq (device-class) 'color)
  (set-face-foreground  'font-lock-comment-face "Grey")
  (set-face-foreground  'font-lock-string-face  "Red")
  ....
  )
@end lisp


@node Q3.1.3
@unnumberedsec Q3.1.3: [This question intentionally left blank]

@node Q3.1.4
@unnumberedsec Q3.1.4: [This question intentionally left blank]


@node Q3.1.5
@unnumberedsec Q3.1.5: How can I get the icon to just say @samp{SXEmacs}?

I'd like the icon to just say @samp{SXEmacs}, and not include the name of
the current file in it.

Add the following line to your @file{init.el}:

@lisp
(setq frame-icon-title-format "SXEmacs")
@end lisp


@node Q3.1.6
@unnumberedsec Q3.1.6: How can I have the window title area display the full path?

I'd like to have the window title area display the full directory/name
of the current buffer file and not just the name.

Add the following line to your @file{init.el}:

@lisp
(setq frame-title-format "%S: %f")
@end lisp

A more sophisticated title might be:

@lisp
(setq frame-title-format
      '("%S: " (buffer-file-name "%f"
                                 (dired-directory dired-directory "%b"))))
@end lisp

That is, use the file name, or the dired-directory, or the buffer name.


@node Q3.1.7
@unnumberedsec Q3.1.7: @samp{sxemacs -name junk} doesn't work?

When I run @samp{xterm -name junk}, I get an xterm whose class name
according to xprop, is @samp{junk}.  This is the way it's supposed to
work, I think.  When I run @samp{sxemacs -name junk} the class name is
not set to @samp{junk}.  It's still @samp{emacs}.  What does
@samp{sxemacs -name} really do?  The reason I ask is that my window
manager (fvwm) will make a window sticky and I use SXEmacs to read my
mail.  I want that SXEmacs window to be sticky, without having to use the
window manager's function to set the window sticky.  What gives?

@samp{sxemacs -name} sets the application name for the program (that is,
the thing which normally comes from @samp{argv[0]}).  Using @samp{-name}
is the same as making a copy of the executable with that new name.  The
@code{WM_CLASS} property on each frame is set to the frame-name, and the
application-class.  So, if you did @samp{sxemacs -name FOO} and then
created a frame named @var{BAR}, you'd get an X window with WM_CLASS =
@code{( "BAR", "Emacs")}.  However, the resource hierarchy for this
widget would be:

@example
Name:    FOO   .shell             .container   .BAR
Class:   Emacs .TopLevelEmacsShell.EmacsManager.EmacsFrame
@end example

instead of the default

@example
Name:    sxemacs.shell            .container   .emacs
Class:   Emacs .TopLevelEmacsShell.EmacsManager.EmacsFrame
@end example


It is arguable that the first element of WM_CLASS should be set to the
application-name instead of the frame-name, but I think that's less
flexible, since it does not give you the ability to have multiple frames
with different WM_CLASS properties.  Another possibility would be for
the default frame name to come from the application name instead of
simply being @samp{emacs}.  However, at this point, making that change
would be troublesome: it would mean that many users would have to make
yet another change to their resource files (since the default frame name
would suddenly change from @samp{emacs} to @samp{sxemacs}, or whatever
the executable happened to be named), so we'd rather avoid it.

To make a frame with a particular name use:

@lisp
(make-frame '((name . "the-name")))
@end lisp


@node Q3.1.8
@unnumberedsec Q3.1.8: @samp{-iconic} doesn't work.

When I start up SXEmacs using @samp{-iconic} it doesn't work right.
Using @samp{-unmapped} on the command line, and setting the
@code{initiallyUnmapped} X Resource don't seem to help much either...

@email{ben@@xemacs.org, Ben Wing} writes:

@quotation
Ugh, this stuff is such an incredible mess that I've about given up
getting it to work.  The principal problem is numerous window-manager
bugs...
@end quotation


@node Q3.2.1
@unnumberedsec 3.2: Textual Fonts & Colors
@unnumberedsec Q3.2.1: How can I set color options from @file{init.el}?

How can I set the most commonly used color options from my
@file{init.el} instead of from my @file{.Xresources}?

Like this:

@lisp
(set-face-background 'default      "bisque") ; frame background
(set-face-foreground 'default      "black") ; normal text
(set-face-background 'zmacs-region "red") ; When selecting w/
                                        ; mouse
(set-face-foreground 'zmacs-region "yellow")
(set-face-font       'default      "*courier-bold-r*120-100-100*")
(set-face-background 'highlight    "blue") ; Ie when selecting
                                        ; buffers
(set-face-foreground 'highlight    "yellow")
(set-face-background 'modeline     "blue") ; Line at bottom
                                        ; of buffer
(set-face-foreground 'modeline     "white")
(set-face-font       'modeline     "*bold-r-normal*140-100-100*")
(set-face-background 'isearch      "yellow") ; When highlighting
                                        ; while searching
(set-face-foreground 'isearch      "red")
(setq x-pointer-foreground-color   "black") ; Adds to bg color,
                                        ; so keep black
(setq x-pointer-background-color   "blue") ; This is color
                                        ; you really
                                        ; want ptr/crsr
@end lisp


@node Q3.2.2
@unnumberedsec Q3.2.2: How do I set the text, menu and modeline fonts?

Note that you should use @samp{Emacs.} and not @samp{Emacs*} when
setting face values.

In @file{.Xresources}:

@example
Emacs.default.attributeFont:  -*-*-medium-r-*-*-*-120-*-*-m-*-*-*
Emacs*menubar*font:           fixed
Emacs.modeline.attributeFont: fixed
@end example

This is confusing because @samp{default} and @samp{modeline} are face
names, and can be found listed with all faces in the current mode by
using @kbd{M-x set-face-font (enter) ?}.  They use the face-specific
resource @samp{attributeFont}.

On the other hand, @samp{menubar} is a normal X thing that uses the
resource @samp{font}.  With Motif it @emph{may be} necessary to use
@samp{fontList} @emph{instead of} @samp{font}.  In @emph{non-Motif}
configurations with Mule it @emph{is} necessary to use @samp{fontSet}
instead of @samp{font}.  (Sorry, there just is no simple recipe here.)


@node Q3.2.3
@unnumberedsec Q3.2.3: How can I set the colors when highlighting a region?

How can I set the background/foreground colors when highlighting a
region?

You can change the face @code{zmacs-region} either in your
@file{.Xresources}:

@example
Emacs.zmacs-region.attributeForeground: firebrick
Emacs.zmacs-region.attributeBackground: lightseagreen
@end example

or in your @file{init.el}:

@lisp
(set-face-background 'zmacs-region "red")
(set-face-foreground 'zmacs-region "yellow")
@end lisp


@node Q3.2.4
@unnumberedsec Q3.2.4: How can I limit color map usage?

I'm using Netscape (or another color grabber like SXEmacs);
is there any way to limit the number of available colors in the color map?

Answer: No, but you can start Netscape before SXEmacs, and it will use
the closest available color if the colormap is full.  You can also limit
the number of colors Netscape uses, using the flags -mono, -ncols <#> or
-install (for mono, limiting to <#> colors, or for using a private color
map).

If you have the money, another solution would be to use a truecolor or
direct color video.


@node Q3.2.5
@unnumberedsec Q3.2.5: My tty supports color, but SXEmacs doesn't use them.

SXEmacs tries to automatically determine whether your tty supports color,
but sometimes guesses wrong.  In that case, you can make SXEmacs Do The
Right Thing using this Lisp code:

@lisp
(if (eq 'tty (device-type))
    (set-device-class nil 'color))
@end lisp


@node Q3.2.6
@unnumberedsec Q3.2.6: Can I have pixmap backgrounds in SXEmacs?
@c New
@email{jvillaci@@wahnsinnig.extreme.indiana.edu, Juan Villacis} writes:

@quotation
There are several ways to do it.  For example, you could specify a
default pixmap image to use in your @file{~/.Xresources}, e.g.,


@example
  Emacs*EmacsFrame.default.attributeBackgroundPixmap: /path/to/image.xpm
@end example


and then reload ~/.Xresources and restart SXEmacs.  Alternatively,
since each face can have its own pixmap background, a better way
would be to set a face's pixmap within your SXEmacs init file, e.g.,

@lisp
  (set-face-background-pixmap 'default "/path/to/image.xpm")
  (set-face-background-pixmap 'bold    "/path/to/another_image.xpm")
@end lisp

and so on.  You can also do this interactively via @kbd{M-x edit-faces}.

@end quotation


@node Q3.2.7
@unnumberedsec Q3.2.7: How do I display non-ASCII characters?
@c New

If you're using a Mule-enabled SXEmacs, then display is automatic.  If
you're not seeing the characters you expect, either (1) you don't have
appropriate fonts available or (2) SXEmacs did not correctly detect the
coding system (@pxref{Recognize Coding, , , sxemacs}).  In case (1),
install fonts as is customary for your platform.  In case (2), you
need to tell SXEmacs explicitly what coding systems you're using.
@ref{Specify Coding, , , sxemacs}.

If your SXEmacs is not Mule-enabled, and for some reason getting a
Mule-enabled SXEmacs seems like the wrong thing to do, all is not lost.
You can arrange it by brute force.  In @file{event-Xt.c} (suppress the
urge to look in this file---play Doom instead, because you'll survive
longer), it is written:

@quotation
In a non-Mule world, a user can still have a multi-lingual editor, by
doing @code{(set-face-font "-*-iso8859-2" (current-buffer))} for all
their Latin-2 buffers, etc.
@end quotation

For the related problem of @emph{inputting} non-ASCII characters in a
non-Mule SXEmacs, @xref{Q3.5.7}.


@node Q3.3.1
@unnumberedsec 3.3: The Modeline
@unnumberedsec Q3.3.1: How can I make the modeline go away?

@lisp
(set-specifier has-modeline-p nil)
@end lisp


@node Q3.3.2
@unnumberedsec Q3.3.2: How do you have SXEmacs display the line number in the modeline?

Add the following line to your @file{init.el} file to
display the line number:

@lisp
(line-number-mode 1)
@end lisp

Use the following to display the column number:

@lisp
(column-number-mode 1)
@end lisp

Or select from the @code{Options} menu
@iftex
@*
@end iftex
@code{Advanced (Customize)->Emacs->Editing->Basics->Line Number Mode}
and/or
@iftex
@*
@end iftex
@code{Advanced (Customize)->Emacs->Editing->Basics->Column Number Mode}

Or type @kbd{M-x customize @key{RET} editing-basics @key{RET}}.


@node Q3.3.3
@unnumberedsec Q3.3.3: How do I get SXEmacs to put the time of day on the modeline?

Add the following line to your @file{init.el}/@file{.emacs} file to
display the time:

@lisp
(display-time)
@end lisp

See @code{Customize} from the @code{Options} menu for customisation.


@node Q3.3.4
@unnumberedsec Q3.3.4: How do I turn off current chapter from AUC TeX modeline?

With AUC TeX, fast typing is hard because the current chapter, section
etc. are given in the modeline.  How can I turn this off?

It's not AUC TeX, it comes from @code{func-menu} in @file{func-menu.el}.

@c Add this code to your @file{init.el}/@file{.emacs} to turn it off:
@c
@c @lisp
@c (setq fume-display-in-modeline-p nil)
@c @end lisp
@c
@c Or just add a hook to @code{TeX-mode-hook} to turn it off only for TeX
@c mode:
@c
@c @lisp
@c (add-hook 'TeX-mode-hook
@c           '(lambda () (setq fume-display-in-modeline-p nil)))
@c @end lisp
@c
@email{dhughes@@origin-at.co.uk, David Hughes} writes:

@quotation
Try this; you'll still get the function name displayed in the modeline,
but it won't attempt to keep track when you modify the file. To refresh
when it gets out of synch, you simply need click on the @samp{Rescan
Buffer} option in the function-menu.

@lisp
(setq-default fume-auto-rescan-buffer-p nil)
@end lisp
@end quotation


@node Q3.3.5
@unnumberedsec Q3.3.5: How can one change the modeline color based on the mode used?

You can use something like the following:

@lisp
(add-hook 'lisp-mode-hook
          (lambda ()
            (set-face-background 'modeline "red" (current-buffer))))
@end lisp

Then, when editing a Lisp file (i.e. when in Lisp mode), the modeline
colors change from the default set in your @file{init.el}.
The change will only be made in the buffer you just entered (which
contains the Lisp file you are editing) and will not affect the modeline
colors anywhere else.

Notes:

@itemize @bullet

@item The hook is the mode name plus @code{-hook}.  eg. c-mode-hook,
c++-mode-hook, emacs-lisp-mode-hook (used for your
@file{init.el} or a @file{xx.el} file),
lisp-interaction-mode-hook (the @samp{*scratch*} buffer),
text-mode-hook, etc.

@item
Be sure to use @code{add-hook}, not @code{(setq c-mode-hook xxxx)},
otherwise you will erase anything that anybody has already put on the
hook.

@item
You can also do @code{(set-face-font 'modeline @var{font})},
eg. @code{(set-face-font 'modeline "*bold-r-normal*140-100-100*"
(current-buffer))} if you wish the modeline font to vary based on the
current mode.
@end itemize

There are additional modeline faces, @code{modeline-buffer-id},
@code{modeline-mousable}, and @code{modeline-mousable-minor-mode}, which
you may want to customize.


@node Q3.4.1
@unnumberedsec 3.4: Multiple Device Support
@unnumberedsec Q3.4.1: How do I open a frame on another screen of my multi-headed display?

Use the command @kbd{M-x make-frame-on-display}.  This command is also
on the File menu in the menubar.

The command @code{make-frame-on-tty} also exists, which will establish a
connection to any tty-like device.  Opening the TTY devices should be
left to @code{gnuclient}, though.


@node Q3.4.2
@unnumberedsec Q3.4.2: Can I really connect to a running SXEmacs after calling up over a modem?  How?

Yes.  Use @code{gnuclient -nw}.

Also see @ref{Q5.0.12}.


@node Q3.5.1
@unnumberedsec 3.5: The Keyboard
@unnumberedsec Q3.5.1: How can I bind complex functions (or macros) to keys?

As an example, say you want the @kbd{paste} key on a Sun keyboard to
insert the current Primary X selection at point. You can accomplish this
with:

@lisp
(define-key global-map [f18] 'x-insert-selection)
@end lisp

However, this only works if there is a current X selection (the
selection will be highlighted).  The functionality I like is for the
@kbd{paste} key to insert the current X selection if there is one,
otherwise insert the contents of the clipboard.  To do this you need to
pass arguments to @code{x-insert-selection}.  This is done by wrapping
the call in a 'lambda form:

@lisp
(global-set-key [f18]
  (lambda () (interactive) (x-insert-selection t nil)))
@end lisp

This binds the f18 key to a @dfn{generic} functional object.  The
interactive spec is required because only interactive functions can be
bound to keys.

For the FAQ example you could use:

@lisp
(global-set-key [(control ?.)]
  (lambda () (interactive) (scroll-up 1)))
(global-set-key [(control ?;)]
  (lambda () (interactive) (scroll-up -1)))
@end lisp

This is fine if you only need a few functions within the lambda body.
If you're doing more it's cleaner to define a separate function as in
question 3.5.3 (@pxref{Q3.5.3}).


@node Q3.5.2
@unnumberedsec Q3.5.2: How can I stop down-arrow from adding empty lines to the bottom of my buffers?

Add the following line to your @file{init.el} file:

@lisp
(setq next-line-add-newlines nil)
@end lisp

This has been the default setting in SXEmacs for some time.


@node Q3.5.3
@unnumberedsec Q3.5.3: How do I bind C-. and C-; to scroll one line up and down?

Add the following (Thanks to @email{mly@@adoc.xerox.com, Richard Mlynarik} and
@email{wayne@@zen.cac.stratus.com, Wayne Newberry}) to @file{.emacs}:

@lisp
(defun scroll-up-one-line ()
  (interactive)
  (scroll-up 1))

(defun scroll-down-one-line ()
  (interactive)
  (scroll-down 1))

(global-set-key [(control ?.)] 'scroll-up-one-line) ; C-.
(global-set-key [(control ?;)] 'scroll-down-one-line) ; C-;
@end lisp

The key point is that you can only bind simple functions to keys; you
can not bind a key to a function that you're also passing arguments to.
(@pxref{Q3.5.1} for a better answer).


@node Q3.5.4
@unnumberedsec Q3.5.4: Globally binding @kbd{Delete}?

I cannot manage to globally bind my @kbd{Delete} key to something other
than the default.  How does one do this?

Answer: The problem is that many modes explicitly bind @kbd{Delete}.  To
get around this, try the following:

@lisp
(defun foo ()
  (interactive)
  (message "You hit DELETE"))

(define-key key-translation-map 'delete 'redirected-delete)
(global-set-key 'redirected-delete 'foo)
@end lisp

Also see @ref{Q3.5.10}.


@node Q3.5.5
@unnumberedsec Q3.5.5: Scrolling one line at a time.

Can the cursor keys scroll the screen a line at a time, rather than the
default half page jump?  I tend it to find it disorienting.

Try this:

@lisp
(defun scroll-one-line-up (&optional arg)
  "Scroll the selected window up (forward in the text) one line (or N lines)."
  (interactive "p")
  (scroll-up (or arg 1)))

(defun scroll-one-line-down (&optional arg)
  "Scroll the selected window down (backward in the text) one line (or N)."
  (interactive "p")
  (scroll-down (or arg 1)))

(global-set-key [up]   'scroll-one-line-up)
(global-set-key [down] 'scroll-one-line-down)
@end lisp

The following will also work but will affect more than just the cursor
keys (i.e. @kbd{C-n} and @kbd{C-p}):

@lisp
(setq scroll-step 1)
@end lisp

You can also change this with Customize.
Select from the @code{Options} menu
@code{Advanced (Customize)->Emacs->Environment->Windows->Scroll Step...} or type
@kbd{M-x customize @key{RET} windows @key{RET}}.


@node Q3.5.6
@unnumberedsec Q3.5.6: How to map @kbd{Help} key alone on Sun type4 keyboard?

The following works in GNU Emacs 19:

@lisp
(global-set-key [help] 'help-command);; Help
@end lisp

The following works in SXEmacs with the addition of shift:

@lisp
(global-set-key [(shift help)] 'help-command);; Help
@end lisp

But it doesn't work alone.  This is in the file @file{PROBLEMS} which
should have come with your SXEmacs installation: @emph{Emacs ignores the
@kbd{help} key when running OLWM}.

OLWM grabs the @kbd{help} key, and retransmits it to the appropriate
client using
@iftex
@*
@end iftex
@code{XSendEvent}.  Allowing Emacs to react to synthetic
events is a security hole, so this is turned off by default.  You can
enable it by setting the variable @code{x-allow-sendevents} to t.  You
can also cause fix this by telling OLWM to not grab the help key, with
the null binding @code{OpenWindows.KeyboardCommand.Help:}.


@node Q3.5.7
@unnumberedsec Q3.5.7: How can you type in special characters in SXEmacs?
@c Changed
One way is to use the package @code{x-compose}.  Then you can use
sequences like @kbd{Compose " a} to get ä, etc.

Another way is to use the @code{iso-insert} package. Then you can use
sequences like @kbd{C-x 8 " a} to get ä, etc.

@email{glynn@@sensei.co.uk, Glynn Clements} writes:

@quotation
It depends upon your X server.

Generally, the simplest way is to define a key as Multi_key with
xmodmap, e.g.
@c hey, show some respect, willya -- there's xkeycaps, isn't there? --
@c chr ;)
@example
        xmodmap -e 'keycode 0xff20 = Multi_key'
@end example

You will need to pick an appropriate keycode. Use xev to find out the
keycodes for each key.

[NB: On a `Windows' keyboard, recent versions of XFree86 automatically
define the right `Windows' key as Multi_key'.]

Once you have Multi_key defined, you can use e.g.
@example
        Multi a '       => á
        Multi e "       => ë
        Multi c ,       => ç
@end example

etc.

Also, recent versions of XFree86 define various AltGr-<key>
combinations as dead keys, i.e.
@example
        AltGr [         => dead_diaeresis
        AltGr ]         => dead_tilde
        AltGr ;         => dead_acute
@end example
etc.

Running @samp{xmodmap -pk} will list all of the defined keysyms.
@end quotation

For the related problem of @emph{displaying} non-ASCII characters in a
non-Mule SXEmacs, @xref{Q3.2.7}.


@node Q3.5.8
@unnumberedsec Q3.5.8: [This question intentionally left blank]

Obsolete question, left blank to avoid renumbering.


@node Q3.5.9
@unnumberedsec Q3.5.9: How do I make the Delete key delete forward?

A solution is to set variable @code{delete-key-deletes-forward} to t.
You can also change this with Customize. Select from the
@code{Options} menu @code{Advanced
(Customize)->Emacs->Editing->Basics->Delete Key Deletes Forward} or
type @kbd{M-x customize @key{RET} editing-basics @key{RET}}.

Also see @ref{Q3.5.4}.


@node Q3.5.10
@unnumberedsec Q3.5.10: Can I turn on @dfn{sticky} modifier keys?

Yes, with @code{(setq modifier-keys-are-sticky t)}.  This will give the
effect of being able to press and release Shift and have the next
character typed come out in upper case.  This will affect all the other
modifier keys like Control and Meta as well.

@email{ben@@xemacs.org, Ben Wing} writes:

@quotation
One thing about the sticky modifiers is that if you move the mouse out
of the frame and back in, it cancels all currently ``stuck'' modifiers.
@end quotation

@node Q3.5.11
@unnumberedsec Q3.5.11: How do I map the arrow keys?
@c New
Say you want to map @kbd{C-@key{right}} to forward-word:

@email{sds@@usa.net, Sam Steingold} writes:

@quotation
@lisp
; both (S)XEmacs and Emacs
(define-key global-map [(control right)] 'forward-word)
@end lisp
or
@lisp
; Emacs only
(define-key global-map [C-right] 'forward-word)
@end lisp
or
@lisp
; ver > 20, both
(define-key global-map (kbd "C-<right>") 'forward-word)
@end lisp
@end quotation



@node Q3.6.1
@unnumberedsec 3.6: The Cursor
@unnumberedsec Q3.6.1: Is there a way to make the bar cursor thicker?

I'd like to have the bar cursor a little thicker, as I tend to "lose" it
often.

For a 1 pixel bar cursor, use:

@lisp
(setq bar-cursor t)
@end lisp

For a 2 pixel bar cursor, use:

@lisp
(setq bar-cursor 'anything-else)
@end lisp

You can also change these with Customize.  Select from the
@code{Options} menu @code{Advanced
(Customize)->Emacs->Environment->Display->Bar Cursor...} or type
@kbd{M-x customize @key{RET} display @key{RET}}.

You can use a color to make it stand out better:

@example
Emacs*cursorColor:      Red
@end example


@node Q3.6.2
@unnumberedsec Q3.6.2: Is there a way to get back the block cursor?

@lisp
(setq bar-cursor nil)
@end lisp

You can also change this with Customize.  Select from the
@code{Options} menu @code{Advanced
(Customize)->Emacs->Environment->Display->Bar Cursor...} or type
@kbd{M-x customize @key{RET} display @key{RET}}.


@node Q3.6.3
@unnumberedsec Q3.6.3: Can I make the cursor blink?

Yes, like this:

@lisp
(blink-cursor-mode)
@end lisp

This function toggles between a steady cursor and a blinking cursor.
You may also set this mode from the menu bar by selecting @samp{Options
=> Frame Appearance => Blinking Cursor}.  Remember to save options.


@node Q3.7.1
@unnumberedsec 3.7: The Mouse and Highlighting
@unnumberedsec Q3.7.1: How can I turn off Mouse pasting?

I keep hitting the middle mouse button by accident and getting stuff
pasted into my buffer so how can I turn this off?

Here is an alternative binding, whereby the middle mouse button selects
(but does not cut) the expression under the mouse. Clicking middle on a
left or right paren will select to the matching one.  Note that you can
use @code{define-key} or @code{global-set-key}.

@lisp
(defun mouse-set-point-and-select (event)
  "Sets the point at the mouse location, then marks following form"
  (interactive "@@e")
  (mouse-set-point event)
  (mark-sexp 1))
(define-key global-map [button2] 'mouse-set-point-and-select)
@end lisp


@node Q3.7.2
@unnumberedsec Q3.7.2: How do I set control/meta/etc modifiers on mouse buttons?

Use, for instance, @code{[(meta button1)]}. For example, here is a common
setting for Common Lisp programmers who use the bundled @code{ilisp}
package, whereby meta-button1 on a function name will find the file where
the function name was defined, and put you at that location in the source
file.

[Inside a function that gets called by the lisp-mode-hook and
ilisp-mode-hook]

@lisp
(local-set-key [(meta button1)] 'edit-definitions-lisp)
@end lisp


@node Q3.7.3
@unnumberedsec Q3.7.3: Clicking the left button does not do anything in buffer list.

I do @kbd{C-x C-b} to get a list of buffers and the entries get
highlighted when I move the mouse over them but clicking the left mouse
does not do anything.

Use the middle mouse button.


@node Q3.7.4
@unnumberedsec Q3.7.4: How can I get a list of buffers when I hit mouse button 3?

The following code will replace the default popup on button3:

@lisp
(global-set-key [button3] 'popup-buffer-menu)
@end lisp


@node Q3.7.5
@unnumberedsec Q3.7.5: Why does cut-and-paste not work between SXEmacs and a cmdtool?

We don't know.  It's a bug.  There does seem to be a work-around,
however.  Try running xclipboard first.  It appears to fix the problem
even if you exit it..


@node Q3.7.6
@unnumberedsec Q3.7.6: How I can set SXEmacs up so that it pastes where the text cursor is?

By default SXEmacs pastes X selections where the mouse pointer is.  How
do I disable this?

Examine the function @code{mouse-yank}, by typing @kbd{C-h f mouse-yank
@key{RET}}.

To get SXEmacs to paste at the text cursor, add this your @file{init.el}:

@lisp
(setq mouse-yank-at-point t)
@end lisp

You can also change this with Customize.  Select from the
@code{Options} menu @code{Advanced
(Customize)->Emacs->Editing->Mouse->Yank At Point...} or type @kbd{M-x
customize @key{RET} mouse @key{RET}}.


@node Q3.7.7
@unnumberedsec Q3.7.7: How do I select a rectangular region?

Just select the region normally, then use the rectangle commands (e.g.
@code{kill-rectangle} on it.  The region does not highlight as a
rectangle, but the commands work just fine.

To actually sweep out rectangular regions with the mouse you can use
@code{mouse-track-do-rectangle} which is assigned to @kbd{M-button1}.
Then use rectangle commands.

You can also do the following to change default behavior to sweep out
rectangular regions:

@lisp
(setq mouse-track-rectangle-p t)
@end lisp

You can also change this with Customize.  Select from the
@code{Options} menu @code{Advanced
(Customize)->Emacs->Editing->Mouse->Track Rectangle...} or type
@kbd{M-x customize @key{RET} mouse @key{RET}}.


@example
 mouse-track-do-rectangle: (event)
   -- an interactive compiled Lisp function.
 Like `mouse-track' but selects rectangles instead of regions.
@end example


@node Q3.7.8
@unnumberedsec Q3.7.8: Why does @kbd{M-w} take so long?

It actually doesn't.  It leaves the region visible for a second so that
you can see what area is being yanked.  If you start working, though, it
will immediately complete its operation.  In other words, it will only
delay for a second if you let it.


@node Q3.8.1
@unnumberedsec 3.8: The Menubar and Toolbar
@unnumberedsec Q3.8.1: How do I get rid of the menu (or menubar)?

@c If you are running XEmacs 19.13 or earlier, add this command to your
@c @file{init.el}/@file{.emacs}.
@c
@c @lisp
@c (set-menubar nil)
@c @end lisp
@c
@c Starting with XEmacs 19.14 the preferred method is:
@c
@lisp
(set-specifier menubar-visible-p nil)
@end lisp


@node Q3.8.2
@unnumberedsec Q3.8.2: Can I customise the basic menubar?

For an extensive menubar, add this line to your @file{init.el}:

@lisp
(load "big-menubar")
@end lisp

If you'd like to write your own, this file provides as good a set of
examples as any to start from.  The file is located in edit-utils
package. 


@node Q3.8.3
@unnumberedsec Q3.8.3: How do I control how many buffers are listed in the menu @code{Buffers List}?

Add the following to your @file{init.el} (suit to fit):

@lisp
(setq buffers-menu-max-size 20)
@end lisp

For no limit, use an argument of @samp{nil}.

You can also change this with Customize.  Select from the
@code{Options} menu @code{Advanced
(Customize)->Emacs->Environment->Menu->Buffers Menu->Max Size...} or
type @kbd{M-x customize @key{RET} buffers-menu @key{RET}}.


@node Q3.8.4
@unnumberedsec Q3.8.4: Resources like @code{Emacs*menubar*font} are not working?

I am trying to use a resource like @code{Emacs*menubar*font} to set the
font of the menubar but it's not working.

In Motif, the use of @samp{font} resources is obsoleted in order to
support internationalisation.  If you are using the real Motif menubar,
this resource is not recognized at all; you have to say:

@example
Emacs*menubar*fontList: FONT
@end example

If you are using the Lucid menubar, for backward compatibility with
existing user configurations, the @samp{font} resource is recognized.
Since this is not supported by Motif itself, the code is a kludge and
the @samp{font} resource will be recognized only if the @samp{fontList}
resource resource is unset.  This means that the resource

@example
*fontList: FONT
@end example

will override

@example
Emacs*menubar*font: FONT
@end example

even though the latter is more specific.

In non-Motif configurations using @samp{--with-mule} and
@samp{--with-xfs} it @emph{is} necessary to use the @code{fontSet}
resource @emph{instead of} the @code{font} resource.  The backward
compatibility kludge was never implemented for non-Motif builds.
Example:

@example
*fontSet: FONT
@end example


@node Q3.8.5
@unnumberedsec Q3.8.5: How can I bind a key to a function to toggle the toolbar?

Try something like:

@lisp
(defun my-toggle-toolbar ()
  (interactive)
  (set-specifier default-toolbar-visible-p
                 (not (specifier-instance default-toolbar-visible-p))))
(global-set-key "\C-xT" 'my-toggle-toolbar)
@end lisp


@node Q3.9.1
@unnumberedsec 3.9: Scrollbars
@unnumberedsec Q3.9.1: How can I disable the scrollbar?

To disable them for all frames, add the following line to
your @file{.Xresources}:

@example
Emacs.scrollBarWidth:  0
@end example

Or select from the @code{Options} menu @code{Frame Appearance->Scrollbars}.
Remember to save options.

To turn the scrollbar off on a per-frame basis, use the following
function:

@lisp
(set-specifier scrollbar-width 0 (selected-frame))
@end lisp

You can actually turn the scrollbars on at any level you want by
substituting for (selected-frame) in the above command.  For example, to
turn the scrollbars off only in a single buffer:

@lisp
(set-specifier scrollbar-width 0 (current-buffer))
@end lisp


@node Q3.9.2
@unnumberedsec Q3.9.2: How can one use resources to change scrollbar colors?

Here's a recap of how to use resources to change your scrollbar colors:

@example
! Motif scrollbars

Emacs*XmScrollBar.Background: skyblue
Emacs*XmScrollBar.troughColor: lightgray

! Athena scrollbars

Emacs*Scrollbar.Foreground: skyblue
Emacs*Scrollbar.Background: lightgray
@end example

Note the capitalisation of @code{Scrollbar} for the Athena widget.


@node Q3.9.3
@unnumberedsec Q3.9.3: Moving the scrollbar can move the point; can I disable this?

When I move the scrollbar in a SXEmacs window, it moves the point as
well, which should not be the default behavior.  Is this a bug or a
feature?  Can I disable it?

The current behavior is a feature, not a bug.  Point remains at the same
buffer position as long as that position does not scroll off the screen.
In that event, point will end up in either the upper-left or lower-left
hand corner.

This cannot be changed.


@node Q3.9.4
@unnumberedsec Q3.9.4: How can I turn off automatic horizontal scrolling in specific modes?

Do @code{(setq truncate-lines t)} in the mode-hooks for any modes
in which you want lines truncated.

More precisely: If @code{truncate-lines} is nil, horizontal scrollbars
will never appear.  Otherwise, they will appear only if the value of
@code{scrollbar-height} for that buffer/window/etc. is non-zero.  If you
do

@lisp
(set-specifier scrollbar-height 0)
@end lisp

then horizontal scrollbars will not appear in truncated buffers unless
the package specifically asked for them.


@node Q3.10.1
@unnumberedsec 3.10: Text Selections
@unnumberedsec Q3.10.1: How can I turn off or change highlighted selections?

The @code{zmacs} mode allows for what some might call gratuitous
highlighting for selected regions (either by setting mark or by using
the mouse).  This is the default behavior.  To turn off, add the
following line to your @file{init.el} file:

@lisp
(setq zmacs-regions nil)
@end lisp

You can also change this with Customize. Select from the
@code{Options} menu @code{Advanced
(Customize)->Emacs->Editing->Basics->Zmacs Regions} or type @kbd{M-x
customize @key{RET} editing-basics @key{RET}}.

To change the face for selection, look at @code{Options->Customize} on
the menubar.


@node Q3.10.2
@unnumberedsec Q3.10.2: How do I get that typing on an active region removes it?

I want to change things so that if I select some text and start typing,
the typed text replaces the selected text, similar to Motif.

You want to use something called @dfn{pending delete}.  Pending delete
is what happens when you select a region (with the mouse or keyboard)
and you press a key to replace the selected region by the key you typed.
Usually backspace kills the selected region.

To get this behavior, ensure that you have the @file{pc} package
installed, and add the following lines to your
@file{init.el}/@file{.emacs}:

@lisp
(cond
 ((fboundp 'turn-on-pending-delete)
  (turn-on-pending-delete))
 ((fboundp 'pending-delete-on)
  (pending-delete-on t)))
@end lisp

Note that this will work with both Backspace and Delete.  This code is a
tad more complicated than it has to be for SXEmacs in order to make it
more portable.


@node Q3.10.3
@unnumberedsec Q3.10.3: Can I turn off the highlight during isearch?

I do not like my text highlighted while I am doing isearch as I am not
able to see what's underneath.  How do I turn it off?

Put the following in your @file{init.el}:

@lisp
(setq isearch-highlight nil)
@end lisp

You can also change this with Customize. Type @kbd{M-x
customize-variable @key{RET} isearch-highlight @key{RET}}.

Note also that isearch-highlight affects query-replace and ispell.
Instead of disabling isearch-highlight you may find that a better
solution consists of customizing the @code{isearch} face.


@node Q3.10.4
@unnumberedsec Q3.10.4: How do I turn off highlighting after @kbd{C-x C-p} (mark-page)?

Put this in your @file{init.el}:

@lisp
(setq zmacs-regions nil)
@end lisp

@strong{Warning: This command turns off all region highlighting.}

Also see @ref{Q3.10.1}.


@node Q3.10.5
@unnumberedsec Q3.10.5: The region disappears when I hit the end of buffer while scrolling.

Does not apply anymore.


@node Q3.10.6
@unnumberedsec Q3.10.6: Why is killing so slow?

This actually is an X Windows question, although you'll notice it with
keyboard operations as well as while using the GUI.  Basically, there
are four ways to communicate interprogram via the X server:

@table @strong
@item Primary selection
a transient selection that gets replaced every time a new selection is made

@item Secondary selection
for "exchanging" with the primary selection

@item Cut buffers
a clipboard internal to the X server (deprecated)

@item Clipboard selection
a selection with a notification protocol that allows a separate app to
manage the clipboard
@end table

The cut buffers are deprecated because managing them is even more
inefficient than the clipboard notification protocol.  The primary
selection works fine for many users and applications, but is not very
robust under intensive or sophisticated use.

In Motif, a clipboard has become the primary means for managing cut
and paste.  These means that "modern" applications tend to be oriented
toward a true clipboard, rather than the primary selection.  It's not
that SXEmacs doesn't support the simple primary selection method, it's
that more and more other applications don't.

So the slowdown occurs because SXEmacs now engages in the clipboard
notification protocol on @emph{every} kill.  This is especially slow on
Motif.

With most people running most clients and server on the same host, and
many of the rest working over very fast communication, you may expect
that the situation is not going to improve.

There are a number of workarounds.  The most effective is to use a
special command to do selection ownership only when you intend to paste
to another application.  Useful commands are @code{kill-primary-selection}
and @code{copy-primary-selection}.  These work only on text selected
with the mouse (probably; experiment), and are bound by default to the
@kbd{Cut} and @kbd{Copy}, respectively, buttons on the toolbar.
@code{copy-primary-selection} is also bound to @kbd{C-Insert}.  You can
yank the clipboard contents with @code{yank-primary-selection}, bound to
the @kbd{Paste} toolbar button and @kbd{Sh-Insert}.

If you are communicating by cut and paste with applications that use the
primary selection, then you can customize
@code{interprogram-cut-function} to @code{nil}, restoring the XEmacs
version 20 behavior.  How can you tell if a program will support this?
Motifly-correct programs require the clipboard; you lose.  For others,
only by trying it.  You also need to customize the complementary
@code{interprogram-paste-function} to @code{nil}.  (Otherwise
SXEmacs-to-SXEmacs pastes will not work correctly.)

You may get some relief on Motif by setting
@code{x-selection-strict-motif-ownership} to nil, but this means you will
only intermittently be able to paste SXEmacs kills to Motif applications.

Thanks to Jeff Mincy and Glynn Clements for corrections.


@node Subsystems, Miscellaneous, Customisation, Top
@unnumbered 4 Major Subsystems

This is part 4 of the SXEmacs Frequently Asked Questions list.  This
section is devoted to major SXEmacs subsystems.

@menu
Reading Mail with VM:
* Q4.0.1::      How do I set up VM to retrieve remote mail using POP?
* Q4.0.2::      How do I get VM to filter mail for me?
* Q4.0.3::      How can I get VM to automatically check for new mail?
* Q4.0.4::      [This question intentionally left blank]
* Q4.0.5::      How do I get my outgoing mail archived?
* Q4.0.6::      I have various addresses at which I receive mail.  How
		  can I tell VM to ignore them when doing a "reply-all"?
* Q4.0.7::      Is there a mailing list or FAQ for VM?
* Q4.0.8::      Remote mail reading with VM.
* Q4.0.9::      rmail or VM gets an error incorporating new mail.
* Q4.0.10::     How do I make VM stay in a single frame?
* Q4.0.11::     How do I make VM or mh-e display graphical smilies?
* Q4.0.12::     Customisation of VM not covered in the manual or here.

Web browsing with W3:
* Q4.1.1::      What is W3?
* Q4.1.2::      How do I run W3 from behind a firewall?
* Q4.1.3::      Is it true that W3 supports style sheets and tables?

Reading Netnews and Mail with Gnus:
* Q4.2.1::      GNUS, (ding) Gnus, Gnus 5, September Gnus, Red Gnus,
		  Quassia Gnus, Pterodactyl Gnus, Oort Gnus, argh!
* Q4.2.2::      [This question intentionally left blank]
* Q4.2.3::      How do I make Gnus stay within a single frame?
* Q4.2.4::      How do I customize the From: line?

Other Mail & News:
* Q4.3.1::      How can I read and/or compose MIME messages?
* Q4.3.2::      What is TM and where do I get it?
* Q4.3.3::      Why isn't this @code{movemail} program working?
* Q4.3.4::      Movemail is also distributed by Netscape?  Can that cause problems?
* Q4.3.5::      Where do I find pstogif (required by tm)?

Sparcworks, EOS, and WorkShop:
* Q4.4.1::      What is SPARCworks, EOS, and WorkShop
<<<<<<< HEAD
* Q4.4.2::      How do I start the Sun Workshop support in SXEmacs?
=======
>>>>>>> master

Energize:
* Q4.5.1::      What is/was Energize?

Infodock:
* Q4.6.1::      What is Infodock?

Other Unbundled Packages:
* Q4.7.1::      What is AUC TeX?  Where do you get it?
* Q4.7.2::      Are there any Emacs Lisp Spreadsheets?
* Q4.7.3::      [This question intentionally left blank]
* Q4.7.4::      Problems installing AUC TeX
* Q4.7.5::      Is there a reason for an Emacs package not to be included in SXEmacs?
* Q4.7.6::      Is there a MatLab mode?
* Q4.7.7::      Can I edit files on other hosts?
@end menu

@node Q4.0.1
@unnumberedsec 4.0: Reading Mail with VM
@unnumberedsec Q4.0.1: How do I set up VM to retrieve mail from a remote site using POP?

Use @code{vm-spool-files}, like this for example:

@lisp
(setq vm-spool-files '("/var/spool/mail/wing"
                       "netcom23.netcom.com:110:pass:wing:MYPASS"))
@end lisp

Of course substitute your actual password for MYPASS.


@node Q4.0.2
@unnumberedsec Q4.0.2: How do I get VM to filter mail for me?

One possibility is to use procmail to split your mail before it gets to
VM.  I prefer this personally, since there are many strange and
wonderful things one can do with procmail.  Procmail may be found at
@uref{ftp://ftp.informatik.rwth-aachen.de/pub/packages/procmail/}.

Also see the Mail Filtering FAQ at:
@iftex
@*
@end iftex
@uref{ftp://rtfm.mit.edu/pub/usenet/news.answers/mail/filtering-faq}.
@c Link above,
@c <URL:http://www.cis.ohio-state.edu/hypertext/faq/usenet/mail/filtering-faq/faq.html>
@c was dead.


@node Q4.0.3
@unnumberedsec Q4.0.3: How can I get VM to automatically check for new mail?

@email{turner@@lanl.gov, John Turner} writes:

@quotation
Use the following:

@lisp
(setq vm-auto-get-new-mail 60)
@end lisp
@end quotation


@node Q4.0.4
@unnumberedsec Q4.0.4: [This question intentionally left blank]

Obsolete question, left blank to avoid renumbering.


@node Q4.0.5
@unnumberedsec Q4.0.5: How do I get my outgoing mail archived?

@lisp
(setq mail-archive-file-name "~/outbox")
@end lisp


@node Q4.0.6
@unnumberedsec Q4.0.6: I have various addresses at which I receive mail.  How can I tell VM to ignore them when doing a "reply-all"?

Set @code{vm-reply-ignored-addresses} to a list, like

@lisp
(setq vm-reply-ignored-addresses
      '("wing@@nuspl@@nvwls.cc.purdue.edu,netcom[0-9]*.netcom.com"
        "wing@@netcom.com" "wing@@xemacs.org"))
@end lisp

Note that each string is a regular expression.


@node Q4.0.7
@unnumberedsec Q4.0.7: Is there a mailing list or FAQ for VM?

A FAQ for VM exists at @uref{http://www.wonderworks.com/vm/FAQ.html}.

VM has its own newsgroups gnu.emacs.vm.info and gnu.emacs.vm.bug.


@node Q4.0.8
@unnumberedsec Q4.0.8: Remote mail reading with VM.

My mailbox lives at the office on a big honkin server.  My regular INBOX
lives on my honkin desktop machine.  I now can PPP to the office from
home which is far from honking...  I'd like to be able to read mail at
home without storing it here and I'd like to use sxemacs and VM at
home...  Is there a recommended setup?

@email{nuspl@@nvwls.cc.purdue.edu, Joseph J. Nuspl Jr.} writes:

@quotation
There are several ways to do this.

@enumerate
@item
Set your display to your home machine and run dxpc or one of the other X
compressors.

@item
NFS mount your desktop machine on your home machine and modify your pop
command on your home machine to rsh to your desktop machine and actually
do the pop get's.

@item
Run a POP server on your desktop machine as well and do a sort of two
tiered POP get.
@end enumerate
@end quotation

        @email{wmperry@@monolith.spry.com, William Perry} adds:

@quotation
Or you could run a pop script periodically on your desktop machine, and
just use ange-ftp or NFS to get to your mailbox.  I used to do this all
the time back at IU.
@end quotation


@node Q4.0.9
@unnumberedsec Q4.0.9: rmail or VM gets an error incorporating new mail.

Quoting the SXEmacs PROBLEMS file:

@quotation
rmail and VM get new mail from @file{/var/spool/mail/$USER} using a
program called @code{movemail}.  This program interlocks with
@code{/bin/mail} using the protocol defined by @code{/bin/mail}.

There are two different protocols in general use.  One of them uses the
@code{flock} system call.  The other involves creating a lock file;
@code{movemail} must be able to write in @file{/var/spool/mail} in order
to do this.  You control which one is used by defining, or not defining,
the macro @code{MAIL_USE_FLOCK} in @file{config.h} or the m- or s- file
it includes.

@strong{IF YOU DON'T USE THE FORM OF INTERLOCKING THAT IS NORMAL ON YOUR
SYSTEM, YOU CAN LOSE MAIL!}

If your system uses the lock file protocol, and fascist restrictions
prevent ordinary users from writing the lock files in
@file{/var/spool/mail}, you may need to make @code{movemail} setgid to a
suitable group such as @samp{mail}.  You can use these commands (as
root):

@example
chgrp mail movemail
chmod 2755 movemail
@end example

Installation normally copies movemail from the build directory to an
installation directory which is usually under @file{/usr/local/lib}.
The installed copy of @code{movemail} is usually in the directory
@file{/usr/local/lib/sxemacs-VERSION/TARGET}.  You must change the group
and mode of the installed copy; changing the group and mode of the build
directory copy is ineffective.
@end quotation


@node Q4.0.10
@unnumberedsec Q4.0.10: How do I make VM stay in a single frame?

John.@email{Cooper@@Eng.Sun.COM, John S Cooper} writes:

@quotation
@lisp
                                        ; Don't use multiple frames
(setq vm-frame-per-composition nil)
(setq vm-frame-per-folder nil)
(setq vm-frame-per-edit nil)
(setq vm-frame-per-summary nil)
@end lisp
@end quotation


@node Q4.0.11
@unnumberedsec Q4.0.11: How do I make VM or mh-e display graphical smilies?
@c Changed June
For mh-e use the following:

@lisp
(add-hook 'mh-show-mode-hook '(lambda ()
                                (smiley-region (point-min)
                                               (point-max))))
@end lisp

@email{bill@@carpenter.ORG, WJCarpenter} writes:
For VM use the following:
@lisp
       (autoload 'smiley-region "smiley" nil t)
       (add-hook 'vm-select-message-hook
                 '(lambda ()
                    (smiley-region (point-min)
                                   (point-max))))
@end lisp

For tm use the following:
@lisp
(autoload 'smiley-buffer "smiley" nil t)
(add-hook 'mime-viewer/plain-text-preview-hook 'smiley-buffer)
@end lisp


@node Q4.0.12
@unnumberedsec Q4.0.12: Customisation of VM not covered in the manual, or here.

@email{boffi@@hp735.stru.polimi.it, giacomo boffi} writes:

@quotation
The meta-answer is to look into the file @file{vm-vars.el}, in the vm
directory of the lisp library.

@file{vm-vars.el} contains, initializes and carefully describes, with
examples of usage, the plethora of user options that @emph{fully}
control VM's behavior.

Enter vm-vars, @code{forward-search} for toolbar, find the variables
that control the toolbar placement, appearance, existence, copy to
your @file{init.el} or @file{.vm} and modify according to the detailed
instructions.

The above also applies to all the various features of VM: search for
some keywords, maybe the first you conjure isn't appropriate, find the
appropriate variables, copy and experiment.
@end quotation


@node Q4.1.1
@unnumberedsec 4.1: Web browsing with W3
@unnumberedsec Q4.1.1: What is W3?

W3 is an advanced graphical browser written in Emacs lisp that runs on
SXEmacs.  It has full support for cascaded style sheets, and more...

It has a home web page at
@uref{http://www.cs.indiana.edu/elisp/w3/docs.html}.


@node Q4.1.2
@unnumberedsec Q4.1.2: How do I run W3 from behind a firewall?

There is a long, well-written, detailed section in the W3 manual that
describes how to do this.  Look in the section entitled "Firewalls".


@node Q4.1.3
@unnumberedsec Q4.1.3: Is it true that W3 supports style sheets and tables?

Yes, and much more.  W3, as distributed with the latest SXEmacs is a
full-featured web browser.


@node Q4.2.1
@unnumberedsec 4.2: Reading Netnews and Mail with Gnus
@unnumberedsec Q4.2.1: GNUS, (ding) Gnus, Gnus 5, September Gnus, Red Gnus, Quassia Gnus, Pterodactyl Gnus, Oort Gnus, argh!

The Gnus numbering issues are not meant for mere mortals to know them.
@c If you feel you @emph{must} enter the muddy waters of Gnus, visit the
@c excellent FAQ, maintained by Justin Sheehy, at:
@c 
@c @example
@c @uref{http://www.ccs.neu.edu/software/contrib/gnus/}
@c @end example

See the Gnus home page
@example
@uref{http://www.gnus.org/}
@end example


@node Q4.2.2
@unnumberedsec Q4.2.2: This question intentionally left blank.

Obsolete question, left blank to avoid renumbering.


@node Q4.2.3
@unnumberedsec Q4.2.3: How do I make Gnus stay within a single frame?

The toolbar code to start Gnus opens the new frame---and it's a feature
rather than a bug.  If you don't like it, but would still like to click
on the seemly icon, use the following code:

@lisp
(defun toolbar-news ()
  (gnus))
@end lisp

It will redefine the callback function of the icon to just call
@code{gnus}, without all the fancy frame stuff.


@node Q4.2.4
@unnumberedsec Q4.2.4: How do I customize the From: line?

How do I change the @code{From:} line?  I have set gnus-user-from-line
to
@example
Gail Gurman <gail.gurman@@sybase.com>
@end example
@noindent , but SXEmacs Gnus doesn't use
it. Instead it uses
@example
Gail Mara Gurman @email{gailg@@deall}
@end example
@noindent and then complains
that it's incorrect. Also, as you perhaps can see, my Message-ID is
screwy. How can I change that?

@email{larsi@@ifi.uio.no, Lars Magne Ingebrigtsen} writes:

@quotation
Set @code{user-mail-address} to @samp{gail.gurman@@sybase.com} or
@code{mail-host-address} to @samp{sybase.com}.
@end quotation


@node Q4.3.1
@unnumberedsec 4.3: Other Mail & News
@unnumberedsec Q4.3.1: How can I read and/or compose MIME messages?
@c Changed June

VM supports MIME natively.

You probably want to use the Tools for MIME (tm).  @xref{Q4.3.2}, for
details.

@email{trey@@cs.berkeley.edu, Trey Jackson} has an Emacs & MIME web page at
@iftex
@*
@end iftex
@uref{http://bmrc.berkeley.edu/~trey/emacs/mime.html}.


Another possibility is RMIME.  You may find RMIME at
@iftex
@*
@end iftex
@uref{http://www.cinti.net/~rmoody/rmime/index.html}.


@node Q4.3.2
@unnumberedsec Q4.3.2: What is TM and where do I get it?

TM stands for @dfn{Tools for MIME} and not Tiny MIME.  TM integrates
with all major (S)XEmacs packages like Gnus (all flavours), VM, MH-E,
and mailcrypt.  It provides totally transparent and trouble-free MIME
support.  When appropriate a message will be decoded in place in an
SXEmacs buffer.

TM was written by @email{morioka@@jaist.ac.jp, MORIOKA Tomohiko} and
@email{shuhei-k@@jaist.ac.jp, KOBAYASHI Shuhei}.

It is based on the work of @email{umerin@@mse.kyutech.ac.jp, UMEDA
Masanobu}, the original writer of GNUS.

The following information is from the @file{README}:

@dfn{tm} is a MIME package for GNU Emacs.
tm has following functions:

@itemize @bullet
@item MIME style multilingual header.
@item MIME message viewer (mime/viewer-mode).
@item MIME message composer (mime/editor-mode).
@item MIME extenders for mh-e, GNUS, RMAIL and VM.
@end itemize

tm is available from following anonymous ftp sites:
@itemize @bullet
@comment @item @uref{ftp://ftp.jaist.ac.jp/pub/GNU/elisp/mime/} (Japan).
@comment @item @uref{ftp://ftp.nis.co.jp/pub/gnu/emacs-lisp/tm/} (Japan).
@comment @c The host above is unknown.
@comment @item @uref{ftp://ftp.nisiq.net/pub/gnu/emacs-lisp/tm/} (US).
@comment @item @uref{ftp://ftp.miranova.com/pub/gnus/jaist.ac.jp/} (US).
@item @uref{ftp://ftp.unicamp.br/pub/mail/mime/tm/} (Brasil).
@item @uref{ftp://ftp.th-darmstadt.de/pub/editors/GNU-Emacs/lisp/mime/} (Germany).
@item @uref{ftp://ftp.tnt.uni-hannover.de/pub/editors/xemacs/contrib/} (Germany).
@end itemize

Don't let the installation procedure & instructions stop you from trying
this package out---it's much simpler than it looks, and once installed,
trivial to use.

@email{youngs@@sxemacs.org, Steve Youngs} writes:

@quotation
All the major Emacs Lisp based MUAs (Gnus, MH-E, and VM) all do their
own thing when it comes to MIME so you won't need TM to get MIME support
in these packages.
@end quotation


@node Q4.3.3
@unnumberedsec Q4.3.3: Why isn't this @code{movemail} program working?

Ben Wing @email{ben@@xemacs.org} writes:

@quotation
It wasn't chown'ed/chmod'd correctly.
@end quotation


@node Q4.3.4
@unnumberedsec Q4.3.4: Movemail is also distributed by Netscape?  Can that cause problems?

@email{steve@@xemacs.org, Steve Baur} writes:

@quotation
Yes.  Always use the movemail installed with your SXEmacs.  Failure to do
so can result in lost mail.
@end quotation

Please refer to @email{jwz@@jwz.org, Jamie Zawinski's} notes at
@iftex
@*
@end iftex
@uref{http://home.netscape.com/eng/mozilla/2.0/relnotes/demo/movemail.html}.
In particular, this document will show you how to make Netscape use the
version of movemail configured for your system by the person who built
SXEmacs.


@node Q4.3.5
@unnumberedsec Q4.3.5: Where do I find pstogif (required by tm)?

pstogif is part of the latex2html package.

@email{vroonhof@@math.ethz.ch, Jan Vroonhof} writes:

latex2html is best found at the CTAN hosts and their mirrors
in
@iftex
@*
@end iftex
@file{tex-archive/support/latex2html}.

CTAN hosts are:

@itemize @bullet
@item @uref{ftp://ftp.tex.ac.uk/tex-archive/support/latex2html/}.
@item @uref{ftp://ftp.dante.de/tex-archive/support/latex2html/}.
@end itemize

There is a good mirror at ftp.cdrom.com;
@iftex
@*
@end iftex
@uref{ftp://ftp.cdrom.com/pub/tex/ctan/support/latex2html/}.


@node Q4.4.1
@unnumberedsec 4.4: Sparcworks, EOS, and WorkShop
@unnumberedsec Q4.4.1: What is SPARCworks, EOS, and WorkShop?

@email{turner@@lanl.gov, John Turner} writes:

@quotation
SPARCworks is SunSoft's development environment, comprising compilers
(C, C++, FORTRAN 77, Fortran 90, Ada, and Pascal), a debugger, and other
tools such as TeamWare (for configuration management), MakeTool, etc.
@end quotation

See @uref{http://www.sun.com/software/Developer-products/}
for more info.

EOS stands for "Era on SPARCworks", but I don't know what Era stands
for.

EOS is the integration of SXEmacs with the SPARCworks debugger.  It
allows one to use a SXEmacs frame to view code (complete with
fontification, etc.), set breakpoints, print variables, etc., while
using the SPARCworks debugger.  It works very well and I use it all the
time.

@email{cthomp@@xemacs.org, Chuck Thompson} writes:

@quotation
Era stood for "Emacs Rewritten Again".  It was what we were calling the
modified version of Lucid Emacs for Sun when I was dragged, er, allowed
to work on this wonderful editor.
@end quotation

@email{martin@@xemacs.org, Martin Buchholz} writes:

@quotation
EOS is being replaced with a new graphical development environment
called Sun WorkShop.  For more details, check out
@iftex
@*
@end iftex
@uref{http://www.sun.com/software/Products/Developer-products}.
@end quotation


<<<<<<< HEAD
@node Q4.4.2
@unnumberedsec Q4.4.2: How do I start the Sun Workshop support in SXEmacs?

Add the switch ---with-workshop to the configure command when building
SXEmacs and put the following in one of your startup files
(e.g. site-start.el or init.el):

@lisp
(when (featurep 'tooltalk)
  (load "tooltalk-macros")
  (load "tooltalk-util")
  (load "tooltalk-init"))
(when (featurep 'sparcworks)
  (load "sunpro-init")
  (load "ring")
  (load "comint")
  (load "annotations")
  (sunpro-startup))
@end lisp


=======
>>>>>>> master
@node Q4.5.1
@unnumberedsec 4.5: Energize
@unnumberedsec Q4.5.1: What is/was Energize?

@email{gray@@meteor.harlequin.com, David N Gray} writes:
@quotation
The files in @file{lisp/energize} are to enable Emacs to interface with
the "Energize Programming System", a C and C++ development environment,
which was a product of Lucid, Inc.  Tragically, Lucid went out of
business in 1994, so although Energize is still a great system, if you
don't already have it, there isn't any way to get it now.  (Unless you
happen to be in Japan; INS Engineering may still be selling it there.
Tartan bought the rights to sell it in the rest of the world, but never
did so.)
@end quotation


@node Q4.6.1
@unnumberedsec 4.6: Infodock
@unnumberedsec Q4.6.1: What is Infodock?

@uref{http://sourceforge.net/projects/infodock/, InfoDock} is an
integrated productivity toolset, mainly aimed at technical people,
hosted at SourceForge.

InfoDock is built atop SXEmacs and so has all of the power of an
Emacs, but with an easier to use and more comprehensive menu-based
user interface.  The bottom portion of this text describes how it
differs from SXEmacs/XEmacs and GNU Emacs from the Free Software
Foundation.

InfoDock is aimed at people who want a free, turn-key productivity
environment.  Although InfoDock is customizable, it is not intended for
people who like basic versions of Emacs which need to be customized
extensively for local use; standard Emacs distributions are better for
such uses.  InfoDock is for those people who want a complete,
pre-customized environment in one package, which they need not touch
more than once or twice a year to update to new revisions.

InfoDock is pre-built for SPARC SunOS/Solaris systems, PA-RISC HP-UX,
and Intel Linux systems.  It is intended for use on a color display,
although most features will work on monochrome monitors.  Simply unpack
InfoDock according to the instructions in the ID-INSTALL file and you
are ready to run.

The InfoDock Manual is concise, yet sufficient as a user guide for users
who have never used an Emacs-type editor before.  For users who are
already familiar with Emacs, it supplements the information in the GNU
Emacs Manual.

InfoDock menus are much more extensive and more mature than standard
Emacs menus.  Each menu offers a @samp{Manual} item which displays
documentation associated with the menu's functions.

@noindent
Four types of menubars are provided:
@enumerate
@item
An extensive menubar providing access to global InfoDock commands.
@item
Mode-specific menubars tailored to the current major mode.
@item
A simple menubar for basic editing to help novices get started with InfoDock.
@item
The standard SXEmacs menubar.
@end enumerate

Most modes also include mode-specific popup menus.  Additionally, region and
rectangle popup menus are included.

@samp{Hyperbole}, the everyday information manager, is a core part of
InfoDock.  This provides context-sensitive mouse keys, a rolodex-type
contact manager, programmable hypertext buttons, and an autonumbered
outliner with embedded hyperlink anchors.

The @samp{OO-Browser}, a multi-language object-oriented code browser, is a
standard part of InfoDock.

InfoDock saves a more extensive set of user options than other Emacs
versions.

InfoDock inserts a useful file header in many file types, showing the
author, summary, and last modification time of each file.  A summary
program can then be used to summarize all of the files in a directory,
for easy MANIFEST file creation.

Your working set of buffers is automatically saved and restored (if you
answer yes to a prompt) between InfoDock sessions.

Refined color choices for code highlighting are provided for both dark and
light background display frames.

The @kbd{C-z} key prefix performs frame-based commands which parallel the
@kbd{C-x} key prefix for window-based commands.

The Smart Menu system is included for producing command menus on dumb
terminals.

Lisp libraries are better categorized according to function.

Extensions and improvements to many areas of Emacs are included, such as:
paragraph filling, mail reading with Rmail, shell handling, outlining, code
highlighting and browsing, and man page browsing.

InfoDock questions, answers and discussion should go to the mail list
@iftex
@*
@end iftex
@email{infodock@@infodock.com}.  Use
@email{infodock-request@@infodock.com} to be added or removed from the
list.  Always include your InfoDock version number when sending help
requests.

InfoDock is available across the Internet via anonymous FTP.  To get
it, first move to a directory into which you want the InfoDock archive
files placed.  We will call this <DIST-DIR>.

@example
   cd <DIST-DIR>
@end example

Ftp to ftp.xemacs.org  (Internet Host ID = 128.174.252.16):

@example
   prompt> ftp ftp.xemacs.org
@end example

Login as @samp{anonymous} with your own <user-id>@@<site-name> as a password.

@example
   Name (ftp.xemacs.org): anonymous
   331 Guest login ok, send your complete e-mail address as password.
   Password: -<your-user-id>@@<your-domain>
   230 Guest login ok, access restrictions apply.
@end example

Move to the location of the InfoDock archives:

@example
   ftp> cd pub/infodock
@end example

Set your transfer mode to binary:

@example
   ftp> bin
   200 Type set to I.
@end example

Turn off prompting:

@example
   ftp> prompt
   Interactive mode off.
@end example

Retrieve the InfoDock archives that you want, either by using a
@samp{get <file>} for each file you want or by using the following to
get a complete distribution, including all binaries:

@example
   ftp> mget ID-INSTALL
   ftp> mget id-*
@end example

Close the FTP connection:

@example
   ftp> quit
   221 Goodbye.
@end example

Read the @file{ID-INSTALL} file which you just retrieved for
step-by-step installation instructions.


@node Q4.7.1
@unnumberedsec 4.7: Other Unbundled Packages
@unnumberedsec Q4.7.1: What is AUC TeX?  Where do you get it?

AUC TeX is an extensible package written by
@email{abraham@@dina.kvl.dk, Per Abrahamsen} that supports writing and
formatting TeX files for most Emacsen. Many different macro packages
are supported, including AMS TeX, LaTeX, and TeXinfo.

The most recent version is always available by ftp at
@iftex
@*
@end iftex
@uref{ftp://sunsite.dk/packages/auctex/auctex.tar.gz}.

In case you don't have access to anonymous ftp, you can get it by an
email request to @email{ftpmail@@decwrl.dec.com}.

WWW users may want to check out the AUC TeX page at
@iftex
@*
@end iftex
@uref{http://sunsite.dk/auctex/}.


@node Q4.7.2
@unnumberedsec Q4.7.2: Are there any Emacs Lisp Spreadsheets?

Yes.  Check out @dfn{dismal} (which stands for Dis' Mode Ain't Lotus) at
@iftex
@*
@end iftex
@uref{ftp://cs.nyu.edu/pub/local/fox/dismal/}.


@node Q4.7.3
@unnumberedsec Q4.7.3: [This question intentionally left blank]


@node Q4.7.4
@unnumberedsec Q4.7.4: Problems installing AUC TeX.

@email{vroonhof@@math.ethz.ch, Jan Vroonhof} writes:

@quotation
AUC TeX works fine on both stock Emacs and (S)XEmacs has been doing so
for a very very long time. This is mostly due to the work of
@email{abraham@@dina.kvl.dk, Per Abrahamsen} (clap clap) in particular
his @file{easymenu} package.  Which leads to what is probably the
problem...
@end quotation

Most problems with AUC TeX are one of two things:

@itemize @bullet
@item
The TeX-lisp-directory in @file{tex-site.el} and the makefile don't
match.

Fix: make sure you configure AUC TeX properly @strong{before} installing.

@item
You have an old version of easymenu.el in your path.

Fix: use @code{locate-library} and remove old versions to make sure it
@strong{only} finds the one that came with SXEmacs.
@end itemize


@node Q4.7.5
@unnumberedsec Q4.7.5: Is there a reason for an Emacs package not to be included in SXEmacs?

The reason for an Emacs package not to be included in SXEmacs is
usually one or more of the following:

@enumerate
@item
The package has not been ported to (S)XEmacs.  This will typically happen
when it uses GNU-Emacs-specific features, which make it fail under
(S)XEmacs.

Porting a package to (S)XEmacs can range from a trivial amount of
change to a partial or full rewrite.  Fortunately, the authors of
modern packages usually choose to support all Emacsen themselves.

@item
The package has been decided not to be appropriate for (S)XEmacs.  It
may have an equivalent or better replacement within (S)XEmacs, in
which case the developers may choose not to burden themselves with
supporting an additional package.

Each package bundled with (S)XEmacs means more work for the
maintainers, whether they want it or not.  If you are ready to take
over the maintenance responsibilities for the package you port, be
sure to say so---we will more likely include it.

@item
The package simply hasn't been noted by the (S)XEmacs development.  If
that's the case, the messages like yours are very useful for attracting
our attention.

@item
The package was noted by the developers, but they simply haven't yet
gotten around to including/porting it.  Wait for the next release or,
even better, offer your help.  It will be gladly accepted and
appreciated.
@end enumerate


@node Q4.7.6
@unnumberedsec Q4.7.5: Is there a MatLab mode?

Yes, a matlab mode and other items are available at the
@uref{ftp://ftp.mathworks.com/pub/contrib/emacs_add_ons,
MathWorks' emacs_add_ons ftp directory}.


@node Q4.7.7
@unnumberedsec Q4.7.7: Can I edit files on other hosts?

Yes.  Of course SXEmacs can use any network file system (such as NFS)
you have available, and includes some optimisations and safety
features appropriate to those environments.

It is also possible to transparently edit files via FTP, ssh, or rsh.
That is, SXEmacs makes a local copy using the transport in the
background, and automatically refreshes the remote original from that
copy when you save it.  SXEmacs also is capable of doing file system
manipulations like creating and removing directories and files.  The
FTP interface is provided by the standard @samp{efs} package @ref{Top,
EFS, , efs}.  The ssh/rsh interface is provided by the optional
@samp{tramp} package @ref{Top, TRAMP, , tramp}.

@node Miscellaneous, MS Windows, Subsystems, Top
@unnumbered 5 The Miscellaneous Stuff

This is part 5 of the SXEmacs Frequently Asked Questions list.  This
section is devoted to anything that doesn't fit neatly into the other
sections.

@menu
Major & Minor Modes:
* Q5.0.1::      How can I do source code highlighting using font-lock?
* Q5.0.2::      I do not like cc-mode.  How do I use the old c-mode?
* Q5.0.3::      How do I get @samp{More} Syntax Highlighting on by default?
* Q5.0.4::      How can I enable auto-indent and/or Filladapt?
* Q5.0.5::      How can I get SXEmacs to come up in text/auto-fill mode by default?
* Q5.0.6::      How do I start up a second shell buffer?
* Q5.0.7::      Telnet from shell filters too much.
* Q5.0.8::      Why does edt emulation not work?
* Q5.0.9::      How can I emulate VI and use it as my default mode?
* Q5.0.10::     [This question intentionally left blank]
* Q5.0.11::     [This question intentionally left blank]
* Q5.0.12::     How do I disable gnuserv from opening a new frame?
* Q5.0.13::     How do I start gnuserv so that each subsequent SXEmacs is a client?
* Q5.0.14::     Strange things are happening in Shell Mode.
* Q5.0.15::     Where do I get the latest CC Mode?
* Q5.0.16::     I find auto-show-mode disconcerting.  How do I turn it off?
* Q5.0.17::     How can I get two instances of info?
* Q5.0.18::     [This question intentionally left blank]
* Q5.0.19::     Is there something better than LaTeX mode?
* Q5.0.20::     Is there a way to start a new SXEmacs if there's no
		  gnuserv running, and otherwise use gnuclient?

Emacs Lisp Programming Techniques:
* Q5.1.1::      The difference in key sequences between XEmacs/SXEmacs and GNU Emacs?
* Q5.1.2::      Can I generate "fake" keyboard events?
* Q5.1.3::      Could you explain @code{read-kbd-macro} in more detail?
* Q5.1.4::      What is the performance hit of @code{let}?
* Q5.1.5::      What is the recommended use of @code{setq}?
* Q5.1.6::      What is the typical misuse of @code{setq} ?
* Q5.1.7::      I like the @code{do} form of cl, does it slow things down?
* Q5.1.8::      I like recursion, does it slow things down?
* Q5.1.9::      How do I put a glyph as annotation in a buffer?
* Q5.1.10::     @code{map-extents} won't traverse all of my extents!
* Q5.1.11::	My elisp program is horribly slow.  Is there an easy way to
		  find out where it spends time?

Sound:
* Q5.2.1::      How do I turn off the sound?
* Q5.2.2::      How do I get funky sounds instead of a boring beep?
* Q5.2.3::      What's NAS, how do I get it?
* Q5.2.4::      Sunsite sounds don't play.
@c extend me

Miscellaneous:
* Q5.3.1::      How do you make SXEmacs indent CL if-clauses correctly?
* Q5.3.2::      [This question intentionally left blank]
* Q5.3.3::      How can I print WYSIWYG a font-locked buffer?
* Q5.3.4::      Getting @kbd{M-x lpr} to work with postscript printer.
* Q5.3.5::      How do I specify the paths that SXEmacs uses for finding files?
* Q5.3.6::      [This question intentionally left blank]
* Q5.3.7::      Can I have the end of the buffer delimited in some way?
* Q5.3.8::      How do I insert today's date into a buffer?
* Q5.3.9::      Are only certain syntactic character classes available for abbrevs?
* Q5.3.10::     How can I get those oh-so-neat X-Face lines?
* Q5.3.11::     How do I add new Info directories?
* Q5.3.12::     What do I need to change to make printing work?
@end menu


@node Q5.0.1
@unnumberedsec 5.0: Major & Minor Modes
@unnumberedsec Q5.0.1: How can I do source code highlighting using font-lock?

For most modes, font-lock is already set up and just needs to be turned
on.  This can be done by adding the line:

@lisp
(require 'font-lock)
@end lisp

to your @file{init.el}.  You can turn it on for the current buffer and
session only by @kbd{M-x font-lock-mode}.  See the file
@file{etc/sample.init.el} for more information.

@c the old way:
@c     (add-hook 'emacs-lisp-mode-hook 'turn-on-font-lock)
@c     (add-hook 'dired-mode-hook      'turn-on-font-lock)

See also @code{Syntax Highlighting} from the @code{Options} menu.
Remember to save options.


@node Q5.0.2
@unnumberedsec Q5.0.2: I do not like cc-mode.  How do I use the old c-mode?

Well, first off, consider if you really want to do this.  cc-mode is
much more powerful than the old c-mode.  If you're having trouble
getting your old offsets to work, try using @code{c-set-offset} instead.
You might also consider using the package @code{cc-compat}.

But, if you still insist, add the following lines to your @file{init.el}:

@lisp
(fmakunbound 'c-mode)
(makunbound 'c-mode-map)
(fmakunbound 'c++-mode)
(makunbound 'c++-mode-map)
(makunbound 'c-style-alist)
(load-library "old-c-mode")
(load-library "old-c++-mode")
@end lisp

This must be done before any other reference is made to either c-mode or
c++-mode.


@node Q5.0.3
@unnumberedsec Q5.0.3: How do I get @samp{More} Syntax Highlighting on by default?

Use the following code in your @file{init.el}:

@lisp
(setq-default font-lock-maximum-decoration t)
@end lisp

See also @code{Syntax Highlighting} from the @code{Options} menu.
Remember to save options.


@node Q5.0.4
@unnumberedsec Q5.0.4: How can I enable auto-indent and/or Filladapt?

Put the following line in your @file{init.el}:

@lisp
(setq indent-line-function 'indent-relative-maybe)
@end lisp

If you want to get fancy, try the @code{filladapt} package available
standard with SXEmacs.  Put this into your @file{init.el}:

@lisp
(require 'filladapt)
(setq-default filladapt-mode t)
(add-hook 'c-mode-hook 'turn-off-filladapt-mode)
@end lisp

This will enable Filladapt for all modes except C mode, where it doesn't
work well.  To turn Filladapt on only in particular major modes, remove
the @code{(setq-default ...)} line and use
@code{turn-on-filladapt-mode}, like this:

@lisp
(add-hook 'text-mode-hook 'turn-on-filladapt-mode)
@end lisp

You can customize filling and adaptive filling with Customize.
Select from the @code{Options} menu
@code{Advanced (Customize)->Emacs->Editing->Fill->Fill...}
or type @kbd{M-x customize @key{RET} fill @key{RET}}.

Note that well-behaving text-lookalike modes will run
@code{text-mode-hook} by default (e.g. that's what Message does).  For
the nasty ones, you'll have to provide the @code{add-hook}s yourself.

Please note that the @code{fa-extras} package is no longer useful.


@node Q5.0.5
@unnumberedsec Q5.0.5: How can I get SXEmacs to come up in text/auto-fill mode by default?

Try the following lisp in your @file{init.el}:

@lisp
(setq default-major-mode 'text-mode)
(setq text-mode-hook 'turn-on-auto-fill)
@end lisp

@strong{WARNING}: note that changing the value of
@code{default-major-mode} from @code{fundamental-mode} can break a large
amount of built-in code that expects newly created buffers to be in
@code{fundamental-mode}.  (Changing from @code{fundamental-mode} to
@code{text-mode} might not wreak too much havoc, but changing to
something more exotic like a lisp-mode would break many Emacs packages).

Note that Emacs by default starts up in buffer @code{*scratch*} in
@code{initial-major-mode}, which defaults to
@code{lisp-interaction-mode}. Thus adding the following form to your
Emacs init file will cause the initial @code{*scratch*} buffer to be put
into auto-fill'ed @code{text-mode}:

@lisp
(setq initial-major-mode
      (lambda ()
        (text-mode)
        (turn-on-auto-fill)))
@end lisp

Note that after your init file is loaded, if
@code{inhibit-startup-message} is @code{nil} (the default) and the
startup buffer is @code{*scratch*} then the startup message will be
inserted into @code{*scratch*}; it will be removed after a timeout by
erasing the entire @code{*scratch*} buffer.  Keep in mind this default
usage of @code{*scratch*} if you desire any prior manipulation of
@code{*scratch*} from within your Emacs init file. In particular,
anything you insert into @code{*scratch*} from your init file will be
later erased. Also, if you change the mode of the @code{*scratch*}
buffer, be sure that this will not interfere with possible later
insertion of the startup message (e.g. if you put @code{*scratch*} into
a nonstandard mode that has automatic font lock rules, then the startup
message might get fontified in a strange foreign manner, e.g. as code in
some programming language).


@node Q5.0.6
@unnumberedsec Q5.0.6: How do I start up a second shell buffer?

In the @code{*shell*} buffer:

@lisp
M-x rename-buffer @key{RET} *shell-1* @key{RET}
M-x shell RET
@end lisp

This will then start a second shell.  The key is that no buffer named
@samp{*shell*} can exist.  It might be preferable to use @kbd{M-x
rename-uniquely} to rename the @code{*shell*} buffer instead of @kbd{M-x
rename-buffer}.

Alternately, you can set the variable @code{shell-multiple-shells}.
If the value of this variable is non-nil, each time shell mode is invoked,
a new shell is made


@node Q5.0.7
@unnumberedsec Q5.0.7: Telnet from shell filters too much

I'm using the Emacs @kbd{M-x shell} function, and I would like to invoke
and use a telnet session within it.  Everything works fine except that
now all @samp{^M}'s are filtered out by Emacs.  Fixes?

Use @kbd{M-x rsh} or @kbd{M-x telnet} to open remote sessions rather
than doing rsh or telnet within the local shell buffer.  You can also
use @kbd{M-x ssh} to open secure remote session if you have @code{ssh}
installed.


@node Q5.0.8
@unnumberedsec Q5.0.8: Why does edt emulation not work?

We don't know, but you can use tpu-edt emulation instead, which works
fine and is a little fancier than the standard edt emulation.  To do
this, add the following line to your @file{init.el}:

@lisp
(tpu-edt)
@end lisp

If you don't want it to replace @kbd{C-h} with an edt-style help menu
add this as well:

@lisp
(global-set-key [(control h)] 'help-for-help)
@end lisp


@node Q5.0.9
@unnumberedsec Q5.0.9: How can I emulate VI and use it as my default mode?

Our recommended VI emulator is viper. To make viper-mode the default,
add this to your @file{init.el}:

@lisp
(viper-mode)
@end lisp

@email{kifer@@CS.SunySB.EDU, Michael Kifer} writes:

@quotation
This should be added as close to the top of @file{init.el} as you can get
it, otherwise some minor modes may not get viper-ized.
@end quotation


@node Q5.0.10
@unnumberedsec Q5.0.10: [This question intentionally left blank]

Obsolete question, left blank to avoid renumbering


@node Q5.0.11
@unnumberedsec Q5.0.11: [This question intentionally left blank]

Obsolete question, left blank to avoid renumbering


@node Q5.0.12
@unnumberedsec Q5.0.12: How do I disable gnuserv from opening a new frame?

If you set the @code{gnuserv-frame} variable to the frame that should be
used to display buffers that are pulled up, a new frame will not be
created. For example, you could put

@lisp
(setq gnuserv-frame (selected-frame))
@end lisp

early on in your @file{init.el}, to ensure that the first frame created
is the one used for your gnuserv buffers.

There is an option to set the gnuserv target to the current frame.  See
@code{Options->Display->"Other Window" Location->Make Current Frame Gnuserv Target}

You can also change this with Customize.  Select from the
@code{Options} menu @code{Advanced
(Customize)->Emacs->Environment->Gnuserv->Gnuserv Frame...}  or type
@kbd{M-x customize @key{RET} gnuserv @key{RET}}.


@node Q5.0.13
@unnumberedsec Q5.0.13: How do I start gnuserv so that each subsequent SXEmacs is a client?

Put the following in your @file{init.el} file to start the server:

@lisp
(gnuserv-start)
@end lisp

Start your first SXEmacs as usual.  After that, you can do:

@example
gnuclient randomfilename
@end example

from the command line to get your existing SXEmacs process to open a
new frame and visit randomfilename in that window. When you're done
editing randomfilename, hit @kbd{C-x #} to kill the buffer and get rid
of the frame.

See also man page of gnuclient.


@node Q5.0.14
@unnumberedsec Q5.0.14: Strange things are happening in Shell Mode.

Sometimes (i.e. it's not repeatable, and I can't work out why it
happens) when I'm typing into shell mode, I hit return and only a
portion of the command is given to the shell, and a blank prompt is
returned.  If I hit return again, the rest of the previous command is
given to the shell.

@email{martin@@xemacs.org, Martin Buchholz} writes:

@quotation
There is a known problem with interaction between @code{csh} and the
@code{filec} option and SXEmacs.  You should add the following to your
@file{.cshrc}:

@example
if ( "$TERM" == emacs || "$TERM" == unknown ) unset filec
@end example
@end quotation


@node Q5.0.15
@unnumberedsec Q5.0.15: Where do I get the latest CC Mode?

See @uref{http://cc-mode.sourceforge.net/}.


@node Q5.0.16
@unnumberedsec Q5.0.16: I find auto-show-mode disconcerting.  How do I turn it off?

@code{auto-show-mode} controls whether or not a horizontal scrollbar
magically appears when a line is too long to be displayed.  This is
enabled by default.  To turn it off, put the following in your
@file{init.el}:

@lisp
(setq auto-show-mode nil)
(setq-default auto-show-mode nil)
@end lisp


@node Q5.0.17
@unnumberedsec Q5.0.17: How can I get two instances of info?

Good question.


@node Q5.0.18
@unnumberedsec Q5.0.18: [This question intentionally left blank]


@node Q5.0.19
@unnumberedsec Q5.0.19: Is there something better than LaTeX mode?

@email{dak@@fsnif.neuroinformatik.ruhr-uni-bochum.de, David Kastrup} writes:

@quotation
The standard TeX modes leave much to be desired, and are somewhat
leniently maintained.  Serious TeX users use AUC TeX (@pxref{Q4.7.1}).
@end quotation


@node Q5.0.20
@unnumberedsec Q5.0.20: Is there a way to start a new SXEmacs if there's no gnuserv running, and otherwise use gnuclient?

@email{vroonhof@@math.ethz.ch, Jan Vroonhof} writes:
@quotation
Here is one of the solutions, we have this in a script called
@file{etc/editclient.sh}.
@example
 #!/bin/sh
 if gnuclient -batch -eval t >/dev/null 2>&1
 then
   exec gnuclient $@{1+"$@@"@}
 else
   sxemacs -unmapped -f gnuserv-start &
   until gnuclient -batch -eval t >/dev/null 2>&1
   do
      sleep 1
   done
   exec gnuclient $@{1+"$@@"@}
 fi
@end example

Note that there is a known problem when running SXEmacs and 
@samp{gnuclient -nw} on the same TTY.
@end quotation


@node Q5.1.1
@unnumberedsec 5.1: Emacs Lisp Programming Techniques
@unnumberedsec Q5.1.1: What is the difference in key sequences between XEmacs/SXEmacs and GNU Emacs?

@email{clerik@@naggum.no, Erik Naggum} writes;

@quotation
Emacs has a legacy of keyboards that produced characters with modifier
bits, and therefore map a variety of input systems into this scheme even
today.  XEmacs is instead optimized for X events.  This causes an
incompatibility in the way key sequences are specified, but both Emacs
and XEmacs will accept a key sequence as a vector of lists of modifiers
that ends with a key, e.g., to bind @kbd{M-C-a}, you would say
@code{[(meta control a)]} in both Emacsen.  XEmacs has an abbreviated
form for a single key, just (meta control a).  Emacs has an abbreviated
form for the Control and the Meta modifiers to string-characters (the
ASCII characters), as in @samp{\M-\C-a}.  XEmacs users need to be aware
that the abbreviated form works only for one-character key sequences,
while Emacs users need to be aware that the string-character is rather
limited.  Specifically, the string-character can accommodate only 256
different values, 128 of which have the Meta modifier and 128 of which
have not.  In each of these blocks, only 32 characters have the Control
modifier.  Whereas @code{[(meta control A)]} differs from @code{[(meta
control a)]} because the case differs, @samp{\M-\C-a} and @samp{\M-\C-A}
do not.  Programmers are advised to use the full common form, both
because it is more readable and less error-prone, and because it is
supported by both Emacsen.
@end quotation

Another (even safer) way to be sure of the key-sequences is to use the
@code{read-kbd-macro} function, which takes a string like @samp{C-c
<up>}, and converts it to the internal key representation of the Emacs
you use.  The function is available under all Emacsen.


@node Q5.1.2
@unnumberedsec Q5.1.2: Can I generate "fake" keyboard events?

I wonder if there is an interactive function that can generate
@dfn{fake} keyboard events.  This way, I could simply map them inside
SXEmacs.

This seems to work:

@lisp
(defun cg--generate-char-event (ch)
  "Generate an event, as if ch has been typed"
  (dispatch-event (character-to-event ch)))

;;  Backspace and Delete stuff
(global-set-key [backspace]
  (lambda () (interactive) (cg--generate-char-event 127)))
(global-set-key [unknown_keysym_0x4]
  (lambda () (interactive) (cg--generate-char-event 4)))
@end lisp


@node Q5.1.3
@unnumberedsec Q5.1.3: Could you explain @code{read-kbd-macro} in more detail?

The @code{read-kbd-macro} function returns the internal Emacs
representation of a human-readable string (which is its argument).
Thus:

@lisp
(read-kbd-macro "C-c C-a")
@result{} [(control ?c) (control ?a)]

(read-kbd-macro "C-c C-. <up>")
@result{} [(control ?c) (control ?.) up]
@end lisp

In GNU Emacs the same forms will be evaluated to what GNU Emacs
understands internally---the sequences @code{"\C-x\C-c"} and @code{[3
67108910 up]}, respectively.

The exact @dfn{human-readable} syntax is defined in the docstring of
@code{edmacro-mode}.  I'll repeat it here, for completeness.

@quotation
Format of keyboard macros during editing:

Text is divided into @dfn{words} separated by whitespace.  Except for
the words described below, the characters of each word go directly as
characters of the macro.  The whitespace that separates words is
ignored.  Whitespace in the macro must be written explicitly, as in
@kbd{foo @key{SPC} bar @key{RET}}.

@itemize @bullet
@item
The special words @kbd{RET}, @kbd{SPC}, @kbd{TAB}, @kbd{DEL}, @kbd{LFD},
@kbd{ESC}, and @kbd{NUL} represent special control characters.  The
words must be written in uppercase.

@item
A word in angle brackets, e.g., @code{<return>}, @code{<down>}, or
@code{<f1>}, represents a function key.  (Note that in the standard
configuration, the function key @code{<return>} and the control key
@key{RET} are synonymous.)  You can use angle brackets on the words
@key{RET}, @key{SPC}, etc., but they are not required there.

@item
Keys can be written by their @sc{ascii} code, using a backslash followed
by up to six octal digits.  This is the only way to represent keys with
codes above \377.

@item
One or more prefixes @kbd{M-} (meta), @kbd{C-} (control), @kbd{S-}
(shift), @kbd{A-} (alt), @kbd{H-} (hyper), and @kbd{s-} (super) may
precede a character or key notation.  For function keys, the prefixes
may go inside or outside of the brackets: @code{C-<down>} @equiv{}
@code{<C-down>}.  The prefixes may be written in any order: @kbd{M-C-x}
@equiv{} @kbd{C-M-x}.

Prefixes are not allowed on multi-key words, e.g., @kbd{C-abc}, except
that the Meta prefix is allowed on a sequence of digits and optional
minus sign: @kbd{M--123} @equiv{} @kbd{M-- M-1 M-2 M-3}.

@item
The @code{^} notation for control characters also works: @kbd{^M}
@equiv{} @kbd{C-m}.

@item
Double angle brackets enclose command names: @code{<<next-line>>} is
shorthand for @kbd{M-x next-line @key{RET}}.

@item
Finally, @code{REM} or @code{;;} causes the rest of the line to be
ignored as a comment.
@end itemize

Any word may be prefixed by a multiplier in the form of a decimal number
and @code{*}: @code{3*<right>} @equiv{} @code{<right> <right> <right>},
and @code{10*foo} @equiv{}
@iftex
@*
@end iftex
@code{foofoofoofoofoofoofoofoofoofoo}.

Multiple text keys can normally be strung together to form a word, but
you may need to add whitespace if the word would look like one of the
above notations: @code{; ; ;} is a keyboard macro with three semicolons,
but @code{;;;} is a comment.  Likewise, @code{\ 1 2 3} is four keys but
@code{\123} is a single key written in octal, and @code{< right >} is
seven keys but @code{<right>} is a single function key.  When in doubt,
use whitespace.
@end quotation


@node Q5.1.4
@unnumberedsec Q5.1.4: What is the performance hit of @code{let}?

In most cases, not noticeable.  Besides, there's no avoiding
@code{let}---you have to bind your local variables, after all.  Some
pose a question whether to nest @code{let}s, or use one @code{let} per
function.  I think because of clarity and maintenance (and possible
future implementation), @code{let}-s should be used (nested) in a way to
provide the clearest code.


@node Q5.1.5
@unnumberedsec Q5.1.5: What is the recommended use of @code{setq}?

@itemize @bullet
@item Global variables

You will typically @code{defvar} your global variable to a default
value, and use @code{setq} to set it later.

It is never a good practice to @code{setq} user variables (like
@code{case-fold-search}, etc.), as it ignores the user's choice
unconditionally.  Note that @code{defvar} doesn't change the value of a
variable if it was bound previously.  If you wish to change a
user-variable temporarily, use @code{let}:

@lisp
(let ((case-fold-search nil))
  ...                                   ; code with searches that must be case-sensitive
  ...)
@end lisp

You will notice the user-variables by their docstrings beginning with an
asterisk (a convention).

@item Local variables

Bind them with @code{let}, which will unbind them (or restore their
previous value, if they were bound) after exiting from the @code{let}
form.  Change the value of local variables with @code{setq} or whatever
you like (e.g. @code{incf}, @code{setf} and such).  The @code{let} form
can even return one of its local variables.

Typical usage:

@lisp
;; iterate through the elements of the list returned by
;; `hairy-function-that-returns-list'
(let ((l (hairy-function-that-returns-list)))
  (while l
    ... do something with (car l) ...
    (setq l (cdr l))))
@end lisp

Another typical usage includes building a value simply to work with it.

@lisp
;; Build the mode keymap out of the key-translation-alist
(let ((inbox (file-truename (expand-file-name box)))
      (i 0))
  ... code dealing with inbox ...
  inbox)
@end lisp

This piece of code uses the local variable @code{inbox}, which becomes
unbound (or regains old value) after exiting the form.  The form also
returns the value of @code{inbox}, which can be reused, for instance:

@lisp
(setq foo-processed-inbox
      (let .....))
@end lisp
@end itemize


@node Q5.1.6
@unnumberedsec Q5.1.6: What is the typical misuse of @code{setq} ?

A typical misuse is probably @code{setq}ing a variable that was meant to
be local.  Such a variable will remain bound forever, never to be
garbage-collected.  For example, the code doing:

@lisp
(defun my-function (whatever)
  (setq a nil)
  ... build a large list ...
  ... and exit ...)
@end lisp

does a bad thing, as @code{a} will keep consuming memory, never to be
unbound.  The correct thing is to do it like this:

@lisp
(defun my-function (whatever)
  (let (a)                              ; default initialisation is to nil
    ... build a large list ...
    ... and exit, unbinding `a' in the process  ...)
@end lisp

Not only is this prettier syntactically, but it makes it possible for
Emacs to garbage-collect the objects which @code{a} used to reference.

Note that even global variables should not be @code{setq}ed without
@code{defvar}ing them first, because the byte-compiler issues warnings.
The reason for the warning is the following:

@lisp
(defvar flurgoze nil)                   ; ok, global internal variable
...

(setq flurghoze t)                      ; ops!  a typo, but semantically correct.
                                        ; however, the byte-compiler warns.

While compiling toplevel forms:
** assignment to free variable flurghoze
@end lisp


@node Q5.1.7
@unnumberedsec Q5.1.7: I like the @code{do} form of cl, does it slow things down?

It shouldn't.  Here is what Dave Gillespie has to say about cl.el
performance:

@quotation
Many of the advanced features of this package, such as @code{defun*},
@code{loop}, and @code{setf}, are implemented as Lisp macros.  In
byte-compiled code, these complex notations will be expanded into
equivalent Lisp code which is simple and efficient.  For example, the
forms

@lisp
(incf i n)
(push x (car p))
@end lisp

are expanded at compile-time to the Lisp forms

@lisp
(setq i (+ i n))
(setcar p (cons x (car p)))
@end lisp

which are the most efficient ways of doing these respective operations
in Lisp.  Thus, there is no performance penalty for using the more
readable @code{incf} and @code{push} forms in your compiled code.

@emph{Interpreted} code, on the other hand, must expand these macros
every time they are executed.  For this reason it is strongly
recommended that code making heavy use of macros be compiled.  (The
features labelled @dfn{Special Form} instead of @dfn{Function} in this
manual are macros.)  A loop using @code{incf} a hundred times will
execute considerably faster if compiled, and will also garbage-collect
less because the macro expansion will not have to be generated, used,
and thrown away a hundred times.

You can find out how a macro expands by using the @code{cl-prettyexpand}
function.
@end quotation


@node Q5.1.8
@unnumberedsec Q5.1.8: I like recursion, does it slow things down?

Yes.  Emacs byte-compiler cannot do much to optimize recursion.  But
think well whether this is a real concern in Emacs.  Much of the Emacs
slowness comes from internal mechanisms such as redisplay, or from the
fact that it is an interpreter.

Please try not to make your code much uglier to gain a very small speed
gain.  It's not usually worth it.


@node Q5.1.9
@unnumberedsec Q5.1.9: How do I put a glyph as annotation in a buffer?

Here is a solution that will insert the glyph annotation at the
beginning of buffer:

@lisp
(make-annotation (make-glyph '([FORMAT :file FILE]
                               [string :data "fallback-text"]))
                 (point-min)
                 'text
                 (current-buffer))
@end lisp

Replace @samp{FORMAT} with an unquoted symbol representing the format of
the image (e.g. @code{xpm}, @code{xbm}, @code{gif}, @code{jpeg}, etc.)
Instead of @samp{FILE}, use the image file name
(e.g.
@iftex
@*
@end iftex
@file{/usr/local/lib/sxemacs-22.1.4/etc/recycle.xpm}).

You can turn this to a function (that optionally prompts you for a file
name), and inserts the glyph at @code{(point)} instead of
@code{(point-min)}.


@node Q5.1.10
@unnumberedsec Q5.1.10: @code{map-extents} won't traverse all of my extents!

I tried to use @code{map-extents} to do an operation on all the extents
in a region.  However, it seems to quit after processing a random number
of extents.  Is it buggy?

No.  The documentation of @code{map-extents} states that it will iterate
across the extents as long as @var{function} returns @code{nil}.
Unexperienced programmers often forget to return @code{nil} explicitly,
which results in buggy code.  For instance, the following code is
supposed to delete all the extents in a buffer, and issue as many
@samp{fubar!} messages.

@lisp
(map-extents (lambda (ext ignore)
               (delete-extent ext)
               (message "fubar!")))
@end lisp

Instead, it will delete only the first extent, and stop right there --
because @code{message} will return a non-nil value.  The correct code
is:

@lisp
(map-extents (lambda (ext ignore)
               (delete-extent ext)
               (message "fubar!")
               nil))
@end lisp


@node Q5.1.11
@unnumberedsec Q5.1.11: My elisp program is horribly slow.  Is there
an easy way to find out where it spends time?
@c New

@email{hniksic@@xemacs.org, Hrvoje Niksic} writes:
@quotation
Under XEmacs 20.4 and later you can use @kbd{M-x profile-key-sequence},
press a key (say @key{RET} in the Gnus Group buffer), and get the
results using @kbd{M-x profile-results}.  It should give you an idea of
where the time is being spent.
@end quotation


@node Q5.2.1
@unnumberedsec Q5.2.1: How do I turn off the sound?
@c hehe, this is neat
@c should i mention that if nothing's done, sound is off entirely?

Add the following line to your @file{init.el}:

@lisp
(setq bell-volume 0)
(setq sound-alist nil)
@end lisp

That will make your SXEmacs totally silent---even the default ding sound
(TTY beep on TTY-s) will be gone.

You can also change these with Customize.  Select from the
@code{Options} menu @code{Advanced
(Customize)->Emacs->Environment->Sound->Sound...} or type @kbd{M-x
customize @key{RET} sound @key{RET}}.


@node Q5.2.2
@unnumberedsec Q5.2.2: How do I get funky sounds instead of a boring beep?

Make sure your SXEmacs was compiled with audio and media support, and
then put this in your @file{init.el}:

@lisp
(load-default-sounds)
@end lisp


@node Q5.2.3
@unnumberedsec Q5.2.3: What's NAS, how do I get it?

@xref{Q2.0.3}, for an explanation of the @dfn{Network Audio System}.


@node Q5.2.4
@unnumberedsec Q5.2.4: Sunsite sounds don't play.

I'm having some trouble with sounds I've downloaded from sunsite.  They
play when I run them through @code{showaudio} or cat them directly to
@file{/dev/audio}, but SXEmacs refuses to play them.

@email{gutschk@@uni-muenster.de, Markus Gutschke} writes:

@quotation
[Many of] These files have an (erroneous) 24byte header that tells about
the format that they have been recorded in. If you cat them to
@file{/dev/audio}, the header will be ignored and the default behavior
for /dev/audio will be used. This happens to be 8kHz uLaw. It is
probably possible to fix the header by piping through @code{sox} and
passing explicit parameters for specifying the sampling format; you then
need to perform a 'null' conversion from SunAudio to SunAudio.
@end quotation


@node Q5.3.1
@unnumberedsec 5.3: Miscellaneous
@unnumberedsec Q5.3.1: How do you make SXEmacs indent CL if-clauses correctly?

I'd like SXEmacs to indent all the clauses of a Common Lisp @code{if} the
same amount instead of indenting the 3rd clause differently from the
first two.

One way is to add, to @file{init.el}:

@lisp
(put 'if 'lisp-indent-function nil)
@end lisp

However, note that the package @code{cl-indent} that comes with
SXEmacs sets up this kind of indentation by default.  @code{cl-indent}
also knows about many other CL-specific forms.  To use @code{cl-indent},
one can do this:

@lisp
(load "cl-indent")
(setq lisp-indent-function (function common-lisp-indent-function))
@end lisp

One can also customize @file{cl-indent.el} so it mimics the default
@code{if} indentation @code{then} indented more than the @code{else}.
Here's how:

@lisp
(put 'if 'common-lisp-indent-function '(nil nil &body))
@end lisp


@node Q5.3.2
@unnumberedsec Q5.3.2: [This question intentionally left blank]

Obsolete question, left blank to avoid renumbering.


@node Q5.3.3
@unnumberedsec Q5.3.3: How can I print WYSIWYG a font-locked buffer?

Font-lock looks nice.  How can I print (WYSIWYG) the highlighted
document?

The package @code{ps-print}, which is now included with SXEmacs, provides
the ability to do this.  The source code contains complete instructions
on its use, in
@file{$prefix/lib/sxemacs/xemacs-packages/lisp/ps-print/ps-print.el},
being the default location of an installed ps-print package.


@node Q5.3.4
@unnumberedsec Q5.3.4: Getting @kbd{M-x lpr} to work with postscript printer.

My printer is a Postscript printer and @code{lpr} only works for
Postscript files, so how do I get @kbd{M-x lpr-region} and @kbd{M-x
lpr-buffer} to work?

Put something like this in your @file{init.el}:

@lisp
(setq lpr-command "a2ps")
(setq lpr-switches '("-p" "-1"))
@end lisp

If you don't use a2ps to convert ASCII to postscript (why not, it's
free?), replace with the command you do use.  Note also that some
versions of a2ps require a @samp{-Pprinter} to ensure spooling.


@node Q5.3.5
@unnumberedsec Q5.3.5: How do I specify the paths that SXEmacs uses for finding files?

You can specify what paths to use by using a number of different flags
when running configure.  See the section MAKE VARIABLES in the top-level
file INSTALL in the SXEmacs distribution for a listing of those flags.

Most of the time, however, the simplest fix is: @strong{do not} specify
paths as you might for GNU Emacs.  SXEmacs can generally determine the
necessary paths dynamically at run time.  The only path that generally
needs to be specified is the root directory to install into.  That can
be specified by passing the @code{--prefix} flag to configure.  For a
description of the SXEmacs install tree, please consult the @file{NEWS}
file.


@node Q5.3.6
@unnumberedsec Q5.3.6: [This question intentionally left blank]

Obsolete question, left blank to avoid renumbering.


@node Q5.3.7
@unnumberedsec Q5.3.7: Can I have the end of the buffer delimited in some way?

Say, with: @samp{[END]}?

Try this:

@lisp
(let ((ext (make-extent (point-min) (point-max))))
  (set-extent-property ext 'start-closed t)
  (set-extent-property ext 'end-closed t)
  (set-extent-property ext 'detachable nil)
  (set-extent-end-glyph ext (make-glyph [string :data "[END]"])))
@end lisp

Since this is SXEmacs, you can specify an icon to be shown on
window-system devices.  To do so, change the @code{make-glyph} call to
something like this:

@lisp
(make-glyph '([xpm :file "~/something.xpm"]
              [string :data "[END]"]))
@end lisp

You can inline the @sc{xpm} definition yourself by specifying
@code{:data} instead of @code{:file}.  Here is such a full-featured
version that works on both X and TTY devices:

@lisp
(let ((ext (make-extent (point-min) (point-max))))
  (set-extent-property ext 'start-closed t)
  (set-extent-property ext 'end-closed t)
  (set-extent-property ext 'detachable nil)
  (set-extent-end-glyph ext (make-glyph '([xpm :data "\
/* XPM */
static char* eye = @{
\"20 11 7 2\",
\"__ c None\"
\"_` c #7f7f7f\",
\"_a c #fefefe\",
\"_b c #7f0000\",
\"_c c #fefe00\",
\"_d c #fe0000\",
\"_e c #bfbfbf\",
\"___________`_`_`___b_b_b_b_________`____\",
\"_________`_`_`___b_c_c_c_b_b____________\",
\"_____`_`_`_e___b_b_c_c_c___b___b_______`\",
\"___`_`_e_a___b_b_d___b___b___b___b______\",
\"_`_`_e_a_e___b_b_d_b___b___b___b___b____\",
\"_`_`_a_e_a___b_b_d___b___b___b___b___b__\",
\"_`_`_e_a_e___b_b_d_b___b___b___b___b_b__\",
\"___`_`_e_a___b_b_b_d_c___b___b___d_b____\",
\"_____`_`_e_e___b_b_b_d_c___b_b_d_b______\",
\"_`_____`_`_`_`___b_b_b_d_d_d_d_b________\",
\"___`_____`_`_`_`___b_b_b_b_b_b__________\",
@} ;"]
                                          [string :data "[END]"]))))
@end lisp

Note that you might want to make this a function, and put it to a hook.
We leave that as an exercise for the reader.


@node Q5.3.8
@unnumberedsec Q5.3.8: How do I insert today's date into a buffer?

Like this:

@lisp
(insert (current-time-string))
@end lisp


@node Q5.3.9
@unnumberedsec Q5.3.9: Are only certain syntactic character classes available for abbrevs?

@c @email{gutschk@@uni-muenster.de, Markus Gutschke} writes:
@c 
@c @quotation
@c Yes, abbrevs only expands word-syntax strings. While XEmacs does not
@c prevent you from defining (e.g. with @kbd{C-x a g} or @kbd{C-x a l})
@c abbrevs that contain special characters, it will refuse to expand
@c them. So you need to ensure, that the abbreviation contains letters and
@c digits only. This means that @samp{xd}, @samp{d5}, and @samp{5d} are
@c valid abbrevs, but @samp{&d}, and @samp{x d} are not.
@c 
@c If this sounds confusing to you, (re-)read the online documentation for
@c abbrevs (@kbd{C-h i m XEmacs @key{RET} m Abbrevs @key{RET}}), and then come back and
@c read this question/answer again.
@c @end quotation
@c 
@c Starting with XEmacs 20.3 this restriction has been lifted.

Does not apply anymore.


@node Q5.3.10
@unnumberedsec Q5.3.10: How can I get those oh-so-neat X-Face lines?

Firstly there is an ftp site which describes X-faces and has the
associated tools mentioned below, at
@uref{ftp://ftp.cs.indiana.edu:/pub/faces/}.

Then the steps are

@enumerate
@item
Create 48x48x1 bitmap with your favorite tool

@item
Convert to "icon" format using one of xbm2ikon, pbmtoicon, etc.,
and then compile the face.

@item
@example
cat file.xbm | xbm2ikon |compface > file.face
@end example

@item
Then be sure to quote things that are necessary for emacs strings:

@example
cat ./file.face | sed 's/\\/\\\\/g'
@iftex
\ @*
@end iftex
| sed 's/\"/\\\"/g' > ./file.face.quoted
@end example

@item
Then set up emacs to include the file as a mail header - there were a
couple of suggestions here---either something like:

@lisp
(setq  mail-default-headers
       "X-Face:  @email{Ugly looking text string here}")
@end lisp

Or, alternatively, as:

@lisp
(defun mail-insert-x-face ()
  (save-excursion
    (goto-char (point-min))
    (search-forward mail-header-separator)
    (beginning-of-line)
    (insert "X-Face:")
    (insert-file-contents "~/.face")))

(add-hook 'mail-setup-hook 'mail-insert-x-face)
@end lisp
@end enumerate

However, 2 things might be wrong:

Some versions of pbmtoicon produces some header lines that is not
expected by the version of compface that I grabbed. So I found I had to
include a @code{tail +3} in the pipeline like this:

@example
cat file.xbm | xbm2ikon | tail +3 |compface > file.face
@end example

Some people have also found that if one uses the @code{(insert-file)}
method, one should NOT quote the face string using the sed script .

It might also be helpful to use @email{stig@@hackvan.com, Stig's} script
(included in the compface distribution at XEmacs.org) to do the
conversion.
@comment For convenience xbm2xface is available for anonymous FTP at
@comment @uref{ftp://ftp.miranova.com/pub/xemacs/xbm2xface.pl}.

Contributors for this item:

Paul Emsley,
Ricardo Marek,
Amir J. Katz,
Glen McCort,
Heinz Uphoff,
Peter Arius,
Paul Harrison, and
Vegard Vesterheim


@node Q5.3.11
@unnumberedsec Q5.3.11: How do I add new Info directories?

You use something like:

@lisp
(setq Info-directory-list (cons
                           (expand-file-name "~/info")
                           Info-default-directory-list))
@end lisp

@email{davidm@@prism.kla.com, David Masterson} writes:

@quotation
Emacs Info and (S)XEmacs Info do many things differently.  If you're
trying to support a number of versions of Emacs, here are some notes
to remember:

@enumerate
@item
Emacs Info scans @code{Info-directory-list} from right-to-left while
SXEmacs Info reads it from left-to-right, so append to the @emph{correct}
end of the list.

@item
Use @code{Info-default-directory-list} to initialize
@code{Info-directory-list} @emph{if} it is available at startup, but not
all Emacsen define it.

@item
Emacs Info looks for a standard @file{dir} file in each of the
directories scanned from #1 and magically concatenates them together.

@item
SXEmacs Info looks for a @file{localdir} file (which consists of just the
menu entries from a @file{dir} file) in each of the directories scanned
from #1 (except the first), does a simple concatenation of them, and
magically attaches the resulting list to the end of the menu in the
@file{dir} file in the first directory.
@end enumerate

Another alternative is to convert the documentation to HTML with
texi2html and read it from a web browser like Lynx or W3.
@end quotation


@node Q5.3.12
@unnumberedsec Q5.3.12: What do I need to change to make printing work?

For regular printing there are two variables that can be customized.

@table @code
@item lpr-command
This should be set to a command that takes standard input and sends
it to a printer.  Something like:

@lisp
(setq lpr-command "lp")
@end lisp

@item lpr-switches
This should be set to a list that contains whatever the print command
requires to do its job.  Something like:

@lisp
(setq lpr-switches '("-depson"))
@end lisp
@end table

For postscript printing there are three analogous variables to
customize.

@table @code
@item ps-lpr-command
This should be set to a command that takes postscript on standard input
and directs it to a postscript printer.

@item ps-lpr-switches
This should be set to a list of switches required for
@code{ps-lpr-command} to do its job.

@item ps-print-color-p
This boolean variable should be set @code{t} if printing will be done in
color, otherwise it should be set to @code{nil}.
@end table

NOTE: It is an undocumented limitation in SXEmacs that postscript
printing (the @code{Pretty Print Buffer} menu item) @strong{requires} a
window system environment.  It cannot be used outside of X11.


@node MS Windows, Current Events, Miscellaneous, Top
@unnumbered 6 XEmacs on MS Windows

This is part 6 of the SXEmacs Frequently Asked Questions list, written
by Sebastian Freundt and others.

@menu
* Q6.0.1::      Why did SXEmacs cut all support for Windows?
@end menu

@node Q6.0.1
@unnumberedsec Q6.0.1: Why did SXEmacs cut all support for Windows?

Short answer:
MS Windows is not Posix conform.

Flame answer:
MS Windows steenks.

Long answer:
Maintaining code for a platform that @strong{none} of the developers
use is a little hairy.  Besides, even if that were case, writing
POSIX-conform code while simultaneously regarding the madnesses (yes,
there are many of them) from Redmond, and preferrably sustaining the
perfomance is absolutely impossible.  There is much code which has not
been optimised (or sometimes even de-optimised) merely to take some
windows concept into account.


@node Current Events, , MS Windows, Top
@unnumbered 7 What the Future Holds

This is part 7 of the SXEmacs Frequently Asked Questions list.  This
section will change frequently, and (in theory) should contain any
interesting items that have transpired recently. (But in practice it's
not getting updated like this.)

This section also contains descriptions of the new features in all the
recent releases of SXEmacs.  For the most part, the information below is
a synopsis of the more complete information that can be found in the
file @file{NEWS} in the @file{etc} directory of the SXEmacs distribution.
You can view this file in SXEmacs using @kbd{C-h n} or the @samp{Help}
menu.

Information on older versions of SXEmacs can be found in @file{ONEWS}
in the same directory, or @file{OONEWS} for really old versions.

@menu
* Q7.0.1::      What new features will be in SXEmacs soon?
* Q7.0.2::      What's new in SXEmacs 22.1.0?
* Q7.0.3::      What's new in SXEmacs 22.1.1?
* Q7.0.4::      What's new in SXEmacs 22.1.2?
* Q7.0.5::      What's new in SXEmacs 22.1.3?
* Q7.0.6::      What's new in SXEmacs 22.1.4?
@end menu

@node Q7.0.1
@unnumberedsec Q7.0.1: What new features will be in SXEmacs soon?

@strong{YOU} tell @strong{ME}!


@node Q7.0.2
@unnumberedsec Q7.0.2: What's new in SXEmacs 22.1.0?

This is the first release of SXEmacs.  It is a fork of XEmacs
21.4.16.  The vast majority of the changes between SXEmacs 22.1.0 and
the code it descended from, XEmacs 21.4.16, are purely renaming
"XEmacs" to "SXEmacs".

@node Q7.0.3
@unnumberedsec Q7.0.3: What's new in SXEmacs 22.1.1?

@itemize @bullet
@item
@var{user-init-directory} set to @file{~/.sxemacs} -- Youngs.

Symlinking this to your old @file{~/.xemacs} directory is enough to
get up and running with SXEmacs.

@item
Packages hierarchy default set to @file{$prefix/lib/sxemacs} -- Youngs.

Symlinking this to your old @file{$prefix/lib/xemacs} directory is
enough to get up and running with SXEmacs.  SXEmacs will do this for
you when you do @code{make install}.

@item
Rename items in the menubar -- Slusar, Youngs.

@item
Beginnings of FFI -- Zajcev.

FFI is @dfn{Foreign Function Interface} and will allow access to functions
and libraries outside of SXEmacs from within lisp.  Not completed yet,
but the basic infrastructure is in place.

@item
FreeBSD build fixes -- Slusar.

@item
@code{M-x report-sxemacs-bug} -- Youngs.

For now, this is just a wrapper around report-xemacs-bug with the
appropriate variables set to SXEmacs values.

@item
Fix etags.c -- Slusar.

Avoid a segv.

@item
@code{M-x build-report} -- Youngs.

Make it work for SXEmacs.

@item
Fix major bug in regex.c

This fixed a whole swag of crashes involving regexps and
syntax-tables. 

@item
Sync up with XEmacs 21.4 -- Various Developers.
@end itemize


@node Q7.0.4
@unnumberedsec Q7.0.4: What's new in SXEmacs 22.1.2?

@itemize @bullet
@item
autoconf 2.59 compatible configure scripts -- Youngs, Purvis.

Many configure options have changed.  Please run @code{./configure --help}
to see what the new options are.

@item
Most win32 code is now gone -- Youngs, Freundt.

@item
@code{describe-installation} report libc version on Slackware -- Youngs.

@item
etags.c updated to Francesco's version 17.11 -- Youngs.

@item
Support @code{ls --dired} properly -- Sperber.

@item
FFI (Foreign Function Interface) updates -- Zajcev.

One of the most exciting things is that this version of SXEmacs can
download files from the internet _without_ the need of any XEmacs
packages being installed.  If you have libcurl and enable FFI in
SXEmacs at build time, you can:

@example
(require 'ffi-curl)
(curl:download "http://www.somedomain.com/path/file"
               "/tmp/file")
@end example

To put your mind at ease, libcurl is @strong{NOT} needed to build SXEmacs.
The above will work even if you install libcurl after
building/installing SXEmacs.

@item
Don't echo GC messages for non-string GC'ing -- Zajcev.

This drastically reduces the number of "Garbage Collecting" messages
that you see in the echo area.  Garbage collection is still happening,
it is just not in your face as much.

@item
movemail.c security fixes -- Oskarsson.

@item
PUI's *packages* buffer enhancements -- Koch.

@item
Saner fallbacks for `backup-buffer' -- Youngs.

Based on an idea from JWZ, if the backup can't be written, try in
`auto-save-directory', and if that fails, fall back to $HOME.

@item
OpenSSL support -- Freundt.

Of course. The OpenSSL library itself is actually separated into two
libraries: libcrypto and libssl.  libcrypto is the part which comes to
elisp with the current API.  libssl is planned for the near future.

With this interface/gateway we now have access to the wonderful world
of static cryptography (static here means no handshake/protocols/etc.).

The API contains:

@itemize @bullet
@item
the OpenSSL PRNG = (pseudo) random number generator to provide
generating cryptographically secure randomness

@item
the OpenSSL MDs (message digests) to provide all sorts of hashing
(we had an md5 implementation already)

@item
the HMAC aka keyed hashing aka message authentication code to provide
hashes secured by a password

@item
the CIPHER engine (i.e. symmetric crypto systems) to provide
encryption/decryption routines secured by a password

@item
the PKEY engine (i.e. asymmetric crypto systems) to provide generation
and distribution of private/public key pairs (as probably known by
gpg)

@item
the HYBRIDe engine aka PKCS aka public key crypto systems to provide
encryption based on (foreign) public keys and decryption with own
private keys to provide also digital signatures and verification (as
probably known by gpg)
@end itemize

@item
Remove most of the generated files from the repo -- Youngs, Freundt.

@item
Allow suppression of WM decorations -- Turnbull.

This makes balloon-help windows infinitely better behaved.  Thank you
very much, Steve T.

@item
Fontify *scratch* buffer according to user's settings -- Kehoe.

@item
Fix bug hanging SXEmacs when yanking > 260kb -- Kehoe.

@item
lispref manual updated for SXEmacs -- Freundt.

@item
PostgreSQL updates (mainly doc updates) -- Frenudt.
@end itemize


@node Q7.0.5
@unnumberedsec Q7.0.5: What's new in SXEmacs 22.1.3?

@itemize @bullet
@item
OpenSSL updates, improvements, and fixes -- Freundt.

@item
FFI updates, and fixes -- Zajcev.

FFI now defaults to "on" if libffi can be found at configure time.  It
you don't want this, use: `--disable-ffi'.

FTP downloads with `curl:download' is working properly now.  And with
HTTP transfers you can transfer just the HTTP header for a file if you
wish.

@item
Extent/glyph fixes -- Sidwell, Kuehl.

@item
32 mouse buttons supported -- Youngs.

(global-set-key [(button32)] 'some-function) is valid in SXEmacs.

@item
Modeline tweaks -- Ferreira.

Move line/column number indicators to left side (aka XE 21.5)

@item
@code{M-x uptime} -- Youngs.

Every good OS has an uptime util, SXEmacs is no exception.  Reports
uptime in various formats.

@item
ia64 build fixes -- Lesjak.

@item
@kbd{C-h n} will no longer find NEWS files from packages -- Youngs.

@item
List of package mirrors updated -- Aichner, Skyttä.

@item
Bootstrappable PUI -- Youngs.

SXEmacs no longer needs to have _any_ packages pre-installed before
PUI can be used.  See (Info-goto-node "(sxemacs)Bootstrapping PUI").

@item
Bignums, and a whole swag of sexy new number goodness -- Freundt.

Bignums, bigfloats, and ratios that you may know from XEmacs 21.5 are
now in SXEmacs.  That and a whole lot more...

Features provided when all of the library demands are met:

@example
  (featurep 'bigz) and 
  (featurep 'bignum)       <=> if MPZ from GMP or BSD MP is present
  
  (featurep 'bigq) and
  (featurep 'ratio)        <=> if MPQ from GMP is present
  
  (featurep 'bigf) and
  (featurep 'bigfloat)     <=> if MPF from GMP is present
  
  (featurep 'bigfr)        <=> if MPFR is present
  
  (featurep 'bigc)         <=> if MPC is present
  
  (featurep 'number-types) <=> if one of the above features is
  provided
@end example

For complete details see: (Info-goto-node "(lispref)Enhanced Number Types")

@item
Raw strings -- Kuehl.

SXEmacs tries to relieve backslashitis by implementing raw strings.
You'll imediately notice the benefit of raw strings when use them for
those hairy regexps.  Consider the regular expression (from
font-latex.el)... 

@example
  "\\(?:^\\|[^\\]\\)\\(?:\\\\\\\\\\)*\\(\\\\[@@A-Za-z]+\\)"

As a raw string it could be written as...

  #r"\(?:^\|[^\]\)\(?:\)*\(\\[@@A-Za-z]+\)"
@end example

Most of the SXEmacs core lisp code has been converted over to using
raw strings whereever appropriate.

@item
Improved font-locking in a TTY -- Ferreira.

To illustrate this...

@example
  $ sxemacs -nw -vanilla

...and look at the modeline.  Now open a .c file and turn on
font-lock... 

  C-x C-f /path/to/file.c RET
  M-x font-lock-mode RET
@end example

@item
Compiler fixes -- Zajcev.

@item
SXEmacs can no longer be built with a C++ compiler -- Youngs.

To build SXEmacs you will need a C compiler at least the equivalent of
GCC 2.95.3.  Building with a C++ compiler is no longer supported.

@item
Autoconf fixes, updates -- Freundt, Kuehl, Youngs.

All autoconf options now have a help string (for ./configure --help)
and the default setting for each option is noted.

@item
PostgreSQL auto-detection improved -- Youngs.

If pg_config is in your $PATH, SXEmacs will add PostgreSQL support at
configure/build time.

@item
Documentation (Texinfo) updates -- Freundt, Youngs.

The SXEmacs manual is now called "sxemacs" instead of "xemacs".  C-h
C-i sxemacs RET to read it.

Most of the Texinfo docs now have been updated to say "SXEmacs"
whereever appropriate instead of "XEmacs".

@item
GTK (version 1.2) build fixes -- Youngs.
@end itemize


@node Q7.0.6
@unnumberedsec Q7.0.6: What's new in SXEmacs 22.1.4?

@itemize @bullet
@item
Many more image formats via FFI/libWand -- Freundt.

FFI-enabled SXEmacs can load up libWand and thus display any image
format that libWand (ImageMagick) supports.

@item
Lots of updates to the ENT (Enhanced Number Types) code -- Freundt.

@item
Mule is on by default -- Youngs.

@item
Embeddable keyboard macros -- Kuehl.

This means that the following sort of thing is possible:

@example
C-x ( bar C-x )
C-x ( foo C-x e C-x )

C-x e
=> foo bar
@end example

@item
Default widgets/dialogs to Athena instead of Motif -- Youngs.

@item
OpenSSL updates -- Freundt.

Digest, encryption, and decryption routines that operate on files has
been added.  Previously this was only available for buffers.

@item
Build reports have been revamped -- Youngs, Freundt.

The SXEmacs build report no longer conflicts with the XEmacs
build-report.el.  Plus ours also reports on shared lib dependencies
and config.h stuff.  Sending from Gnus is also supported.

@item
FFI updates/fixes -- Youngs, Zajcev, Freundt.

@item
Ability to build postscript, pdf, and html docs -- Ferreira.

@item
Double linked lists and bloom filters implemented -- Freundt.

Bloom filters are a space and time-efficient way to decide about the
membership of an element to a given set. Using lisp-lists or vectors,
one usually has to traverse the entire list or vector, before
membership can be decided.  Using hash tables, membership decision is
in O(1) (bloom filters also decide in O(1)), but the hash-table's size
grows proportionally with the number n of elements, thus its space
complexity is O(n), whereas Bloom filters take a constant amount of
space regardless how many elements are in it.

@item
Lightning fast recursive version of directory-files -- Freundt.

It's called `directory-files-recur' and in some situations it is even
faster than GNU's find(1).

@item
Portuguese added to etc/HELLO -- Ferreira.

@item
Massive improvements, enhancements for multimedia (audio) -- Freundt.

SXEmacs supports several "sound servers" like: OSS, NAS, ESD, Polypaudio,
ALSA, aRts, and Jack.  And media streams can be handled by sndfile, ffmpeg,
sox, mad, xine, gstreamer.  The SXEmacs developers recommend Polyp/ffmpeg
whenever possible.

And yes, SXEmacs @emph{can} play mp3 files. :-)

@item
Autoconf fixes/updates -- Youngs, Freundt.

All of the enable/disable options have been converted to with/without
options.  This allows us to sort them into groups.

Also fixes were made to allow building on FreeBSD and NetBSD.

@item
Big update for the FAQ -- Youngs, Freundt.

@item
Server Sockets! -- Ferreira.

SXEmacs now has server sockets (Yay!).  See
`open-network-server-stream'.

@item
Compiler fixes (gcc 2.95) -- Freundt.

@item
bug-reporter update -- Youngs.

`report-sxemacs-bug' now directs people to our BugZilla installation
at @url{http://issues.sxemacs.org/}

@item
Documentation updates/fixes/improvements -- Youngs, Ferreira, Freundt.
@end itemize

@bye
